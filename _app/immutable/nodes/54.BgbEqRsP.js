import{s as ds,d as W,e as gs,f as ps,n as xs}from"../chunks/scheduler.D6VJxl8L.js";import{S as fs,i as ms,m as _s,n as ws,o as Ts,t as qs,a as Cs,p as Hs,e as l,s as p,H as P,c as r,q as u,h as c,d as m,r as B,g as o,u as R,j as k,k as i}from"../chunks/index.CLAVN-Y5.js";import{g as Ls,a as cs}from"../chunks/code-snippet.Gym6WUAG.js";import{B as Ss}from"../chunks/BlogLayout.BMJM32nZ.js";import{t as Es}from"../chunks/twitter-card-image.C3bQ3Oc7.js";function Ms(_){let t,y='Link: <a href="https://frontend.horse/articles/amazing-animation-techniques-with-gsap/" rel="nofollow">https://frontend.horse/articles/amazing-animation-techniques-with-gsap/</a>',h,a,n,v='<a href="#split-text-from-phrase-to-animate-character-individually" id="split-text-from-phrase-to-animate-character-individually">Split text from phrase to animate character individually</a>',w,T,Y='<li>Greensock <a href="https://greensock.com/splittext/" rel="nofollow">SplitText</a> plugin</li>',U,q,I,hs=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">mySplitText</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">SplitText</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;#quote&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> &#123;type</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-token-string-expression)">&quot;words,chars&quot;</span><span style="color: var(--shiki-color-text)">&#125;)</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-token-comment)">//an array of all the divs that wrap each character</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">const</span><span style="color: var(--shiki-color-text)"> chars </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">mySplitText</span><span style="color: var(--shiki-color-text)">.chars;</span></span></code></pre>`,X,C,Z='<li>Splitting.js <a href="https://splitting.js.org/" rel="nofollow">https://splitting.js.org/</a></li>',F,H,ss="Add data-splitting to element",J,L,j,vs=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">data-splitting</span><span style="color: var(--shiki-color-text)">&gt;ABC&lt;/</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">script</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">Splitting</span><span style="color: var(--shiki-color-text)">();</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">script</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,$,d,S,ts='<a href="#cylinder-rotation-effect" id="cylinder-rotation-effect">Cylinder Rotation Effect</a>',K,E,z,ys=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-function)">.element</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">/* make the center of origin behind the characters */</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">transform-origin</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">center center -100</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">/* comment this out to see the back of the letters */</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">backface-visibility</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">hidden</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">animation</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">rotate 5</span><span style="color: var(--shiki-token-keyword)">s</span><span style="color: var(--shiki-token-constant)"> linear infinite</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">@keyframes</span><span style="color: var(--shiki-color-text)"> rotate &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  from &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">transform</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">rotateX</span><span style="color: var(--shiki-token-constant)">(0</span><span style="color: var(--shiki-token-keyword)">deg</span><span style="color: var(--shiki-token-constant)">)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  to &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">transform</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">rotateX</span><span style="color: var(--shiki-token-constant)">(360</span><span style="color: var(--shiki-token-keyword)">deg</span><span style="color: var(--shiki-token-constant)">)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,A,x,es='<h2><a href="#create-custom-easing-function-using-greensock-ease-visualiser" id="create-custom-easing-function-using-greensock-ease-visualiser">Create custom easing function using GreenSock Ease Visualiser</a></h2> <p><a href="https://greensock.com/docs/v3/Eases" rel="nofollow">https://greensock.com/docs/v3/Eases</a></p>',O,f,ns='<h2><a href="#infinite-looping" id="infinite-looping">Infinite looping</a></h2> <ul><li>use linear ease</li> <li>animate until the ending point is the same as starting point, then restart the animation</li></ul>',V,g,M,as='<a href="#masking-using-svg-mask" id="masking-using-svg-mask">Masking using svg mask</a>',Q,b,G,us=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">svg</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">defs</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &lt;</span><span style="color: var(--shiki-token-string-expression)">mask</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">id</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;jm-mask&quot;</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      &lt;</span><span style="color: var(--shiki-token-string-expression)">path</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">d</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;...&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &lt;/</span><span style="color: var(--shiki-token-string-expression)">mask</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;/</span><span style="color: var(--shiki-token-string-expression)">defs</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">rect</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">class</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;stage&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">width</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;716&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">height</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;1020&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">fill</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;red&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">mask</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;url(#jm-mask)&quot;</span><span style="color: var(--shiki-color-text)">/&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">svg</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`;return{c(){t=l("p"),t.innerHTML=y,h=p(),a=l("section"),n=l("h2"),n.innerHTML=v,w=p(),T=l("ul"),T.innerHTML=Y,U=p(),q=l("div"),I=new P(!1),X=p(),C=l("ul"),C.innerHTML=Z,F=p(),H=l("p"),H.textContent=ss,J=p(),L=l("div"),j=new P(!1),$=p(),d=l("section"),S=l("h2"),S.innerHTML=ts,K=p(),E=l("div"),z=new P(!1),A=p(),x=l("section"),x.innerHTML=es,O=p(),f=l("section"),f.innerHTML=ns,V=p(),g=l("section"),M=l("h2"),M.innerHTML=as,Q=p(),b=l("div"),G=new P(!1),this.h()},l(s){t=r(s,"P",{"data-svelte-h":!0}),u(t)!=="svelte-171h4w3"&&(t.innerHTML=y),h=c(s),a=r(s,"SECTION",{});var e=m(a);n=r(e,"H2",{"data-svelte-h":!0}),u(n)!=="svelte-1vbzw35"&&(n.innerHTML=v),w=c(e),T=r(e,"UL",{"data-svelte-h":!0}),u(T)!=="svelte-1x806n1"&&(T.innerHTML=Y),U=c(e),q=r(e,"DIV",{class:!0});var os=m(q);I=B(os,!1),os.forEach(o),X=c(e),C=r(e,"UL",{"data-svelte-h":!0}),u(C)!=="svelte-eoa5or"&&(C.innerHTML=Z),F=c(e),H=r(e,"P",{"data-svelte-h":!0}),u(H)!=="svelte-10p2a35"&&(H.textContent=ss),J=c(e),L=r(e,"DIV",{class:!0});var is=m(L);j=B(is,!1),is.forEach(o),e.forEach(o),$=c(s),d=r(s,"SECTION",{});var N=m(d);S=r(N,"H2",{"data-svelte-h":!0}),u(S)!=="svelte-ceskxl"&&(S.innerHTML=ts),K=c(N),E=r(N,"DIV",{class:!0});var ls=m(E);z=B(ls,!1),ls.forEach(o),N.forEach(o),A=c(s),x=r(s,"SECTION",{"data-svelte-h":!0}),u(x)!=="svelte-k83xt9"&&(x.innerHTML=es),O=c(s),f=r(s,"SECTION",{"data-svelte-h":!0}),u(f)!=="svelte-83sw3t"&&(f.innerHTML=ns),V=c(s),g=r(s,"SECTION",{});var D=m(g);M=r(D,"H2",{"data-svelte-h":!0}),u(M)!=="svelte-ytpgzy"&&(M.innerHTML=as),Q=c(D),b=r(D,"DIV",{class:!0});var rs=m(b);G=B(rs,!1),rs.forEach(o),D.forEach(o),this.h()},h(){I.a=null,R(q,"class","code-section"),j.a=null,R(L,"class","code-section"),z.a=null,R(E,"class","code-section"),G.a=null,R(b,"class","code-section")},m(s,e){k(s,t,e),k(s,h,e),k(s,a,e),i(a,n),i(a,w),i(a,T),i(a,U),i(a,q),I.m(hs,q),i(a,X),i(a,C),i(a,F),i(a,H),i(a,J),i(a,L),j.m(vs,L),k(s,$,e),k(s,d,e),i(d,S),i(d,K),i(d,E),z.m(ys,E),k(s,A,e),k(s,x,e),k(s,O,e),k(s,f,e),k(s,V,e),k(s,g,e),i(g,M),i(g,Q),i(g,b),G.m(us,b)},p:xs,d(s){s&&(o(t),o(h),o(a),o($),o(d),o(A),o(x),o(O),o(f),o(V),o(g))}}}function bs(_){let t,y;const h=[_[0],ks];let a={$$slots:{default:[Ms]},$$scope:{ctx:_}};for(let n=0;n<h.length;n+=1)a=W(a,h[n]);return t=new Ss({props:a}),{c(){_s(t.$$.fragment)},l(n){ws(t.$$.fragment,n)},m(n,v){Ts(t,n,v),y=!0},p(n,[v]){const w=v&1?Ls(h,[v&1&&cs(n[0]),v&0&&cs(ks)]):{};v&2&&(w.$$scope={dirty:v,ctx:n}),t.$set(w)},i(n){y||(qs(t.$$.fragment,n),y=!0)},o(n){Cs(t.$$.fragment,n),y=!1},d(n){Hs(t,n)}}}const ks={title:"Amazing Animation Techniques with GSAP",tags:["greensock","web animation"],description:"Link: https://frontend.horse/articles/amazing-animation-techniques-with-gsap/Split text from phrase to animate character individuallyGreensock SplitText pluginSplitting.js https://splitting.js.org/Add data-splitting to element...",tableOfContents:[{link:"split-text-from-phrase-to-animate-character-individually",title:"Split text from phrase to animate character individually"},{link:"cylinder-rotation-effect",title:"Cylinder Rotation Effect"},{link:"create-custom-easing-function-using-greensock-ease-visualiser",title:"Create custom easing function using GreenSock Ease Visualiser"},{link:"infinite-looping",title:"Infinite looping"},{link:"masking-using-svg-mask",title:"Masking using svg mask"}]};function Is(_,t,y){return gs("blog",{image:Es}),_.$$set=h=>{y(0,t=W(W({},t),ps(h)))},t=ps(t),[t]}class Vs extends fs{constructor(t){super(),ms(this,t,Is,bs,ds,{})}}export{Vs as component};
