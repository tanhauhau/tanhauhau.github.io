import{s as C,d as u,e as M,f as m,n as S}from"../chunks/scheduler.D6VJxl8L.js";import{S as L,i as T,m as q,n as P,o as j,t as E,a as I,p as B,e as h,s as g,H as O,c as v,d as f,q as _,h as w,r as V,g as x,u as D,j as N,k}from"../chunks/index.CLAVN-Y5.js";import{g as U,a as b}from"../chunks/code-snippet.Gym6WUAG.js";import{B as Y}from"../chunks/BlogLayout.BLHkC4CD.js";import{t as z}from"../chunks/twitter-card-image.C3bQ3Oc7.js";function A(r){let s,n,t='<a href="#make-custom-property-animatable" id="make-custom-property-animatable">Make custom property animatable</a>',l,a,o="<li>registerProperty</li>",i,p,y,$=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">id</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;hero&quot;</span><span style="color: var(--shiki-color-text)">&gt;&lt;/</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">style</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">#hero</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">display</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">block</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">height</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">100</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">width</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">100</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">background</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">red</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">transform</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">scaleY</span><span style="color: var(--shiki-token-constant)">(</span><span style="color: var(--shiki-token-function)">var</span><span style="color: var(--shiki-token-constant)">(--scale</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-token-constant)"> 1))</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">animation</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">scale 1</span><span style="color: var(--shiki-token-keyword)">s</span><span style="color: var(--shiki-token-constant)"> linear infinite</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">@keyframes</span><span style="color: var(--shiki-color-text)"> scale &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    to &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      --scale</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1.5</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">style</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">script</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">CSS</span><span style="color: var(--shiki-token-function)">.registerProperty</span><span style="color: var(--shiki-color-text)">(&#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;--scale&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    syntax</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;&lt;number&gt;&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    inherits</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    initialValue</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;1&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">script</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`;return{c(){s=h("section"),n=h("h2"),n.innerHTML=t,l=g(),a=h("ul"),a.innerHTML=o,i=g(),p=h("div"),y=new O(!1),this.h()},l(c){s=v(c,"SECTION",{});var e=f(s);n=v(e,"H2",{"data-svelte-h":!0}),_(n)!=="svelte-y6ybq0"&&(n.innerHTML=t),l=w(e),a=v(e,"UL",{"data-svelte-h":!0}),_(a)!=="svelte-1oibi6j"&&(a.innerHTML=o),i=w(e),p=v(e,"DIV",{class:!0});var d=f(p);y=V(d,!1),d.forEach(x),e.forEach(x),this.h()},h(){y.a=null,D(p,"class","code-section")},m(c,e){N(c,s,e),k(s,n),k(s,l),k(s,a),k(s,i),k(s,p),y.m($,p)},p:S,d(c){c&&x(s)}}}function F(r){let s,n;const t=[r[0],H];let l={$$slots:{default:[A]},$$scope:{ctx:r}};for(let a=0;a<t.length;a+=1)l=u(l,t[a]);return s=new Y({props:l}),{c(){q(s.$$.fragment)},l(a){P(s.$$.fragment,a)},m(a,o){j(s,a,o),n=!0},p(a,[o]){const i=o&1?U(t,[o&1&&b(a[0]),o&0&&b(H)]):{};o&2&&(i.$$scope={dirty:o,ctx:a}),s.$set(i)},i(a){n||(E(s.$$.fragment,a),n=!0)},o(a){I(s.$$.fragment,a),n=!1},d(a){B(s,a)}}}const H={title:"CSS Houdini",tags:["css houdini"],description:"Make custom property animatableregisterProperty...",tableOfContents:[{link:"make-custom-property-animatable",title:"Make custom property animatable"}]};function G(r,s,n){return M("blog",{image:z}),r.$$set=t=>{n(0,s=u(u({},s),m(t)))},s=m(s),[s]}class X extends L{constructor(s){super(),T(this,s,G,F,C,{})}}export{X as component};
