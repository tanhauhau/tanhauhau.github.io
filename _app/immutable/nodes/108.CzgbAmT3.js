import{s as tt,d as N,e as st,f as Q,n as et}from"../chunks/scheduler.D6VJxl8L.js";import{S as nt,i as ot,m as at,n as lt,o as it,t as rt,a as ct,p as pt,e as l,s as r,H as kt,c as i,d as V,q as c,h as p,r as ht,g as x,u as dt,j as C,k as n}from"../chunks/index.CLAVN-Y5.js";import{g as vt,a as J}from"../chunks/code-snippet.Gym6WUAG.js";import{B as yt}from"../chunks/BlogLayout.BPekX0dI.js";import{t as xt}from"../chunks/twitter-card-image.C3bQ3Oc7.js";function gt(g){let t,o,h='<a href="#stacking-order-within-the-same-stacking-context" id="stacking-order-within-the-same-stacking-context">Stacking Order within the same Stacking Context</a>',d,e,k="From back to front",u,f,j="<strong>1. stacking context root element</strong>",O,m,M,X=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">class</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;parent&quot;</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">class</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;child&quot;</span><span style="color: var(--shiki-color-text)">&gt;&lt;/</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">style</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">height</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">50</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">width</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">50</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">.child</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">background</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">red</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">z-index</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">-1</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">position</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">relative</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">.parent</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">background</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">green</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">/* creates a new stacking context */</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">transform</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">scale</span><span style="color: var(--shiki-token-constant)">(1)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">style</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,q,_,B=`<p>Adding <code class="inline">transform: scale(1)</code> creates a new stacking context.
<code class="inline">.child</code> initially stacks behind <code class="inline">.parent</code>, but as <code class="inline">.parent</code> becomes the root of the new stacking context, <code class="inline">.child</code> comes in front of <code class="inline">.parent</code>.</p>`,$,w,U="<strong>2. positioned element with negative z-index</strong>",I,b,F='<li>Higher values stacked in front of lower values, <code class="inline">z-index: -1</code> in front of <code class="inline">z-index: -2</code></li>',E,T,G='<strong>3. positioned element with <code class="inline">z-index: auto</code></strong>',P,H,W="<strong>4. positioned element with positive z-index</strong>",A,L,Y='<li>Higher values stacked in front of lower values, <code class="inline">z-index: 2</code> in front of <code class="inline">z-index: 1</code></li>',z,v,Z='<h2><a href="#global-stacking-order-with-stacking-context" id="global-stacking-order-with-stacking-context">Global Stacking Order with Stacking Context</a></h2> <p>All the elements within the same stacking context move forward / backward together along with the root element.</p>',S,y,D='<h2><a href="#links" id="links">Links</a></h2> <ul><li><a href="https://philipwalton.com/articles/what-no-one-told-you-about-z-index/" rel="nofollow">What No One Told You About Z-Index</a></li></ul>';return{c(){t=l("section"),o=l("h2"),o.innerHTML=h,d=r(),e=l("p"),e.textContent=k,u=r(),f=l("p"),f.innerHTML=j,O=r(),m=l("div"),M=new kt(!1),q=r(),_=l("blockquote"),_.innerHTML=B,$=r(),w=l("p"),w.innerHTML=U,I=r(),b=l("ul"),b.innerHTML=F,E=r(),T=l("p"),T.innerHTML=G,P=r(),H=l("p"),H.innerHTML=W,A=r(),L=l("ul"),L.innerHTML=Y,z=r(),v=l("section"),v.innerHTML=Z,S=r(),y=l("section"),y.innerHTML=D,this.h()},l(a){t=i(a,"SECTION",{});var s=V(t);o=i(s,"H2",{"data-svelte-h":!0}),c(o)!=="svelte-1tzyzvl"&&(o.innerHTML=h),d=p(s),e=i(s,"P",{"data-svelte-h":!0}),c(e)!=="svelte-8dlw3t"&&(e.textContent=k),u=p(s),f=i(s,"P",{"data-svelte-h":!0}),c(f)!=="svelte-5ozrzr"&&(f.innerHTML=j),O=p(s),m=i(s,"DIV",{class:!0});var K=V(m);M=ht(K,!1),K.forEach(x),q=p(s),_=i(s,"BLOCKQUOTE",{"data-svelte-h":!0}),c(_)!=="svelte-ilz6s8"&&(_.innerHTML=B),$=p(s),w=i(s,"P",{"data-svelte-h":!0}),c(w)!=="svelte-biazbn"&&(w.innerHTML=U),I=p(s),b=i(s,"UL",{"data-svelte-h":!0}),c(b)!=="svelte-6d8jin"&&(b.innerHTML=F),E=p(s),T=i(s,"P",{"data-svelte-h":!0}),c(T)!=="svelte-nnrhh1"&&(T.innerHTML=G),P=p(s),H=i(s,"P",{"data-svelte-h":!0}),c(H)!=="svelte-dkw3jh"&&(H.innerHTML=W),A=p(s),L=i(s,"UL",{"data-svelte-h":!0}),c(L)!=="svelte-b902d1"&&(L.innerHTML=Y),s.forEach(x),z=p(a),v=i(a,"SECTION",{"data-svelte-h":!0}),c(v)!=="svelte-1umy1s6"&&(v.innerHTML=Z),S=p(a),y=i(a,"SECTION",{"data-svelte-h":!0}),c(y)!=="svelte-14sxs7q"&&(y.innerHTML=D),this.h()},h(){M.a=null,dt(m,"class","code-section")},m(a,s){C(a,t,s),n(t,o),n(t,d),n(t,e),n(t,u),n(t,f),n(t,O),n(t,m),M.m(X,m),n(t,q),n(t,_),n(t,$),n(t,w),n(t,I),n(t,b),n(t,E),n(t,T),n(t,P),n(t,H),n(t,A),n(t,L),C(a,z,s),C(a,v,s),C(a,S,s),C(a,y,s)},p:et,d(a){a&&(x(t),x(z),x(v),x(S),x(y))}}}function ut(g){let t,o;const h=[g[0],R];let d={$$slots:{default:[gt]},$$scope:{ctx:g}};for(let e=0;e<h.length;e+=1)d=N(d,h[e]);return t=new yt({props:d}),{c(){at(t.$$.fragment)},l(e){lt(t.$$.fragment,e)},m(e,k){it(t,e,k),o=!0},p(e,[k]){const u=k&1?vt(h,[k&1&&J(e[0]),k&0&&J(R)]):{};k&2&&(u.$$scope={dirty:k,ctx:e}),t.$set(u)},i(e){o||(rt(t.$$.fragment,e),o=!0)},o(e){ct(t.$$.fragment,e),o=!1},d(e){pt(t,e)}}}const R={title:"What No One Told You About Z-Index",tags:["z-index","stacking-order"],description:"Stacking Order within the same Stacking ContextFrom back to front1. stacking context root elementAdding `transform: scale(1)` creates a new stacking context.\n`.child` initially stacks behind `.parent`, but as ...",tableOfContents:[{link:"stacking-order-within-the-same-stacking-context",title:"Stacking Order within the same Stacking Context"},{link:"global-stacking-order-with-stacking-context",title:"Global Stacking Order with Stacking Context"},{link:"links",title:"Links"}]};function ft(g,t,o){return st("blog",{image:xt}),g.$$set=h=>{o(0,t=N(N({},t),Q(h)))},t=Q(t),[t]}class Ht extends nt{constructor(t){super(),ot(this,t,ft,ut,tt,{})}}export{Ht as component};
