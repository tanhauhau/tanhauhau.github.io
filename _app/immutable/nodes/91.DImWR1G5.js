import{s as H,d as g,e as $,f as q,n as z}from"../chunks/scheduler.D6VJxl8L.js";import{S as T,i as M,m as j,n as C,o as P,t as A,a as B,p as I,e as k,s as y,H as S,c as v,q as f,h as _,d as D,r as E,g as c,u as U,j as u}from"../chunks/index.CLAVN-Y5.js";import{g as V,a as w}from"../chunks/code-snippet.Gym6WUAG.js";import{B as F}from"../chunks/BlogLayout.BPekX0dI.js";import{t as G}from"../chunks/twitter-card-image.C3bQ3Oc7.js";function J(h){let e,r='Lazy quantifier in regex <code class="inline">?</code>',o,n,t='Add <code class="inline">?</code> at the behind <code class="inline">*</code> or <code class="inline">+</code> to make them less greedy.',a,l,d,b=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">sentence</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#96;a &quot;witch&quot; and her &quot;broom&quot; is one&#96;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-constant)">sentence</span><span style="color: var(--shiki-token-function)">.match</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">/&quot;.</span><span style="color: var(--shiki-token-keyword)">+</span><span style="color: var(--shiki-token-string-expression)">&quot;/</span><span style="color: var(--shiki-color-text)">); </span><span style="color: var(--shiki-token-comment)">// &#96;&quot;witch&quot; and her &quot;broom&quot;&#96;</span></span>
<span class="line"><span style="color: var(--shiki-token-comment)">// lazy</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">sentence</span><span style="color: var(--shiki-token-function)">.match</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">/&quot;.</span><span style="color: var(--shiki-token-keyword)">+?</span><span style="color: var(--shiki-token-string-expression)">&quot;/</span><span style="color: var(--shiki-color-text)">); </span><span style="color: var(--shiki-token-comment)">// &#96;&quot;witch&quot;&#96;</span></span></code></pre>`,m,p,x='<li><a href="https://twitter.com/lihautan/status/1177476277277560832" rel="nofollow">https://twitter.com/lihautan/status/1177476277277560832</a></li> <li><a href="https://javascript.info/regexp-greedy-and-lazy" rel="nofollow">https://javascript.info/regexp-greedy-and-lazy</a></li>';return{c(){e=k("p"),e.innerHTML=r,o=y(),n=k("p"),n.innerHTML=t,a=y(),l=k("div"),d=new S(!1),m=y(),p=k("ul"),p.innerHTML=x,this.h()},l(s){e=v(s,"P",{"data-svelte-h":!0}),f(e)!=="svelte-15qtz0c"&&(e.innerHTML=r),o=_(s),n=v(s,"P",{"data-svelte-h":!0}),f(n)!=="svelte-1qu0gpd"&&(n.innerHTML=t),a=_(s),l=v(s,"DIV",{class:!0});var i=D(l);d=E(i,!1),i.forEach(c),m=_(s),p=v(s,"UL",{"data-svelte-h":!0}),f(p)!=="svelte-1b1vyxa"&&(p.innerHTML=x),this.h()},h(){d.a=null,U(l,"class","code-section")},m(s,i){u(s,e,i),u(s,o,i),u(s,n,i),u(s,a,i),u(s,l,i),d.m(b,l),u(s,m,i),u(s,p,i)},p:z,d(s){s&&(c(e),c(o),c(n),c(a),c(l),c(m),c(p))}}}function K(h){let e,r;const o=[h[0],L];let n={$$slots:{default:[J]},$$scope:{ctx:h}};for(let t=0;t<o.length;t+=1)n=g(n,o[t]);return e=new F({props:n}),{c(){j(e.$$.fragment)},l(t){C(e.$$.fragment,t)},m(t,a){P(e,t,a),r=!0},p(t,[a]){const l=a&1?V(o,[a&1&&w(t[0]),a&0&&w(L)]):{};a&2&&(l.$$scope={dirty:a,ctx:t}),e.$set(l)},i(t){r||(A(e.$$.fragment,t),r=!0)},o(t){B(e.$$.fragment,t),r=!1},d(t){I(e,t)}}}const L={title:"Lazy quantifier in regex",tags:["regex"],description:"Lazy quantifier in regex `?`Add `?` at the behind `*` or `+` to make them less greedy.https://twitter.com/lihautan/status/1177476277277560832https://javascript.info/regexp-greedy-and-lazy..."};function N(h,e,r){return $("blog",{image:G}),h.$$set=o=>{r(0,e=g(g({},e),q(o)))},e=q(e),[e]}class Y extends T{constructor(e){super(),M(this,e,N,K,H,{})}}export{Y as component};
