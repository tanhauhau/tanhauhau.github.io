import"../chunks/Bzak7iHL.js";import"../chunks/kfVmCPsV.js";import{p as w,g as q,d as b,b as _,s,f as S,e as o,a as $,r as a}from"../chunks/C2PHntuy.js";import{h as n}from"../chunks/C3QlhiH-.js";import{i as C}from"../chunks/BQOOHHT8.js";import{l as j,s as A}from"../chunks/gzNpScmH.js";import{B as E}from"../chunks/B1caYEk9.js";import{t as T}from"../chunks/C3bQ3Oc7.js";const v={title:"Amazing Animation Techniques with GSAP",tags:["greensock","web animation"],description:"Link: https://frontend.horse/articles/amazing-animation-techniques-with-gsap/Split text from phrase to animate character individuallyGreensock SplitText pluginSplitting.js https://splitting.js.org/Add data-splitting to element...",tableOfContents:[{link:"split-text-from-phrase-to-animate-character-individually",title:"Split text from phrase to animate character individually"},{link:"cylinder-rotation-effect",title:"Cylinder Rotation Effect"},{link:"create-custom-easing-function-using-greensock-ease-visualiser",title:"Create custom easing function using GreenSock Ease Visualiser"},{link:"infinite-looping",title:"Infinite looping"},{link:"masking-using-svg-mask",title:"Masking using svg mask"}]},{title:X,tags:D,description:F,tableOfContents:H}=v;var z=_('<p>Link: <a href="https://frontend.horse/articles/amazing-animation-techniques-with-gsap/" rel="nofollow">https://frontend.horse/articles/amazing-animation-techniques-with-gsap/</a></p> <section><h2><a href="#split-text-from-phrase-to-animate-character-individually" id="split-text-from-phrase-to-animate-character-individually">Split text from phrase to animate character individually</a></h2> <ul><li>Greensock <a href="https://greensock.com/splittext/" rel="nofollow">SplitText</a> plugin</li></ul> <div class="code-section"><!></div> <ul><li>Splitting.js <a href="https://splitting.js.org/" rel="nofollow">https://splitting.js.org/</a></li></ul> <p>Add data-splitting to element</p> <div class="code-section"><!></div></section> <section><h2><a href="#cylinder-rotation-effect" id="cylinder-rotation-effect">Cylinder Rotation Effect</a></h2> <div class="code-section"><!></div></section> <section><h2><a href="#create-custom-easing-function-using-greensock-ease-visualiser" id="create-custom-easing-function-using-greensock-ease-visualiser">Create custom easing function using GreenSock Ease Visualiser</a></h2> <p><a href="https://greensock.com/docs/v3/Eases" rel="nofollow">https://greensock.com/docs/v3/Eases</a></p></section> <section><h2><a href="#infinite-looping" id="infinite-looping">Infinite looping</a></h2> <ul><li>use linear ease</li> <li>animate until the ending point is the same as starting point, then restart the animation</li></ul></section> <section><h2><a href="#masking-using-svg-mask" id="masking-using-svg-mask">Masking using svg mask</a></h2> <div class="code-section"><!></div></section>',1);function J(y,r){const d=j(r,["children","$$slots","$$events","$$legacy"]);w(r,!1),q("blog",{image:T}),C(),E(y,A(()=>d,()=>v,{children:(g,G)=>{var l=z(),t=s(S(l),2),e=s(o(t),4),x=o(e);n(x,()=>`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">mySplitText</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">SplitText</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;#quote&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> &#123;type</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-token-string-expression)">&quot;words,chars&quot;</span><span style="color: var(--shiki-color-text)">&#125;)</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-token-comment)">//an array of all the divs that wrap each character</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">const</span><span style="color: var(--shiki-color-text)"> chars </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">mySplitText</span><span style="color: var(--shiki-color-text)">.chars;</span></span></code></pre>`),a(e);var p=s(e,6),u=o(p);n(u,()=>`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">data-splitting</span><span style="color: var(--shiki-color-text)">&gt;ABC&lt;/</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">script</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">Splitting</span><span style="color: var(--shiki-color-text)">();</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">script</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`),a(p),a(t);var i=s(t,2),c=s(o(i),2),m=o(c);n(m,()=>`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-function)">.element</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">/* make the center of origin behind the characters */</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">transform-origin</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">center center -100</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">/* comment this out to see the back of the letters */</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">backface-visibility</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">hidden</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">animation</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">rotate 5</span><span style="color: var(--shiki-token-keyword)">s</span><span style="color: var(--shiki-token-constant)"> linear infinite</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">@keyframes</span><span style="color: var(--shiki-color-text)"> rotate &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  from &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">transform</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">rotateX</span><span style="color: var(--shiki-token-constant)">(0</span><span style="color: var(--shiki-token-keyword)">deg</span><span style="color: var(--shiki-token-constant)">)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  to &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">transform</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">rotateX</span><span style="color: var(--shiki-token-constant)">(360</span><span style="color: var(--shiki-token-keyword)">deg</span><span style="color: var(--shiki-token-constant)">)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`),a(c),a(i);var k=s(i,6),h=s(o(k),2),f=o(h);n(f,()=>`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">svg</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">defs</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &lt;</span><span style="color: var(--shiki-token-string-expression)">mask</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">id</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;jm-mask&quot;</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      &lt;</span><span style="color: var(--shiki-token-string-expression)">path</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">d</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;...&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &lt;/</span><span style="color: var(--shiki-token-string-expression)">mask</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;/</span><span style="color: var(--shiki-token-string-expression)">defs</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">rect</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">class</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;stage&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">width</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;716&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">height</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;1020&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">fill</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;red&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">mask</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;url(#jm-mask)&quot;</span><span style="color: var(--shiki-color-text)">/&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">svg</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`),a(h),a(k),$(g,l)},$$slots:{default:!0}})),b()}export{J as component};
