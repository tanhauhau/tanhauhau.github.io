import{s as xe,h as uo,E as yo,q as go,n as it,r as No,d as ce,e as Qo,f as fo}from"../chunks/scheduler.85ImRbsk.js";import{S as _e,i as me,e as t,s as n,I as os,b as he,c as e,d as v,q as h,h as l,g as o,J as ns,f as ke,u as p,j as k,k as s,L as is,C as at,l as Ao,N as sn,v as lt,m as ve,n as ue,o as ye,t as ge,a as de,p as fe,H as V,r as F}from"../chunks/index.JMRAb4ib.js";import{g as tn,a as xo}from"../chunks/code-snippet.p32Anx_S.js";import{B as en}from"../chunks/BlogLayout.TadBQAnB.js";import{P as _o}from"../chunks/prism.FWTxH3KY.js";const on=""+new URL("../assets/morphology-knockout-text.kzFHriCS.gif",import.meta.url).href,mo=""+new URL("../assets/morphology-knockout-text.uu5bcRgl.gif",import.meta.url).href,nn=""+new URL("../assets/morphology-text.vdHkCzjG.gif",import.meta.url).href,wo=""+new URL("../assets/morphology-text.sxrTTPMg.gif",import.meta.url).href,ln=""+new URL("../assets/morphology.aEqZHKPJ.gif",import.meta.url).href,bo=""+new URL("../assets/morphology.UvsbLdiq.gif",import.meta.url).href,an=""+new URL("../assets/grayscale.R0yCs9U7.webp",import.meta.url).href,rn=""+new URL("../assets/grayscale.laFC08nI.webp",import.meta.url).href,pn=""+new URL("../assets/grayscale.UPi-i96-.png",import.meta.url).href,qo=""+new URL("../assets/grayscale.8tHMK8-j.png",import.meta.url).href,cn=""+new URL("../assets/darken.J04U-gPR.webp",import.meta.url).href,hn=""+new URL("../assets/darken.pphfeqjO.webp",import.meta.url).href,kn=""+new URL("../assets/darken.maJcuwzU.png",import.meta.url).href,Lo=""+new URL("../assets/darken.2_r2SudA.png",import.meta.url).href,vn=""+new URL("../assets/lighten.gX_RNtSs.webp",import.meta.url).href,un=""+new URL("../assets/lighten.B0Dob7H3.webp",import.meta.url).href,yn=""+new URL("../assets/lighten.OUbXFvbq.png",import.meta.url).href,Mo=""+new URL("../assets/lighten.mARGDfKS.png",import.meta.url).href,gn=""+new URL("../assets/change-color.BmqbUiG2.webp",import.meta.url).href,dn=""+new URL("../assets/change-color.XpmESCYJ.webp",import.meta.url).href,fn=""+new URL("../assets/change-color.osMVFS2m.png",import.meta.url).href,To=""+new URL("../assets/change-color.RMUONHWS.png",import.meta.url).href,xn=""+new URL("../assets/blow-out-channel.SpcnaRK4.webp",import.meta.url).href,_n=""+new URL("../assets/blow-out-channel.urujIi_f.webp",import.meta.url).href,mn=""+new URL("../assets/blow-out-channel.IMczksVu.png",import.meta.url).href,$o=""+new URL("../assets/blow-out-channel.qCPIVEzh.png",import.meta.url).href,wn=""+new URL("../assets/negative-alpha.qY1Zr_kf.webp",import.meta.url).href,bn=""+new URL("../assets/negative-alpha.2tba0Vo-.webp",import.meta.url).href,qn=""+new URL("../assets/negative-alpha.8sXApB4W.png",import.meta.url).href,Ho=""+new URL("../assets/negative-alpha.rRJ6hB7Y.png",import.meta.url).href,Ln=""+new URL("../assets/yellow-filter-2.4Kip21d3.webp",import.meta.url).href,Mn=""+new URL("../assets/yellow-filter-2.b19t6m6t.webp",import.meta.url).href,Tn=""+new URL("../assets/yellow-filter-2.UjDq4w7w.png",import.meta.url).href,Ro=""+new URL("../assets/yellow-filter-2.QbWELTXH.png",import.meta.url).href,$n=""+new URL("../assets/yellow-filter.TaV_X2oe.webp",import.meta.url).href,Hn=""+new URL("../assets/yellow-filter.HPXdkv8Z.webp",import.meta.url).href,Rn=""+new URL("../assets/yellow-filter.5qM2QM_o.png",import.meta.url).href,Co=""+new URL("../assets/yellow-filter.fZF7WyoG.png",import.meta.url).href,Cn=""+new URL("../assets/red-filter.7qyxf9aN.webp",import.meta.url).href,Un=""+new URL("../assets/red-filter.JZ_I2h7P.webp",import.meta.url).href,En=""+new URL("../assets/red-filter.RVbk_YR3.png",import.meta.url).href,Uo=""+new URL("../assets/red-filter.CzQumwqt.png",import.meta.url).href,On=""+new URL("../assets/colorise-yellow.jDhoiqev.webp",import.meta.url).href,In=""+new URL("../assets/colorise-yellow.Z2swlt4t.webp",import.meta.url).href,Sn=""+new URL("../assets/colorise-yellow.roJszcxn.png",import.meta.url).href,Eo=""+new URL("../assets/colorise-yellow.7WJ9Usfc.png",import.meta.url).href,Pn=""+new URL("../assets/colorise-red.xvXSGZix.webp",import.meta.url).href,Dn=""+new URL("../assets/colorise-red.onF4nwAe.webp",import.meta.url).href,zn=""+new URL("../assets/colorise-red.w__z7v0m.png",import.meta.url).href,Oo=""+new URL("../assets/colorise-red.uQ3oKCjc.png",import.meta.url).href,Gn=""+new URL("../assets/default.plbdP88i.webp",import.meta.url).href,Nn=""+new URL("../assets/default.X7sS0Ueo.webp",import.meta.url).href,An=""+new URL("../assets/default.dWQYcrFI.png",import.meta.url).href,Io=""+new URL("../assets/default.NA_atZV1.png",import.meta.url).href,Bn=""+new URL("../assets/step-4.l90rtPBa.webp",import.meta.url).href,Vn=""+new URL("../assets/step-4.RlqlPHZP.webp",import.meta.url).href,Fn=""+new URL("../assets/step-4.4ecwgVxS.png",import.meta.url).href,So=""+new URL("../assets/step-4.dpolhPyG.png",import.meta.url).href,Wn=""+new URL("../assets/step-3.4UaHwa2-.webp",import.meta.url).href,jn=""+new URL("../assets/step-3.CB8IToAW.webp",import.meta.url).href,Kn=""+new URL("../assets/step-3.mKyTVi8g.png",import.meta.url).href,Po=""+new URL("../assets/step-3.SfFy5FY7.png",import.meta.url).href,Zn=""+new URL("../assets/step-2.5WAf0lat.webp",import.meta.url).href,Xn=""+new URL("../assets/step-2.9_zWZ_SB.webp",import.meta.url).href,Jn=""+new URL("../assets/step-2.bPMeLA4h.png",import.meta.url).href,Do=""+new URL("../assets/step-2.AlixoCg-.png",import.meta.url).href,Yn=""+new URL("../assets/step-1.92upPfFX.webp",import.meta.url).href,Qn=""+new URL("../assets/step-1.tABgpiwN.webp",import.meta.url).href,sl=""+new URL("../assets/step-1.U5UVtsRd.png",import.meta.url).href,zo=""+new URL("../assets/step-1.VUZZeu0T.png",import.meta.url).href,tl=""+new URL("../assets/hero-twitter.7Pye_RFd.jpg",import.meta.url).href;function el(g){let i,d,w='<img src="https://lihautan.com/03b36a9f76000493.png" alt="" class="svelte-16gcny3"/>',x,c,_,q,$,M,I,H,b,U,S,L,P,u,m,E,W,D,B,j,ws,z,J,rs,ps,R,ls,rt;return{c(){i=t("div"),d=t("div"),d.innerHTML=w,x=n(),c=t("div"),_=t("img"),$=n(),M=t("div"),H=n(),b=t("div"),U=t("img"),L=n(),P=t("div"),m=n(),E=os("svg"),W=os("filter"),D=os("feMorphology"),B=os("filter"),j=os("feMorphology"),ws=n(),z=t("div"),J=he("Radius: "),rs=he(g[0]),ps=n(),R=t("input"),this.h()},l(T){i=e(T,"DIV",{class:!0});var r=v(i);d=e(r,"DIV",{class:!0,"data-svelte-h":!0}),h(d)!=="svelte-1jbgoq1"&&(d.innerHTML=w),x=l(r),c=e(r,"DIV",{class:!0});var X=v(c);_=e(X,"IMG",{class:!0,src:!0,alt:!0}),$=l(X),M=e(X,"DIV",{}),v(M).forEach(o),X.forEach(o),H=l(r),b=e(r,"DIV",{class:!0});var cs=v(b);U=e(cs,"IMG",{class:!0,src:!0,alt:!0}),L=l(cs),P=e(cs,"DIV",{}),v(P).forEach(o),cs.forEach(o),m=l(r),E=ns(r,"svg",{class:!0});var hs=v(E);W=ns(hs,"filter",{id:!0});var ts=v(W);D=ns(ts,"feMorphology",{radius:!0,operator:!0}),v(D).forEach(o),ts.forEach(o),B=ns(hs,"filter",{id:!0});var nt=v(B);j=ns(nt,"feMorphology",{radius:!0,operator:!0}),v(j).forEach(o),nt.forEach(o),hs.forEach(o),r.forEach(o),ws=l(T),z=e(T,"DIV",{class:!0});var es=v(z);J=ke(es,"Radius: "),rs=ke(es,g[0]),ps=l(es),R=e(es,"INPUT",{type:!0,min:!0,max:!0,step:!0,class:!0}),es.forEach(o),this.h()},h(){p(d,"class","container svelte-16gcny3"),p(_,"class","dilate svelte-16gcny3"),uo(_.src,q="https://lihautan.com/03b36a9f76000493.png")||p(_,"src",q),p(_,"alt",""),p(c,"class","container svelte-16gcny3"),p(U,"class","erode svelte-16gcny3"),uo(U.src,S="https://lihautan.com/03b36a9f76000493.png")||p(U,"src",S),p(U,"alt",""),p(b,"class","container svelte-16gcny3"),p(D,"radius",g[0]),p(D,"operator","dilate"),p(W,"id","dilate"),p(j,"radius",g[0]),p(j,"operator","erode"),p(B,"id","erode"),p(E,"class","svelte-16gcny3"),p(i,"class","row svelte-16gcny3"),p(R,"type","range"),p(R,"min","0"),p(R,"max","20"),p(R,"step","1"),p(R,"class","svelte-16gcny3"),p(z,"class","input svelte-16gcny3")},m(T,r){k(T,i,r),s(i,d),s(i,x),s(i,c),s(c,_),s(c,$),s(c,M),s(i,H),s(i,b),s(b,U),s(b,L),s(b,P),s(i,m),s(i,E),s(E,W),s(W,D),s(E,B),s(B,j),k(T,ws,r),k(T,z,r),s(z,J),s(z,rs),s(z,ps),s(z,R),is(R,g[0]),ls||(rt=[yo(I=g[1].call(null,M,`
<filter>
	<feMorphology
		operator="dilate"
		radius="${g[0]}" />
</filter>`)),yo(u=g[1].call(null,P,`
<filter>
	<feMorphology
		operator="erode"
		radius="${g[0]}" />
</filter>`)),at(R,"change",g[2]),at(R,"input",g[2])],ls=!0)},p(T,[r]){I&&go(I.update)&&r&1&&I.update.call(null,`
<filter>
	<feMorphology
		operator="dilate"
		radius="${T[0]}" />
</filter>`),u&&go(u.update)&&r&1&&u.update.call(null,`
<filter>
	<feMorphology
		operator="erode"
		radius="${T[0]}" />
</filter>`),r&1&&p(D,"radius",T[0]),r&1&&p(j,"radius",T[0]),r&1&&Ao(rs,T[0]),r&1&&is(R,T[0])},i:it,o:it,d(T){T&&(o(i),o(ws),o(z)),ls=!1,No(rt)}}}function ol(g,i,d){let w=0;function x(_,q){function $(M){_.innerHTML=_o.highlight(M.trim(),_o.languages.html).split(`
`).map(I=>I.replace(/^(\s+)/,(H,b)=>'<span class="tab"></span>'.repeat(b.length))).join("<br />")}return $(q),{update(M){$(M)}}}function c(){w=sn(this.value),d(0,w)}return[w,x,c]}class nl extends _e{constructor(i){super(),me(this,i,ol,el,xe,{})}}function ll(g){let i,d,w,x,c,_,q,$,M,I,H,b,U,S,L,P;return{c(){i=t("div"),d=t("h1"),w=he(g[0]),x=n(),c=t("input"),_=n(),q=t("input"),$=n(),M=t("input"),I=n(),H=os("svg"),b=os("filter"),U=os("feMorphology"),S=os("feComposite"),this.h()},l(u){i=e(u,"DIV",{class:!0,style:!0});var m=v(i);d=e(m,"H1",{style:!0,class:!0});var E=v(d);w=ke(E,g[0]),E.forEach(o),m.forEach(o),x=l(u),c=e(u,"INPUT",{}),_=l(u),q=e(u,"INPUT",{type:!0}),$=l(u),M=e(u,"INPUT",{type:!0}),I=l(u),H=ns(u,"svg",{height:!0,class:!0});var W=v(H);b=ns(W,"filter",{id:!0});var D=v(b);U=ns(D,"feMorphology",{result:!0,operator:!0,radius:!0}),v(U).forEach(o),S=ns(D,"feComposite",{operator:!0,in:!0,in2:!0}),v(S).forEach(o),D.forEach(o),W.forEach(o),this.h()},h(){lt(d,"filter","url(#outline)"),lt(d,"color",g[1]),p(d,"class","svelte-1foi548"),p(i,"class","canvas svelte-1foi548"),lt(i,"background",g[2]),p(q,"type","color"),p(M,"type","color"),p(U,"result","THICK"),p(U,"operator","dilate"),p(U,"radius","4"),p(S,"operator","out"),p(S,"in","THICK"),p(S,"in2","SourceGraphic"),p(b,"id","outline"),p(H,"height","0"),p(H,"class","svelte-1foi548")},m(u,m){k(u,i,m),s(i,d),s(d,w),k(u,x,m),k(u,c,m),is(c,g[0]),k(u,_,m),k(u,q,m),is(q,g[1]),k(u,$,m),k(u,M,m),is(M,g[2]),k(u,I,m),k(u,H,m),s(H,b),s(b,U),s(b,S),L||(P=[at(c,"input",g[3]),at(q,"input",g[4]),at(M,"input",g[5])],L=!0)},p(u,[m]){m&1&&Ao(w,u[0]),m&2&&lt(d,"color",u[1]),m&4&&lt(i,"background",u[2]),m&1&&c.value!==u[0]&&is(c,u[0]),m&2&&is(q,u[1]),m&4&&is(M,u[2])},i:it,o:it,d(u){u&&(o(i),o(x),o(c),o(_),o(q),o($),o(M),o(I),o(H)),L=!1,No(P)}}}function al(g,i,d){let w="Hello World",x="#ff0000",c="#ffff00";function _(){w=this.value,d(0,w)}function q(){x=this.value,d(1,x)}function $(){c=this.value,d(2,c)}return[w,x,c,_,q,$]}class il extends _e{constructor(i){super(),me(this,i,al,ll,xe,{})}}function rl(g){let i,d='<h2><a href="#svg-filters-101" id="svg-filters-101">SVG Filters 101</a></h2> <p>[ <a href="https://tympanus.net/codrops/2019/01/15/svg-filters-101/" rel="nofollow">Source</a> ]</p> <ul><li>defined in <code class="inline">&lt;filter&gt;</code> element</li> <li>define a series of one or more filter primitives</li> <li>1 filter primitive performs <strong>1 single fundamental graphic operation</strong> on <strong>one or more</strong> inputs</li></ul>',w,x,c,_='<a href="#filter-primitives" id="filter-primitives">filter primitives</a>',q,$,M='<li>filter primitives named start with <code class="inline">fe</code>, short for &quot;filter effect&quot;</li> <li>filter primitives take 1-2 inputs and output 1 result</li> <li><code class="inline">in</code> and <code class="inline">in2</code> attribute for input, <code class="inline">result</code> attribute for output</li> <li>input takes in result, <code class="inline">SourceGraphic</code> and <code class="inline">SourceAlpha</code></li>',I,H,b,U=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">svg</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">id</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;my-filter&quot;</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">&lt;!-- take in 1 input &#96;in&#96; --&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &lt;</span><span style="color: var(--shiki-token-string-expression)">feGaussianBlur</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;INPUT_NAME&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">&lt;!-- take in 2 inputs &#96;in&#96; and &#96;in2&#96; --&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &lt;</span><span style="color: var(--shiki-token-string-expression)">feComposite</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;INPUT_NAME_1&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in2</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;INPUT_NAME_2&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">&lt;!-- &#96;result&#96; defines the result name, </span></span>
<span class="line"><span style="color: var(--shiki-token-comment)">		which can be passed in as input for the next filter --&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &lt;</span><span style="color: var(--shiki-token-string-expression)">feGaussianBlur</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;OUTPUT_1&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &lt;</span><span style="color: var(--shiki-token-string-expression)">feGaussianBlur</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;OUTPUT_1&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">&lt;!-- use the source as input for the filter primitive --&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">&lt;!-- apply filter on the source element --&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	&lt;</span><span style="color: var(--shiki-token-string-expression)">feGaussianBlur</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SourceGraphic&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">&lt;!-- apply filter on the alpha channel of the source element,</span></span>
<span class="line"><span style="color: var(--shiki-token-comment)">		the silhouette of the source --&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	&lt;</span><span style="color: var(--shiki-token-string-expression)">feGaussianBlur</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SourceAlpha&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;/</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">svg</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,S,L,P,u='<a href="#filter-region" id="filter-region">Filter region</a>',m,E,W="<li>filter region is based on the bounding box of the element</li> <li>filter result beyond filter region will be clipped off</li> <li>default filter region extends 10% the width and height of bounding box in all 4 directions</li>",D,B,j,ws=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-comment)">&lt;!-- x, y, width, height sets the filter region --&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">filter</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">x</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;-10%&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">y</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;-10%&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">width</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;120%&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">height</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;120%&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">filterUnits</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;objectBoundingBox&quot;</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">&lt;!-- filter primitives here --&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,z,J,rs='<li>use <code class="inline">&lt;feFlood&gt;</code> to figure out the filter region</li>',ps,R,ls,rt=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feFlood</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">flood-color</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;#EB0066&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">flood-opacity</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;0.5&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;flood&quot;</span><span style="color: var(--shiki-color-text)">&gt;&lt;/</span><span style="color: var(--shiki-token-string-expression)">feFlood</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feMerge</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &lt;</span><span style="color: var(--shiki-token-string-expression)">feMergeNode</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SourceGraphic&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &lt;</span><span style="color: var(--shiki-token-string-expression)">feMergeNode</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;flood&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;/</span><span style="color: var(--shiki-token-string-expression)">feMerge</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,T,r,X,cs='<a href="#create-a-drop-shadow" id="create-a-drop-shadow">Create a drop shadow</a>',hs,ts,nt="<li>Blur the silhouette of the layer</li>",es,bs,pt,Bo=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">id</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;my-filter&quot;</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feGaussianBlur</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SourceAlpha&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">stdDeviation</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;10&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;DROP&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,Rt,qs,we=`<span style="display: block; position: relative; padding-top: 97.450%; width: 100%;"><picture><source type="image/webp" srcset="${Qn}, ${Yn} 2x"/><img src="${zo}" srcset="${zo}, ${sl} 2x" loading="lazy" style="position: absolute; top: 0; width: 100%; height: 100%" alt="step-1"/></picture></span>`,Ct,ks,be="<li>Composite the blur layer with a solid color layer to create a colored blur</li>",Ut,Ls,qe='<li>Learn compositing + blending in <a href="https://www.sarasoueidan.com/blog/compositing-and-blending-in-css/" rel="nofollow">https://www.sarasoueidan.com/blog/compositing-and-blending-in-css/</a></li>',Et,Ms,ct,Vo=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">id</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;my-filter&quot;</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feGaussianBlur</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SourceAlpha&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">stdDeviation</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;10&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;DROP&quot;</span><span style="color: var(--shiki-color-text)">&gt;&lt;/</span><span style="color: var(--shiki-token-string-expression)">feGaussianBlur</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feFlood</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">flood-color</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;#EB0066&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;COLOR&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feComposite</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;COLOR&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in2</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;DROP&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">operator</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;in&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SHADOW&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,Ot,Ts,Le=`<span style="display: block; position: relative; padding-top: 96.866%; width: 100%;"><picture><source type="image/webp" srcset="${Xn}, ${Zn} 2x"/><img src="${Do}" srcset="${Do}, ${Jn} 2x" loading="lazy" style="position: absolute; top: 0; width: 100%; height: 100%" alt="step-2"/></picture></span>`,It,vs,Me='<li>Shift the shadow bottom-right with <code class="inline">&lt;feOffset&gt;</code></li>',St,$s,ht,Fo=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">id</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;my-filter&quot;</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feGaussianBlur</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SourceAlpha&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">stdDeviation</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;10&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;DROP&quot;</span><span style="color: var(--shiki-color-text)">&gt;&lt;/</span><span style="color: var(--shiki-token-string-expression)">feGaussianBlur</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feFlood</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">flood-color</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;#EB0066&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;COLOR&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feComposite</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;COLOR&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in2</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;DROP&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">operator</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;in&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SHADOW&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feOffset</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SHADOW&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">dx</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;10&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">dy</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;10&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;DROPSHADOW&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,Pt,Hs,Te=`<span style="display: block; position: relative; padding-top: 96.023%; width: 100%;"><picture><source type="image/webp" srcset="${jn}, ${Wn} 2x"/><img src="${Po}" srcset="${Po}, ${Kn} 2x" loading="lazy" style="position: absolute; top: 0; width: 100%; height: 100%" alt="step-3"/></picture></span>`,Dt,us,$e="<li>Combine the shadow with the original image</li>",zt,Rs,He="<li>layer merge in order of declaration, latter layer stacks on top of previous layer</li>",Gt,Cs,kt,Wo=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">id</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;my-filter&quot;</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feGaussianBlur</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SourceAlpha&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">stdDeviation</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;10&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;DROP&quot;</span><span style="color: var(--shiki-color-text)">&gt;&lt;/</span><span style="color: var(--shiki-token-string-expression)">feGaussianBlur</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feFlood</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">flood-color</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;#EB0066&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;COLOR&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feComposite</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;COLOR&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in2</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;DROP&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">operator</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;in&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SHADOW&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feOffset</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SHADOW&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">dx</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;10&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">dy</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;10&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;DROPSHADOW&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feMerge</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &lt;</span><span style="color: var(--shiki-token-string-expression)">feMergeNode</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;DROPSHADOW&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &lt;</span><span style="color: var(--shiki-token-string-expression)">feMergeNode</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SourceGraphic&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;/</span><span style="color: var(--shiki-token-string-expression)">feMerge</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,Nt,Us,Re=`<span style="display: block; position: relative; padding-top: 97.443%; width: 100%;"><picture><source type="image/webp" srcset="${Vn}, ${Bn} 2x"/><img src="${So}" srcset="${So}, ${Fn} 2x" loading="lazy" style="position: absolute; top: 0; width: 100%; height: 100%" alt="step-4"/></picture></span>`,vt,G,Es,Ce='<a href="#finessing-fecolormatrix" id="finessing-fecolormatrix">Finessing <code class="inline">feColorMatrix</code></a>',At,Os,Ue='[ <a href="https://alistapart.com/article/finessing-fecolormatrix/" rel="nofollow">Source</a> ]',Bt,Is,ut,jo=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">id</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;linear&quot;</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feColorMatrix</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">type</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;matrix&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">values</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;R 0 0 0 0</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">            0 G 0 0 0</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">            0 0 B 0 0</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">            0 0 0 A 0 &quot;</span><span style="color: var(--shiki-color-text)">/&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,Vt,Ss,yt,Ko=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-comment)">/* R G B A 1 */</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-comment)">// R = 1*R + 0*G + 0*B + 0*A + 0</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-comment)">// G = 0*R + 1*G + 0*B + 0*A + 0</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-comment)">// B = 0*R + 0*G + 1*B + 0*A + 0</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-comment)">// A = 0*R + 0*G + 0*B + 1*A + 0</span></span></code></pre>`,Ft,Ps,Ee='<li><a href="https://svelte.dev/repl/1fa3e758ef2442d1bcc1eba37a2bdd58" rel="nofollow">color matrix playground</a></li>',gt,ys,Oe=`<h3><a href="#1-colorizing" id="1-colorizing">1. Colorizing</a></h3> <p><span style="display: block; position: relative; padding-top: 92.081%; width: 100%;"><picture><source type="image/webp" srcset="${Nn}, ${Gn} 2x"/><img src="${Io}" srcset="${Io}, ${An} 2x" loading="lazy" style="position: absolute; top: 0; width: 100%; height: 100%" alt="colorise default"/></picture></span></p> <ul><li>Removing other color to colorise image into the remaining color</li> <li>colorise red -&gt; remove blue &amp; green
<span style="display: block; position: relative; padding-top: 91.403%; width: 100%;"><picture><source type="image/webp" srcset="${Dn}, ${Pn} 2x"/><img src="${Oo}" srcset="${Oo}, ${zn} 2x" loading="lazy" style="position: absolute; top: 0; width: 100%; height: 100%" alt="colorise red"/></picture></span></li> <li>colorise yellow -&gt; remove blue (red + green = yellow)
<span style="display: block; position: relative; padding-top: 92.466%; width: 100%;"><picture><source type="image/webp" srcset="${In}, ${On} 2x"/><img src="${Eo}" srcset="${Eo}, ${Sn} 2x" loading="lazy" style="position: absolute; top: 0; width: 100%; height: 100%" alt="colorise yellow"/></picture></span></li></ul>`,dt,K,Ds,Ie='<a href="#2-alpha-values" id="2-alpha-values">2. Alpha values</a>',Wt,zs,Se=`<li><p>add opacity level to the red channel</p> <ul><li>any red remaining red</li> <li>green -&gt; yellow (red + green = yellow)</li> <li>blue -&gt; magenta (red + blue = magenta)
<span style="display: block; position: relative; padding-top: 91.533%; width: 100%;"><picture><source type="image/webp" srcset="${Un}, ${Cn} 2x"/><img src="${Uo}" srcset="${Uo}, ${En} 2x" loading="lazy" style="position: absolute; top: 0; width: 100%; height: 100%" alt="red filter"/></picture></span></li></ul></li> <li><p>hard yellow filter
<span style="display: block; position: relative; padding-top: 90.639%; width: 100%;"><picture><source type="image/webp" srcset="${Hn}, ${$n} 2x"/><img src="${Co}" srcset="${Co}, ${Rn} 2x" loading="lazy" style="position: absolute; top: 0; width: 100%; height: 100%" alt="yellow filter"/></picture></span></p></li> <li><p>have a value some where between 0-1 to see the mixture in the shadow
<span style="display: block; position: relative; padding-top: 91.324%; width: 100%;"><picture><source type="image/webp" srcset="${Mn}, ${Ln} 2x"/><img src="${Ro}" srcset="${Ro}, ${Tn} 2x" loading="lazy" style="position: absolute; top: 0; width: 100%; height: 100%" alt="yellow filter 2"/></picture></span></p></li>`,jt,Gs,Pe=`<li>negative value could offset the channel by the amount of opacity
<span style="display: block; position: relative; padding-top: 92.027%; width: 100%;"><picture><source type="image/webp" srcset="${bn}, ${wn} 2x"/><img src="${Ho}" srcset="${Ho}, ${qn} 2x" loading="lazy" style="position: absolute; top: 0; width: 100%; height: 100%" alt="negative alpha"/></picture></span><ul><li>the following 2 color matrix is identical</li></ul></li>`,Kt,Ns,ft,Zo=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feColorMatrix</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">type</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;matrix&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">values</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;1  0  0  0  0</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">            0  1  0  0  0</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">            0  0  1 -1  0</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">            0  0  0  1  0 &quot;</span><span style="color: var(--shiki-color-text)">/&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feColorMatrix</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">type</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;matrix&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">values</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;1  0  0  0  0</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">            0  1  0  0  0</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">            0  0  0  0  0</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">            0  0  0  1  0 &quot;</span><span style="color: var(--shiki-color-text)">/&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,xt,gs,De=`<h3><a href="#3-blowing-out-channels" id="3-blowing-out-channels">3. Blowing out channels</a></h3> <ul><li>turn 1 color to white</li> <li>set the alpha channel to <code class="inline">-2</code> <span style="display: block; position: relative; padding-top: 92.466%; width: 100%;"><picture><source type="image/webp" srcset="${_n}, ${xn} 2x"/><img src="${$o}" srcset="${$o}, ${mn} 2x" loading="lazy" style="position: absolute; top: 0; width: 100%; height: 100%" alt="blow-out-green"/></picture></span></li></ul>`,_t,ds,ze=`<h3><a href="#4-change-color" id="4-change-color">4. Change color</a></h3> <ul><li>No more green, any green looks like magenta now. (luminosity of green is lost)
<span style="display: block; position: relative; padding-top: 90.868%; width: 100%;"><picture><source type="image/webp" srcset="${dn}, ${gn} 2x"/><img src="${To}" srcset="${To}, ${fn} 2x" loading="lazy" style="position: absolute; top: 0; width: 100%; height: 100%" alt="change-color"/></picture></span></li></ul>`,mt,fs,Ge=`<h3><a href="#5-lighten-or-darken" id="5-lighten-or-darken">5. Lighten or darken</a></h3> <ul><li>increase intensity to lighten, decrease to darken
<span style="display: block; position: relative; padding-top: 92.220%; width: 100%;"><picture><source type="image/webp" srcset="${un}, ${vn} 2x"/><img src="${Mo}" srcset="${Mo}, ${yn} 2x" loading="lazy" style="position: absolute; top: 0; width: 100%; height: 100%" alt="lighten"/></picture></span> <span style="display: block; position: relative; padding-top: 92.184%; width: 100%;"><picture><source type="image/webp" srcset="${hn}, ${cn} 2x"/><img src="${Lo}" srcset="${Lo}, ${kn} 2x" loading="lazy" style="position: absolute; top: 0; width: 100%; height: 100%" alt="darken"/></picture></span></li></ul>`,wt,xs,Ne=`<h3><a href="#6-grayscale" id="6-grayscale">6. Grayscale</a></h3> <ul><li>make sure red, green, blue have the same value
<span style="display: block; position: relative; padding-top: 91.264%; width: 100%;"><picture><source type="image/webp" srcset="${rn}, ${an} 2x"/><img src="${qo}" srcset="${qo}, ${pn} 2x" loading="lazy" style="position: absolute; top: 0; width: 100%; height: 100%" alt="grayscale"/></picture></span></li></ul>`,bt,C,As,Ae='<a href="#outline-text-with-lt-femorphology-gt" id="outline-text-with-lt-femorphology-gt">Outline Text with <code class="inline">&lt;feMorphology&gt;</code></a>',Zt,Bs,Be='[ <a href="https://tympanus.net/codrops/2019/01/22/svg-filter-effects-outline-text-with-femorphology/" rel="nofollow">Source</a> ]',Xt,Vs,Ve='<li>🖼 image size gets smaller when <code class="inline">erode</code>, larger when <code class="inline">dilate</code></li> <li>🖼 image looks like painted with large brush 🖌</li> <li>📝 <code class="inline">erode</code> sets each pixel to the darkest / most transparent neighbor</li> <li>📝 <code class="inline">dilate</code> sets each pixel to the brightest / least transparent neighbor</li>',Jt,Fs,qt,Xo=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feMorphology</span><span style="color: var(--shiki-color-text)"> </span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;..&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;..&quot;</span><span style="color: var(--shiki-color-text)"> </span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">operator</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;dilate || erode&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">radius</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,Yt,Ws,Fe=`<span style="display: block; position: relative; padding-top: 56.786%; width: 100%;"><img src="${bo}" srcset="${bo}, ${ln} 2x" loading="lazy" style="position: absolute; top: 0; width: 100%; height: 100%" alt="feMorphology"/></span>`,Qt,_s,se,js,We='<a href="https://svelte.dev/repl/1f0a2c16650541d082beeecc2a046c9f?version=3.29.0" rel="nofollow">REPL</a> to see effect with different radius.',Lt,N,Ks,je='<a href="#adding-colored-outline-to-text-with-lt-femorphology-gt" id="adding-colored-outline-to-text-with-lt-femorphology-gt">Adding Colored Outline to Text with <code class="inline">&lt;feMorphology /&gt;</code></a>',te,Zs,Ke=`1️⃣ expand the text with <code class="inline">&lt;feMorphology operator=&quot;dilate&quot; /&gt;</code>
2️⃣ colorize via <code class="inline">&lt;feFlood&gt;</code> with solid color and <code class="inline">&lt;feComposite /&gt;</code>
3️⃣ merge the expanded colored text with the original text`,ee,Xs,Mt,Jo=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">h1</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">style</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;filter: url(#outline)&quot;</span><span style="color: var(--shiki-color-text)">&gt;Hello World&lt;/</span><span style="color: var(--shiki-token-string-expression)">h1</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">svg</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	&lt;</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">id</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;outline&quot;</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">		&lt;</span><span style="color: var(--shiki-token-string-expression)">feMorphology</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;THICK&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">operator</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;dilate&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">radius</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;4&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">		&lt;</span><span style="color: var(--shiki-token-string-expression)">feFlood</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">flood-color</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;#32DFEC&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">flood-opacity</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;1&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;COLOR&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">		&lt;</span><span style="color: var(--shiki-token-string-expression)">feComposite</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;COLOR&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in2</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;THICK&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">operator</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;in&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;OUTLINE&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">		&lt;</span><span style="color: var(--shiki-token-string-expression)">feMerge</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">			&lt;</span><span style="color: var(--shiki-token-string-expression)">feMergeNode</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;OUTLINE&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">			&lt;</span><span style="color: var(--shiki-token-string-expression)">feMergeNode</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SourceGraphic&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">		&lt;/</span><span style="color: var(--shiki-token-string-expression)">feMerge</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	&lt;/</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">svg</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,oe,Js,Ze=`<span style="display: block; position: relative; padding-top: 64.643%; width: 100%;"><img src="${wo}" srcset="${wo}, ${nn} 2x" loading="lazy" style="position: absolute; top: 0; width: 100%; height: 100%" alt="feMorphology outline text"/></span>`,ne,Ys,Xe='<a href="https://svelte.dev/repl/a1a3aa1cc844476b9ca96fec3f0164ed?version=3.29.0" rel="nofollow">REPL</a> to visualise <code class="inline">&lt;feMorphology&gt;</code>',Tt,O,Qs,Je='<a href="#knockout-text-with-lt-femorphology-gt" id="knockout-text-with-lt-femorphology-gt">Knockout text with <code class="inline">&lt;feMorphology /&gt;</code></a>',le,st,Ye=`1️⃣ expand the text with <code class="inline">&lt;feMorphology operator=&quot;dilate&quot; /&gt;</code>
2️⃣ composite with the source with <code class="inline">&lt;feComposite /&gt;</code> using <code class="inline">out</code> operator`,ae,tt,$t,Yo=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">h1</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">style</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;filter: url(#outline)&quot;</span><span style="color: var(--shiki-color-text)">&gt;Hello World&lt;/</span><span style="color: var(--shiki-token-string-expression)">h1</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">svg</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	&lt;</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">id</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;outline&quot;</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">		&lt;</span><span style="color: var(--shiki-token-string-expression)">feMorphology</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;THICK&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">operator</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;dilate&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">radius</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;4&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">		&lt;</span><span style="color: var(--shiki-token-string-expression)">feComposite</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;THICK&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in2</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SourceGraphic&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">operator</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;out&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	&lt;/</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">svg</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,ie,et,Qe=`<span style="display: block; position: relative; padding-top: 42.643%; width: 100%;"><img src="${mo}" srcset="${mo}, ${on} 2x" loading="lazy" style="position: absolute; top: 0; width: 100%; height: 100%" alt="feMorphology knockout text"/></span>`,re,ms,pe,ot,so='<a href="https://svelte.dev/repl/30153d68324d475189d34afa26a3186f?version=3.29.0" rel="nofollow">REPL</a> to visualise the build up the knock-out text.',Ht;return _s=new nl({}),ms=new il({}),{c(){i=t("section"),i.innerHTML=d,w=n(),x=t("section"),c=t("h3"),c.innerHTML=_,q=n(),$=t("ul"),$.innerHTML=M,I=n(),H=t("div"),b=new V(!1),S=n(),L=t("section"),P=t("h3"),P.innerHTML=u,m=n(),E=t("ul"),E.innerHTML=W,D=n(),B=t("div"),j=new V(!1),z=n(),J=t("ul"),J.innerHTML=rs,ps=n(),R=t("div"),ls=new V(!1),T=n(),r=t("section"),X=t("h3"),X.innerHTML=cs,hs=n(),ts=t("ol"),ts.innerHTML=nt,es=n(),bs=t("div"),pt=new V(!1),Rt=n(),qs=t("p"),qs.innerHTML=we,Ct=n(),ks=t("ol"),ks.innerHTML=be,Ut=n(),Ls=t("ul"),Ls.innerHTML=qe,Et=n(),Ms=t("div"),ct=new V(!1),Ot=n(),Ts=t("p"),Ts.innerHTML=Le,It=n(),vs=t("ol"),vs.innerHTML=Me,St=n(),$s=t("div"),ht=new V(!1),Pt=n(),Hs=t("p"),Hs.innerHTML=Te,Dt=n(),us=t("ol"),us.innerHTML=$e,zt=n(),Rs=t("ul"),Rs.innerHTML=He,Gt=n(),Cs=t("div"),kt=new V(!1),Nt=n(),Us=t("p"),Us.innerHTML=Re,vt=n(),G=t("section"),Es=t("h2"),Es.innerHTML=Ce,At=n(),Os=t("p"),Os.innerHTML=Ue,Bt=n(),Is=t("div"),ut=new V(!1),Vt=n(),Ss=t("div"),yt=new V(!1),Ft=n(),Ps=t("ul"),Ps.innerHTML=Ee,gt=n(),ys=t("section"),ys.innerHTML=Oe,dt=n(),K=t("section"),Ds=t("h3"),Ds.innerHTML=Ie,Wt=n(),zs=t("ul"),zs.innerHTML=Se,jt=n(),Gs=t("ul"),Gs.innerHTML=Pe,Kt=n(),Ns=t("div"),ft=new V(!1),xt=n(),gs=t("section"),gs.innerHTML=De,_t=n(),ds=t("section"),ds.innerHTML=ze,mt=n(),fs=t("section"),fs.innerHTML=Ge,wt=n(),xs=t("section"),xs.innerHTML=Ne,bt=n(),C=t("section"),As=t("h2"),As.innerHTML=Ae,Zt=n(),Bs=t("p"),Bs.innerHTML=Be,Xt=n(),Vs=t("ul"),Vs.innerHTML=Ve,Jt=n(),Fs=t("div"),qt=new V(!1),Yt=n(),Ws=t("p"),Ws.innerHTML=Fe,Qt=n(),ve(_s.$$.fragment),se=n(),js=t("p"),js.innerHTML=We,Lt=n(),N=t("section"),Ks=t("h3"),Ks.innerHTML=je,te=n(),Zs=t("p"),Zs.innerHTML=Ke,ee=n(),Xs=t("div"),Mt=new V(!1),oe=n(),Js=t("p"),Js.innerHTML=Ze,ne=n(),Ys=t("p"),Ys.innerHTML=Xe,Tt=n(),O=t("section"),Qs=t("h3"),Qs.innerHTML=Je,le=n(),st=t("p"),st.innerHTML=Ye,ae=n(),tt=t("div"),$t=new V(!1),ie=n(),et=t("p"),et.innerHTML=Qe,re=n(),ve(ms.$$.fragment),pe=n(),ot=t("p"),ot.innerHTML=so,this.h()},l(a){i=e(a,"SECTION",{"data-svelte-h":!0}),h(i)!=="svelte-1d4w8dz"&&(i.innerHTML=d),w=l(a),x=e(a,"SECTION",{});var y=v(x);c=e(y,"H3",{"data-svelte-h":!0}),h(c)!=="svelte-axo8ne"&&(c.innerHTML=_),q=l(y),$=e(y,"UL",{"data-svelte-h":!0}),h($)!=="svelte-3snpk2"&&($.innerHTML=M),I=l(y),H=e(y,"DIV",{class:!0});var to=v(H);b=F(to,!1),to.forEach(o),y.forEach(o),S=l(a),L=e(a,"SECTION",{});var Y=v(L);P=e(Y,"H3",{"data-svelte-h":!0}),h(P)!=="svelte-1lvq4ec"&&(P.innerHTML=u),m=l(Y),E=e(Y,"UL",{"data-svelte-h":!0}),h(E)!=="svelte-1o4sr31"&&(E.innerHTML=W),D=l(Y),B=e(Y,"DIV",{class:!0});var eo=v(B);j=F(eo,!1),eo.forEach(o),z=l(Y),J=e(Y,"UL",{"data-svelte-h":!0}),h(J)!=="svelte-1oy4xzh"&&(J.innerHTML=rs),ps=l(Y),R=e(Y,"DIV",{class:!0});var oo=v(R);ls=F(oo,!1),oo.forEach(o),Y.forEach(o),T=l(a),r=e(a,"SECTION",{});var f=v(r);X=e(f,"H3",{"data-svelte-h":!0}),h(X)!=="svelte-c7f3pi"&&(X.innerHTML=cs),hs=l(f),ts=e(f,"OL",{"data-svelte-h":!0}),h(ts)!=="svelte-1sgp82i"&&(ts.innerHTML=nt),es=l(f),bs=e(f,"DIV",{class:!0});var no=v(bs);pt=F(no,!1),no.forEach(o),Rt=l(f),qs=e(f,"P",{"data-svelte-h":!0}),h(qs)!=="svelte-8ibznz"&&(qs.innerHTML=we),Ct=l(f),ks=e(f,"OL",{start:!0,"data-svelte-h":!0}),h(ks)!=="svelte-1lmv1r1"&&(ks.innerHTML=be),Ut=l(f),Ls=e(f,"UL",{"data-svelte-h":!0}),h(Ls)!=="svelte-uak0et"&&(Ls.innerHTML=qe),Et=l(f),Ms=e(f,"DIV",{class:!0});var lo=v(Ms);ct=F(lo,!1),lo.forEach(o),Ot=l(f),Ts=e(f,"P",{"data-svelte-h":!0}),h(Ts)!=="svelte-mk3koz"&&(Ts.innerHTML=Le),It=l(f),vs=e(f,"OL",{start:!0,"data-svelte-h":!0}),h(vs)!=="svelte-3a4f4e"&&(vs.innerHTML=Me),St=l(f),$s=e(f,"DIV",{class:!0});var ao=v($s);ht=F(ao,!1),ao.forEach(o),Pt=l(f),Hs=e(f,"P",{"data-svelte-h":!0}),h(Hs)!=="svelte-lxk9zw"&&(Hs.innerHTML=Te),Dt=l(f),us=e(f,"OL",{start:!0,"data-svelte-h":!0}),h(us)!=="svelte-ifwd4j"&&(us.innerHTML=$e),zt=l(f),Rs=e(f,"UL",{"data-svelte-h":!0}),h(Rs)!=="svelte-xw4zl7"&&(Rs.innerHTML=He),Gt=l(f),Cs=e(f,"DIV",{class:!0});var io=v(Cs);kt=F(io,!1),io.forEach(o),Nt=l(f),Us=e(f,"P",{"data-svelte-h":!0}),h(Us)!=="svelte-tim8j1"&&(Us.innerHTML=Re),f.forEach(o),vt=l(a),G=e(a,"SECTION",{});var Q=v(G);Es=e(Q,"H2",{"data-svelte-h":!0}),h(Es)!=="svelte-104g2ws"&&(Es.innerHTML=Ce),At=l(Q),Os=e(Q,"P",{"data-svelte-h":!0}),h(Os)!=="svelte-ozlyxo"&&(Os.innerHTML=Ue),Bt=l(Q),Is=e(Q,"DIV",{class:!0});var ro=v(Is);ut=F(ro,!1),ro.forEach(o),Vt=l(Q),Ss=e(Q,"DIV",{class:!0});var po=v(Ss);yt=F(po,!1),po.forEach(o),Ft=l(Q),Ps=e(Q,"UL",{"data-svelte-h":!0}),h(Ps)!=="svelte-1yoduok"&&(Ps.innerHTML=Ee),Q.forEach(o),gt=l(a),ys=e(a,"SECTION",{"data-svelte-h":!0}),h(ys)!=="svelte-nu58mh"&&(ys.innerHTML=Oe),dt=l(a),K=e(a,"SECTION",{});var as=v(K);Ds=e(as,"H3",{"data-svelte-h":!0}),h(Ds)!=="svelte-6rosu2"&&(Ds.innerHTML=Ie),Wt=l(as),zs=e(as,"UL",{"data-svelte-h":!0}),h(zs)!=="svelte-1fb3ahp"&&(zs.innerHTML=Se),jt=l(as),Gs=e(as,"UL",{"data-svelte-h":!0}),h(Gs)!=="svelte-1g7t06q"&&(Gs.innerHTML=Pe),Kt=l(as),Ns=e(as,"DIV",{class:!0});var co=v(Ns);ft=F(co,!1),co.forEach(o),as.forEach(o),xt=l(a),gs=e(a,"SECTION",{"data-svelte-h":!0}),h(gs)!=="svelte-xcv19h"&&(gs.innerHTML=De),_t=l(a),ds=e(a,"SECTION",{"data-svelte-h":!0}),h(ds)!=="svelte-1rusbfu"&&(ds.innerHTML=ze),mt=l(a),fs=e(a,"SECTION",{"data-svelte-h":!0}),h(fs)!=="svelte-1nnp2gy"&&(fs.innerHTML=Ge),wt=l(a),xs=e(a,"SECTION",{"data-svelte-h":!0}),h(xs)!=="svelte-ja229m"&&(xs.innerHTML=Ne),bt=l(a),C=e(a,"SECTION",{});var A=v(C);As=e(A,"H2",{"data-svelte-h":!0}),h(As)!=="svelte-1ohsmek"&&(As.innerHTML=Ae),Zt=l(A),Bs=e(A,"P",{"data-svelte-h":!0}),h(Bs)!=="svelte-16gwmam"&&(Bs.innerHTML=Be),Xt=l(A),Vs=e(A,"UL",{"data-svelte-h":!0}),h(Vs)!=="svelte-1er1wyb"&&(Vs.innerHTML=Ve),Jt=l(A),Fs=e(A,"DIV",{class:!0});var ho=v(Fs);qt=F(ho,!1),ho.forEach(o),Yt=l(A),Ws=e(A,"P",{"data-svelte-h":!0}),h(Ws)!=="svelte-1h1b6ue"&&(Ws.innerHTML=Fe),Qt=l(A),ue(_s.$$.fragment,A),se=l(A),js=e(A,"P",{"data-svelte-h":!0}),h(js)!=="svelte-m3p2if"&&(js.innerHTML=We),A.forEach(o),Lt=l(a),N=e(a,"SECTION",{});var ss=v(N);Ks=e(ss,"H3",{"data-svelte-h":!0}),h(Ks)!=="svelte-dp7gtx"&&(Ks.innerHTML=je),te=l(ss),Zs=e(ss,"P",{"data-svelte-h":!0}),h(Zs)!=="svelte-h9qts6"&&(Zs.innerHTML=Ke),ee=l(ss),Xs=e(ss,"DIV",{class:!0});var ko=v(Xs);Mt=F(ko,!1),ko.forEach(o),oe=l(ss),Js=e(ss,"P",{"data-svelte-h":!0}),h(Js)!=="svelte-1dw42b9"&&(Js.innerHTML=Ze),ne=l(ss),Ys=e(ss,"P",{"data-svelte-h":!0}),h(Ys)!=="svelte-vph28"&&(Ys.innerHTML=Xe),ss.forEach(o),Tt=l(a),O=e(a,"SECTION",{});var Z=v(O);Qs=e(Z,"H3",{"data-svelte-h":!0}),h(Qs)!=="svelte-17fdu0v"&&(Qs.innerHTML=Je),le=l(Z),st=e(Z,"P",{"data-svelte-h":!0}),h(st)!=="svelte-1000giw"&&(st.innerHTML=Ye),ae=l(Z),tt=e(Z,"DIV",{class:!0});var vo=v(tt);$t=F(vo,!1),vo.forEach(o),ie=l(Z),et=e(Z,"P",{"data-svelte-h":!0}),h(et)!=="svelte-1di1sh2"&&(et.innerHTML=Qe),re=l(Z),ue(ms.$$.fragment,Z),pe=l(Z),ot=e(Z,"P",{"data-svelte-h":!0}),h(ot)!=="svelte-1gtdru"&&(ot.innerHTML=so),Z.forEach(o),this.h()},h(){b.a=null,p(H,"class","code-section"),j.a=null,p(B,"class","code-section"),ls.a=null,p(R,"class","code-section"),pt.a=null,p(bs,"class","code-section"),p(ks,"start","2"),ct.a=null,p(Ms,"class","code-section"),p(vs,"start","3"),ht.a=null,p($s,"class","code-section"),p(us,"start","4"),kt.a=null,p(Cs,"class","code-section"),ut.a=null,p(Is,"class","code-section"),yt.a=null,p(Ss,"class","code-section"),ft.a=null,p(Ns,"class","code-section"),qt.a=null,p(Fs,"class","code-section"),Mt.a=null,p(Xs,"class","code-section"),$t.a=null,p(tt,"class","code-section")},m(a,y){k(a,i,y),k(a,w,y),k(a,x,y),s(x,c),s(x,q),s(x,$),s(x,I),s(x,H),b.m(U,H),k(a,S,y),k(a,L,y),s(L,P),s(L,m),s(L,E),s(L,D),s(L,B),j.m(ws,B),s(L,z),s(L,J),s(L,ps),s(L,R),ls.m(rt,R),k(a,T,y),k(a,r,y),s(r,X),s(r,hs),s(r,ts),s(r,es),s(r,bs),pt.m(Bo,bs),s(r,Rt),s(r,qs),s(r,Ct),s(r,ks),s(r,Ut),s(r,Ls),s(r,Et),s(r,Ms),ct.m(Vo,Ms),s(r,Ot),s(r,Ts),s(r,It),s(r,vs),s(r,St),s(r,$s),ht.m(Fo,$s),s(r,Pt),s(r,Hs),s(r,Dt),s(r,us),s(r,zt),s(r,Rs),s(r,Gt),s(r,Cs),kt.m(Wo,Cs),s(r,Nt),s(r,Us),k(a,vt,y),k(a,G,y),s(G,Es),s(G,At),s(G,Os),s(G,Bt),s(G,Is),ut.m(jo,Is),s(G,Vt),s(G,Ss),yt.m(Ko,Ss),s(G,Ft),s(G,Ps),k(a,gt,y),k(a,ys,y),k(a,dt,y),k(a,K,y),s(K,Ds),s(K,Wt),s(K,zs),s(K,jt),s(K,Gs),s(K,Kt),s(K,Ns),ft.m(Zo,Ns),k(a,xt,y),k(a,gs,y),k(a,_t,y),k(a,ds,y),k(a,mt,y),k(a,fs,y),k(a,wt,y),k(a,xs,y),k(a,bt,y),k(a,C,y),s(C,As),s(C,Zt),s(C,Bs),s(C,Xt),s(C,Vs),s(C,Jt),s(C,Fs),qt.m(Xo,Fs),s(C,Yt),s(C,Ws),s(C,Qt),ye(_s,C,null),s(C,se),s(C,js),k(a,Lt,y),k(a,N,y),s(N,Ks),s(N,te),s(N,Zs),s(N,ee),s(N,Xs),Mt.m(Jo,Xs),s(N,oe),s(N,Js),s(N,ne),s(N,Ys),k(a,Tt,y),k(a,O,y),s(O,Qs),s(O,le),s(O,st),s(O,ae),s(O,tt),$t.m(Yo,tt),s(O,ie),s(O,et),s(O,re),ye(ms,O,null),s(O,pe),s(O,ot),Ht=!0},p:it,i(a){Ht||(ge(_s.$$.fragment,a),ge(ms.$$.fragment,a),Ht=!0)},o(a){de(_s.$$.fragment,a),de(ms.$$.fragment,a),Ht=!1},d(a){a&&(o(i),o(w),o(x),o(S),o(L),o(T),o(r),o(vt),o(G),o(gt),o(ys),o(dt),o(K),o(xt),o(gs),o(_t),o(ds),o(mt),o(fs),o(wt),o(xs),o(bt),o(C),o(Lt),o(N),o(Tt),o(O)),fe(_s),fe(ms)}}}function pl(g){let i,d;const w=[g[0],Go];let x={$$slots:{default:[rl]},$$scope:{ctx:g}};for(let c=0;c<w.length;c+=1)x=ce(x,w[c]);return i=new en({props:x}),{c(){ve(i.$$.fragment)},l(c){ue(i.$$.fragment,c)},m(c,_){ye(i,c,_),d=!0},p(c,[_]){const q=_&1?tn(w,[_&1&&xo(c[0]),_&0&&xo(Go)]):{};_&2&&(q.$$scope={dirty:_,ctx:c}),i.$set(q)},i(c){d||(ge(i.$$.fragment,c),d=!0)},o(c){de(i.$$.fragment,c),d=!1},d(c){fe(i,c)}}}const Go={title:"SVG Filters",tags:["svg filters","filters","svg"],description:"SVG Filters 101[ Source ]defined in `&lt;filter&gt;` elementdefine a series of one or more filter primitives1 filter primitive performs 1 single fundamental graphic operation on one or more inputsfilter primitives...",tableOfContents:[{link:"svg-filters-101",title:"SVG Filters 101",nested:[{link:"filter-primitives",title:"filter primitives"},{link:"filter-region",title:"Filter region"},{link:"create-a-drop-shadow",title:"Create a drop shadow"}]},{link:"finessing-fecolormatrix",title:"Finessing  `feColorMatrix`",nested:[{link:"1-colorizing",title:"1. Colorizing"},{link:"2-alpha-values",title:"2. Alpha values"},{link:"3-blowing-out-channels",title:"3. Blowing out channels"},{link:"4-change-color",title:"4. Change color"},{link:"5-lighten-or-darken",title:"5. Lighten or darken"},{link:"6-grayscale",title:"6. Grayscale"}]},{link:"outline-text-with-lt-femorphology-gt",title:"Outline Text with  `&lt;feMorphology&gt;`",nested:[{link:"adding-colored-outline-to-text-with-lt-femorphology-gt",title:"Adding Colored Outline to Text with  `&lt;feMorphology /&gt;`"},{link:"knockout-text-with-lt-femorphology-gt",title:"Knockout text with  `&lt;feMorphology /&gt;`"}]}]};function cl(g,i,d){return Qo("blog",{image:tl}),g.$$set=w=>{d(0,i=ce(ce({},i),fo(w)))},i=fo(i),[i]}class gl extends _e{constructor(i){super(),me(this,i,cl,pl,xe,{})}}export{gl as component};
