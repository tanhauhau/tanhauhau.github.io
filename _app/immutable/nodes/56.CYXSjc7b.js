import{s as H,d as m,e as I,f as x,n as E}from"../chunks/scheduler.D6VJxl8L.js";import{S as L,i as N,m as T,n as B,o as R,t as S,a as z,p as D,e as y,s as f,H as g,c as v,q as M,h as w,d as b,r as q,g as c,u as d,j as h}from"../chunks/index.CLAVN-Y5.js";import{g as O,a as $}from"../chunks/code-snippet.Gym6WUAG.js";import{B as V}from"../chunks/BlogLayout.BLHkC4CD.js";import{t as A}from"../chunks/twitter-card-image.C3bQ3Oc7.js";function K(k){let s,n='<p lang="en" dir="ltr">I have a library that needs to be called synchronously but has an async initialization step.<br/><br/>Can I use pkg.exports or something else to use top-level await when supported, and fallback to export the initialization promise so that Node.js 12-13 users can await it themselves?</p>‚Äî Nicol√≤ Ribaudo üè≥Ô∏è‚Äçüåà (@NicoloRibaudo) <a href="https://twitter.com/NicoloRibaudo/status/1304710001982877697?ref_src=twsrc%5Etfw">September 12, 2020</a>',e,t,a,l=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-comment)">// package.json</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">&quot;name&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;your-pkg&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">&quot;exports&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&quot;.&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;./with-top-level-await.js&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&quot;./init&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;./without-top-level-await.js&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,i,p,u,C=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-comment)">// &gt;= node 14 (with top-level await support)</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">import</span><span style="color: var(--shiki-color-text)"> api </span><span style="color: var(--shiki-token-keyword)">from</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;your-pkg&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-comment)">// &lt; node 14</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">import</span><span style="color: var(--shiki-color-text)"> init </span><span style="color: var(--shiki-token-keyword)">from</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;your-pkg/init&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)">() &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">api</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">init</span><span style="color: var(--shiki-color-text)">();</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;)();</span></span></code></pre>`;return{c(){s=y("blockquote"),s.innerHTML=n,e=f(),t=y("div"),a=new g(!1),i=f(),p=y("div"),u=new g(!1),this.h()},l(o){s=v(o,"BLOCKQUOTE",{class:!0,"data-svelte-h":!0}),M(s)!=="svelte-11o4k25"&&(s.innerHTML=n),e=w(o),t=v(o,"DIV",{class:!0});var r=b(t);a=q(r,!1),r.forEach(c),i=w(o),p=v(o,"DIV",{class:!0});var _=b(p);u=q(_,!1),_.forEach(c),this.h()},h(){d(s,"class","twitter-tweet"),a.a=null,d(t,"class","code-section"),u.a=null,d(p,"class","code-section")},m(o,r){h(o,s,r),h(o,e,r),h(o,t,r),a.m(l,t),h(o,i,r),h(o,p,r),u.m(C,p)},p:E,d(o){o&&(c(s),c(e),c(t),c(i),c(p))}}}function P(k){let s,n;const e=[k[0],j];let t={$$slots:{default:[K]},$$scope:{ctx:k}};for(let a=0;a<e.length;a+=1)t=m(t,e[a]);return s=new V({props:t}),{c(){T(s.$$.fragment)},l(a){B(s.$$.fragment,a)},m(a,l){R(s,a,l),n=!0},p(a,[l]){const i=l&1?O(e,[l&1&&$(a[0]),l&0&&$(j)]):{};l&2&&(i.$$scope={dirty:l,ctx:a}),s.$set(i)},i(a){n||(S(s.$$.fragment,a),n=!0)},o(a){z(s.$$.fragment,a),n=!1},d(a){D(s,a)}}}const j={title:"Async initialisation of node lib",tags:["nodejs"],description:"..."};function Q(k,s,n){return I("blog",{image:A}),k.$$set=e=>{n(0,s=m(m({},s),x(e)))},s=x(s),[s]}class X extends L{constructor(s){super(),N(this,s,Q,P,H,{})}}export{X as component};
