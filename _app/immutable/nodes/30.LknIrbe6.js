import{s as Yn,d as ms,e as eo,f as Rn,n as to}from"../chunks/scheduler.85ImRbsk.js";import{S as so,i as no,m as oo,n as ao,o as lo,t as ro,a as io,p as po,e as t,s as n,H as g,c as s,q as a,h as o,d as w,r as _,g as h,u as b,j as m,k as e}from"../chunks/index.JMRAb4ib.js";import{g as co,a as On}from"../chunks/code-snippet.p32Anx_S.js";import{B as ho}from"../chunks/BlogLayout.TadBQAnB.js";const ko=""+new URL("../assets/github-blame.cl4kGowD.webp",import.meta.url).href,vo=""+new URL("../assets/github-blame.3UfAslto.webp",import.meta.url).href,yo=""+new URL("../assets/github-blame.t-jJxhJf.png",import.meta.url).href,Dn=""+new URL("../assets/github-blame.pqrFQVHH.png",import.meta.url).href,uo=""+new URL("../assets/hero-twitter._FUJmSS3.jpg",import.meta.url).href;function xo(P){let u,H="The following is a record of the steps I went through when debugging a build-time bug I encountered during work.",I,T,f="It all started with an error message during the build.",C,L,Ne,$n=`<pre class="prism language-"><code><span class="line">ERROR in bundle.xxxx.js from Terser</span>
<span class="line">undefined</span>
<span class="line"></span>
<span class="line">...</span>
<span class="line"></span>
<span class="line">Command failed with exit code 2</span>
<span class="line">Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.</span>
<span class="line">Error: Command failed: yarn build</span></code></pre>`,We,M,ws="What is wrong with Terser and our code?",Ge,q,gs="<strong>I must find the root cause of this!</strong>",Je,k,E,_s='<a href="#act-i-the-first-attempt" id="act-i-the-first-attempt">Act I - The First Attempt</a>',ht,S,bs='We used Terser to minify our build code. It was part of our webpack pipeline, installed through <code class="inline">terser-webpack-plugin</code>. Since terser is throwing an error, so I disabled <code class="inline">terser-webpack-plugin</code> and build again.',kt,A,Qe,Bn=`<div class="filename">webpackConfig.prod.js</div><pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-constant)">module</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">exports</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  plugins</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> [</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// ...</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// disable terser first</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// new TerserPlugin(&#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// 	terserOptions: &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">//     // ...</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">//   &#125;,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// &#125;),</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  ]</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;;</span></span></code></pre>`,dt,R,Cs="Ok. The build was successful. Nothing wrong with the code nor the build.",vt,O,Ts="So, I run the terser manually:",yt,D,Ke,Un=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">terser</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;terser&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">fs</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;fs&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">path</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;path&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">input</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">fs</span><span style="color: var(--shiki-token-function)">.readFileSync</span><span style="color: var(--shiki-color-text)">(</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">path</span><span style="color: var(--shiki-token-function)">.join</span><span style="color: var(--shiki-color-text)">(__dirname</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;dist/bundle.xxxx.js&#39;</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-string-expression)">&#39;utf-8&#39;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">output</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">terser</span><span style="color: var(--shiki-token-function)">.minify</span><span style="color: var(--shiki-color-text)">(input</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">// ...terser options</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;);</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">console</span><span style="color: var(--shiki-token-function)">.log</span><span style="color: var(--shiki-color-text)">(output);</span></span></code></pre>`,ut,V,Is="The console output an error that was cryptic",xt,$,Ze,zn=`<pre class="prism language-"><code><span class="line">&#123;</span>
<span class="line">  &quot;error&quot;:</span>
<span class="line">  TypeError: Cannot read property &#39;name&#39; of undefined</span>
<span class="line">      at A.f (node_modules/terser/dist/bundle.js:44:146028)</span>
<span class="line">      at D (node_modules/terser/dist/bundle.js:44:2863)</span>
<span class="line">      at A (node_modules/terser/dist/bundle.js:44:146075)</span>
<span class="line">      at k (node_modules/terser/dist/bundle.js:44:146998)</span>
<span class="line">      at vn (node_modules/terser/dist/bundle.js:44:133003)</span>
<span class="line">      at node_modules/terser/dist/bundle.js:44:165250</span>
<span class="line">      at AST_BlockStatement.optimize (node_modules/terser/dist/bundle.js:44:121400)</span>
<span class="line">      at Ct.before (node_modules/terser/dist/bundle.js:44:121157)</span>
<span class="line">      at AST_BlockStatement.transform (node_modules/terser/dist/bundle.js:44:78200)</span>
<span class="line">      at node_modules/terser/dist/bundle.js:44:78849</span>
<span class="line">&#125;</span></code></pre>`,ft,B,Ls="I clicked into the terser source code to see what was going wrong over there. <em>(Maybe it&#39;s my chance to contribute to terser?)</em>",mt,U,Hs="Little did I know, how wrong I could be.",wt,z,Ms='<code class="inline">terser/dist/bundle.js</code> was a minified code and it wasn&#39;t meant for humans eyes 😭',gt,F,qs="Allow me to share a small snippet of what I saw:",_t,N,Xe,Fn=`<pre class="prism language-"><code><span class="line">...</span>
<span class="line">s) &#125; else if (u instanceof Se &amp;&amp; r === u.expression &amp;&amp; (p(e, t, i, u, o = n(o, u.property), a + 1,</span>
<span class="line">  s + 1), o)) return; a &gt; 0 || u instanceof Be &amp;&amp; r !== u.tail_node() || u instanceof S ||</span>
<span class="line">(t.direct_access = !0) &#125; e(F, u); var d = new qn(function (e) &#123; if (e instanceof Je) &#123; var n =</span>
<span class="line">e.definition(); n &amp;&amp; (e instanceof hn &amp;&amp; n.references.push(e), n.fixed = !1) &#125; &#125;); function h(e, n,</span>
<span class="line">t) &#123; this.inlined = !1; var r = e.safe_ids; return e.safe_ids = Object.create(null), i(e, t, this),</span>
<span class="line">n(), e.safe_ids = r, !0 &#125; function m(e, n, t) &#123; var r, o = this; return o.inlined = !1, a(e), i(e,</span>
<span class="line">t, o), !o.name &amp;&amp; (r = e.parent()) instanceof ke &amp;&amp; r.expression === o &amp;&amp; o.argnames.forEach(</span>
<span class="line">function (n, t) &#123; if (n.definition) &#123; var i = n.definition(); void 0 !== i.fixed || o.uses_arguments</span>
<span class="line">&amp;&amp; !e.has_directive(&quot;use strict&quot;) ? i.fixed = !1 : (i.fixed = function () &#123; return r.args[t] || v(kn, r)</span>
<span class="line">...</span></code></pre>`,bt,W,js="At this point in time, I had another meeting to attend, so I stopped at this juncture.",Ct,G,Ps="On my way there, I was thinking, well, maybe I should probe this later in another direction.",Ye,i,J,Es='<a href="#act-ii-terser-webpack-plugin" id="act-ii-terser-webpack-plugin">Act II - terser-webpack-plugin</a>',Tt,Q,Ss="After the meeting, I was thinking, well let me reenable the terser plugin, and try to probe through the plugin.",It,K,As='Remember the error message: <code class="inline">&quot;ERROR in bundle.xxxx.js from Terser&quot;</code> ?',Lt,Z,Rs='I looked into the <code class="inline">node_modules/terser-webpack/plugin/dist/index.js</code> and search for the word <code class="inline">&quot;from Terser&quot;</code>.',Ht,X,Os='<strong>Tip:</strong> Usually when you want to debug a library installed in <code class="inline">node_modules</code>, you can first look at the <code class="inline">package.json</code>, it usually has an entry called <code class="inline">&quot;main&quot;</code> that tells you the entry file to first look into. The main file usually exports all the public API that you use, so it is a good place to start diving into.',Mt,Y,Ds="So I found the line:",qt,ee,et,Nn='<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">Error</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#96;</span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">file</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)"> from Terser&#92;n</span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-token-constant)">err</span><span style="color: var(--shiki-color-text)">.message</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">&#96;</span><span style="color: var(--shiki-color-text)">);</span></span></code></pre>',jt,te,Vs='After adding logs <code class="inline">console.log(err)</code> and run the build again, I realised the err is an empty object <code class="inline">{}</code>, which explained why I saw <code class="inline">undefined</code> after the <code class="inline">ERROR in ... from Terser</code>.',Pt,se,$s='So, I slowly traced back the caller, and find out where this <code class="inline">err</code> object was initially created.',Et,ne,Bs="<strong>Tip:</strong> To trace the callers of a function that leads up to a certain state of your application, you can:",St,oe,Us='<li>Use a <a href="https://blittle.github.io/chrome-dev-tools/sources/conditional-breakpoints.html" rel="nofollow">conditional breakpoint</a> if you are debugging through a debugger</li> <li>Throw an error within a try catch</li>',At,ae,tt,Wn=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">someFunction</span><span style="color: var(--shiki-color-text)">() &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> (someConditionThatLeadsToErrorLaterOn) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">try</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-keyword)">throw</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">Error</span><span style="color: var(--shiki-color-text)">();</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &#125; </span><span style="color: var(--shiki-token-keyword)">catch</span><span style="color: var(--shiki-color-text)"> (error) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-constant)">console</span><span style="color: var(--shiki-token-function)">.log</span><span style="color: var(--shiki-color-text)">(error);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Rt,le,zs="This is especially useful if you are tracing an unfamiliar code, you can quickly get a call stack that leads up to the current condition.",Ot,re,Fs='After tracing through the call stack, I ended up at the line where the <code class="inline">terser-webpack-plugin</code> calls the terser, and when I logged out the error, it shows:',Dt,ie,st,Gn=`<pre class="prism language-"><code><span class="line">&#123;</span>
<span class="line">  &quot;error&quot;:</span>
<span class="line">  TypeError: Cannot read property &#39;name&#39; of undefined</span>
<span class="line">      at A.f (node_modules/terser/dist/bundle.js:44:146028)</span>
<span class="line">      at D (node_modules/terser/dist/bundle.js:44:2863)</span>
<span class="line">      at A (node_modules/terser/dist/bundle.js:44:146075)</span>
<span class="line">      at k (node_modules/terser/dist/bundle.js:44:146998)</span>
<span class="line">      at vn (node_modules/terser/dist/bundle.js:44:133003)</span>
<span class="line">      at node_modules/terser/dist/bundle.js:44:165250</span>
<span class="line">      at AST_BlockStatement.optimize (node_modules/terser/dist/bundle.js:44:121400)</span>
<span class="line">      at Ct.before (node_modules/terser/dist/bundle.js:44:121157)</span>
<span class="line">      at AST_BlockStatement.transform (node_modules/terser/dist/bundle.js:44:78200)</span>
<span class="line">      at node_modules/terser/dist/bundle.js:44:78849</span>
<span class="line">&#125;</span></code></pre>`,Vt,pe,Ns="So familiar! After an hour of tracing and debugging, I ended up at the same place.",$t,ce,Ws='<strong>Note:</strong> the error must have lost somewhere from the terser to the actual print out of <code class="inline">terser-webpack-plugin</code>, it might have fixed in a later version of <code class="inline">terser-webpack-plugin</code>, but I&#39;m not sure of it yet. Anyone interested can help check.',nt,p,he,Gs='<a href="#act-iii-terser" id="act-iii-terser">Act III - Terser</a>',Bt,ke,Js="The circumstances left me with no choice. I needed to face the cryptic minified code.",Ut,de,Qs="Luckily VSCode still able to open the huge minified file, and able to set the cursor to the right line and column:",zt,ve,ot,Jn=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">var</span><span style="color: var(--shiki-color-text)"> f </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">n</span><span style="color: var(--shiki-token-function)">.option</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;ecma&quot;</span><span style="color: var(--shiki-color-text)">) </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">6</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&amp;&amp;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">n</span><span style="color: var(--shiki-token-function)">.has_directive</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;use strict&quot;</span><span style="color: var(--shiki-color-text)">) </span><span style="color: var(--shiki-token-keyword)">?</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> (e) &#123; </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">e</span><span style="color: var(--shiki-color-text)">.key</span><span style="color: var(--shiki-token-keyword)">!=</span><span style="color: var(--shiki-color-text)">u </span><span style="color: var(--shiki-token-keyword)">&amp;&amp;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">e</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">key</span><span style="color: var(--shiki-color-text)">.name</span><span style="color: var(--shiki-token-keyword)">!=</span><span style="color: var(--shiki-color-text)">u &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">                                        </span><span style="color: var(--shiki-token-keyword)">^</span></span></code></pre>`,Ft,ye,Ks="(By the way, in the minified code, all the code is in one line. 🤦‍♂️)",Nt,ue,Zs='Well, this may seem like the right place to throw the <code class="inline">&quot;Cannot read property &#39;name&#39; of undefined&quot;</code> error.',Wt,xe,Xs='To understand what is going on in this line, I cloned <a href="https://github.com/terser/terser" rel="nofollow">terser</a>, checked out to the version tag that was installed in our codebase, and tried to figure out where that line was in the original code.',Gt,fe,Ys='<strong>Tip:</strong> String, property and method names are usually the best marker to trace a <a href="http://lisperator.net/uglifyjs/mangle" rel="nofollow">mangled code</a>. Even though all the variables have mangled into a single character variable name, you can still clearly see the method <code class="inline">has_directive()</code> and the string <code class="inline">&quot;use strict&quot;</code>.',Jt,me,en="Conversely, please don't write long windy property / method names, it doesn't mangle well.",Qt,we,tn='So I global searched the keyword <code class="inline">has_directive(&quot;use strict&quot;)</code> and landed with a small number of results, which I looked through every one of them and ended up with the following line:',Kt,ge,at,Qn=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">var</span><span style="color: var(--shiki-color-text)"> diff </span><span style="color: var(--shiki-token-keyword)">=</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">compressor</span><span style="color: var(--shiki-token-function)">.option</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;ecma&#39;</span><span style="color: var(--shiki-color-text)">) </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">6</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&amp;&amp;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">compressor</span><span style="color: var(--shiki-token-function)">.has_directive</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;use strict&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">?</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)">(node) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">node</span><span style="color: var(--shiki-color-text)">.key </span><span style="color: var(--shiki-token-keyword)">!=</span><span style="color: var(--shiki-color-text)"> prop </span><span style="color: var(--shiki-token-keyword)">&amp;&amp;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">node</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">key</span><span style="color: var(--shiki-color-text)">.name </span><span style="color: var(--shiki-token-keyword)">!=</span><span style="color: var(--shiki-color-text)"> prop;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)">(node) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">node</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">key</span><span style="color: var(--shiki-color-text)">.name </span><span style="color: var(--shiki-token-keyword)">!=</span><span style="color: var(--shiki-color-text)"> prop;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      &#125;;</span></span></code></pre>`,Zt,_e,sn="Which I was and still am clueless of what this code was trying to do.",Xt,be,nn='So I did the most reasonable thing, add a <code class="inline">console.log(node)</code>.',Yt,Ce,lt,Kn=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">var</span><span style="color: var(--shiki-color-text)"> f </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">n</span><span style="color: var(--shiki-token-function)">.option</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;ecma&quot;</span><span style="color: var(--shiki-color-text)">) </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">6</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&amp;&amp;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">n</span><span style="color: var(--shiki-token-function)">.has_directive</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;use strict&quot;</span><span style="color: var(--shiki-color-text)">) </span><span style="color: var(--shiki-token-keyword)">?</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> (e) &#123; </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> (</span><span style="color: var(--shiki-token-keyword)">!</span><span style="color: var(--shiki-token-constant)">e</span><span style="color: var(--shiki-color-text)">.key) &#123; </span><span style="color: var(--shiki-token-constant)">console</span><span style="color: var(--shiki-token-function)">.log</span><span style="color: var(--shiki-color-text)">(e); &#125; </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">e</span><span style="color: var(--shiki-color-text)">.key</span><span style="color: var(--shiki-token-keyword)">!=</span><span style="color: var(--shiki-color-text)">u</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">               </span><span style="color: var(--shiki-token-keyword)">^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">&amp;&amp;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">e</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">key</span><span style="color: var(--shiki-color-text)">.name</span><span style="color: var(--shiki-token-keyword)">!=</span><span style="color: var(--shiki-color-text)">u &#125;</span></span></code></pre>`,es,Te,on='I found out that the <code class="inline">node</code> is an object, that does not have a property <code class="inline">key</code>, which explains the error. And <code class="inline">node</code> has a property call <code class="inline">name</code> that has a value <code class="inline">&quot;foobar&quot;</code>, which I assumed is a variable name in our codebase. Luckily <code class="inline">foobar</code> wasn&#39;t commonly used in our codebase, and I managed to find only 1 instance of it, and astonishingly, the code was last changed 1 year ago!',ts,Ie,an="So Terser just decided to break, without a sign, on a line of code that was written 1 year ago. This is the life of a programmer.",rt,r,Le,ln='<a href="#final-act-the-resolution" id="final-act-the-resolution">Final Act - The Resolution</a>',ss,He,rn="I kind of concluded that the root cause was a Terser bug, (because I can't just change the code that wasn't touched for nearly 1 year for no good reason), so the obvious thing to do next was to figured out whether someone fixed it on Terser upstream.",ns,Me,pn="So, I checked out the master branch of Terser, found out the code has changed to",os,qe,it,Zn=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">var</span><span style="color: var(--shiki-color-text)"> diff </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">compressor</span><span style="color: var(--shiki-token-function)">.option</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;ecma&quot;</span><span style="color: var(--shiki-color-text)">) </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">2015</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&amp;&amp;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">compressor</span><span style="color: var(--shiki-token-function)">.has_directive</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;use strict&quot;</span><span style="color: var(--shiki-color-text)">) </span><span style="color: var(--shiki-token-keyword)">?</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)">(node) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">node</span><span style="color: var(--shiki-color-text)">.key </span><span style="color: var(--shiki-token-keyword)">!=</span><span style="color: var(--shiki-color-text)"> prop </span><span style="color: var(--shiki-token-keyword)">&amp;&amp;</span><span style="color: var(--shiki-color-text)"> (</span><span style="color: var(--shiki-token-constant)">node</span><span style="color: var(--shiki-color-text)">.key </span><span style="color: var(--shiki-token-keyword)">&amp;&amp;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">node</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">key</span><span style="color: var(--shiki-color-text)">.name </span><span style="color: var(--shiki-token-keyword)">!=</span><span style="color: var(--shiki-color-text)"> prop);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125; </span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)">(node) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">node</span><span style="color: var(--shiki-color-text)">.key </span><span style="color: var(--shiki-token-keyword)">&amp;&amp;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">node</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">key</span><span style="color: var(--shiki-color-text)">.name </span><span style="color: var(--shiki-token-keyword)">!=</span><span style="color: var(--shiki-color-text)"> prop;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;;</span></span></code></pre>`,as,je,cn='<code class="inline">node.key</code> is checked to be existed before checking <code class="inline">node.key.name</code>. What a simple patch!',ls,Pe,hn="The next thing I needed to figure out was when was this fix landed, whether I can upgrade it.",rs,Ee,kn="The Terser in the codebase was one major version behind the latest Terser version, so, I was more reserved to upgrade to the latest version.",is,Se,dn="The git blame for the line of code was for some code refactoring, so I went to Github to trace the blame.",ps,Ae,vn="<strong>Tip:</strong> Github blame has this very useful button, that allows you to view blame prior to the change.",cs,Re,yn=`<span style="display: block; position: relative; padding-top: 29.585%; width: 100%;"><picture><source type="image/webp" srcset="${vo}, ${ko} 2x"/><img src="${Dn}" srcset="${Dn}, ${yo} 2x" loading="lazy" style="position: absolute; top: 0; width: 100%; height: 100%" alt="Github: view blame prior to the change"/></picture></span>`,hs,Oe,un="A few blame traces later, I ended up with a commit that fixed the bug:",ks,De,xn='<p><a href="https://github.com/terser/terser/pull/286" rel="nofollow">fix node.key crashing lib/compress by hytromo · Pull Request #286 · terser/terser</a></p>',ds,Ve,fn='By looking at the MR merged date, I found that the commit was landed in between <a href="https://github.com/terser/terser/compare/v3.16.0...v3.17.0" rel="nofollow">v3.16.0 and v3.17.0</a>.',vs,$e,mn="v3.17.0 was a minor version bump for our codebase, so I assumed it has no breaking changes.",ys,Be,wn='<code class="inline">terser</code> was installed as a dependency of <code class="inline">terser-webpack-plugin</code>, which we had no control on the terser version, so I added a resolution to our <code class="inline">package.json</code>:',us,Ue,pt,Xn=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">&quot;resolution&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&quot;terser&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;3.17.0&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,xs,ze,gn="After I upgraded terser, I build the code again.",fs,Fe,_n="The build was successful! 🎉",ct,j,bn='<h2><a href="#closing-note" id="closing-note">Closing Note</a></h2> <p>As I was explaining all these to my colleague, I realised that should I upgraded the terser once I found out that it was a terser error, it would have fixed the bug as well. I wouldn&#39;t need to go through all these to end up in the same fix.</p> <p>Oh well. 🤷‍♂️</p>';return{c(){u=t("p"),u.textContent=H,I=n(),T=t("p"),T.textContent=f,C=n(),L=t("div"),Ne=new g(!1),We=n(),M=t("p"),M.textContent=ws,Ge=n(),q=t("p"),q.innerHTML=gs,Je=n(),k=t("section"),E=t("h2"),E.innerHTML=_s,ht=n(),S=t("p"),S.innerHTML=bs,kt=n(),A=t("div"),Qe=new g(!1),dt=n(),R=t("p"),R.textContent=Cs,vt=n(),O=t("p"),O.textContent=Ts,yt=n(),D=t("div"),Ke=new g(!1),ut=n(),V=t("p"),V.textContent=Is,xt=n(),$=t("div"),Ze=new g(!1),ft=n(),B=t("p"),B.innerHTML=Ls,mt=n(),U=t("p"),U.textContent=Hs,wt=n(),z=t("p"),z.innerHTML=Ms,gt=n(),F=t("p"),F.textContent=qs,_t=n(),N=t("div"),Xe=new g(!1),bt=n(),W=t("p"),W.textContent=js,Ct=n(),G=t("p"),G.textContent=Ps,Ye=n(),i=t("section"),J=t("h2"),J.innerHTML=Es,Tt=n(),Q=t("p"),Q.textContent=Ss,It=n(),K=t("p"),K.innerHTML=As,Lt=n(),Z=t("p"),Z.innerHTML=Rs,Ht=n(),X=t("p"),X.innerHTML=Os,Mt=n(),Y=t("p"),Y.textContent=Ds,qt=n(),ee=t("div"),et=new g(!1),jt=n(),te=t("p"),te.innerHTML=Vs,Pt=n(),se=t("p"),se.innerHTML=$s,Et=n(),ne=t("p"),ne.innerHTML=Bs,St=n(),oe=t("ul"),oe.innerHTML=Us,At=n(),ae=t("div"),tt=new g(!1),Rt=n(),le=t("p"),le.textContent=zs,Ot=n(),re=t("p"),re.innerHTML=Fs,Dt=n(),ie=t("div"),st=new g(!1),Vt=n(),pe=t("p"),pe.textContent=Ns,$t=n(),ce=t("p"),ce.innerHTML=Ws,nt=n(),p=t("section"),he=t("h2"),he.innerHTML=Gs,Bt=n(),ke=t("p"),ke.textContent=Js,Ut=n(),de=t("p"),de.textContent=Qs,zt=n(),ve=t("div"),ot=new g(!1),Ft=n(),ye=t("p"),ye.textContent=Ks,Nt=n(),ue=t("p"),ue.innerHTML=Zs,Wt=n(),xe=t("p"),xe.innerHTML=Xs,Gt=n(),fe=t("p"),fe.innerHTML=Ys,Jt=n(),me=t("p"),me.textContent=en,Qt=n(),we=t("p"),we.innerHTML=tn,Kt=n(),ge=t("div"),at=new g(!1),Zt=n(),_e=t("p"),_e.textContent=sn,Xt=n(),be=t("p"),be.innerHTML=nn,Yt=n(),Ce=t("div"),lt=new g(!1),es=n(),Te=t("p"),Te.innerHTML=on,ts=n(),Ie=t("p"),Ie.textContent=an,rt=n(),r=t("section"),Le=t("h2"),Le.innerHTML=ln,ss=n(),He=t("p"),He.textContent=rn,ns=n(),Me=t("p"),Me.textContent=pn,os=n(),qe=t("div"),it=new g(!1),as=n(),je=t("p"),je.innerHTML=cn,ls=n(),Pe=t("p"),Pe.textContent=hn,rs=n(),Ee=t("p"),Ee.textContent=kn,is=n(),Se=t("p"),Se.textContent=dn,ps=n(),Ae=t("p"),Ae.innerHTML=vn,cs=n(),Re=t("p"),Re.innerHTML=yn,hs=n(),Oe=t("p"),Oe.textContent=un,ks=n(),De=t("blockquote"),De.innerHTML=xn,ds=n(),Ve=t("p"),Ve.innerHTML=fn,vs=n(),$e=t("p"),$e.textContent=mn,ys=n(),Be=t("p"),Be.innerHTML=wn,us=n(),Ue=t("div"),pt=new g(!1),xs=n(),ze=t("p"),ze.textContent=gn,fs=n(),Fe=t("p"),Fe.textContent=_n,ct=n(),j=t("section"),j.innerHTML=bn,this.h()},l(l){u=s(l,"P",{"data-svelte-h":!0}),a(u)!=="svelte-g4xsib"&&(u.textContent=H),I=o(l),T=s(l,"P",{"data-svelte-h":!0}),a(T)!=="svelte-hns1oj"&&(T.textContent=f),C=o(l),L=s(l,"DIV",{class:!0});var x=w(L);Ne=_(x,!1),x.forEach(h),We=o(l),M=s(l,"P",{"data-svelte-h":!0}),a(M)!=="svelte-keximh"&&(M.textContent=ws),Ge=o(l),q=s(l,"P",{"data-svelte-h":!0}),a(q)!=="svelte-15xyumi"&&(q.innerHTML=gs),Je=o(l),k=s(l,"SECTION",{});var y=w(k);E=s(y,"H2",{"data-svelte-h":!0}),a(E)!=="svelte-sv063e"&&(E.innerHTML=_s),ht=o(y),S=s(y,"P",{"data-svelte-h":!0}),a(S)!=="svelte-1qn4732"&&(S.innerHTML=bs),kt=o(y),A=s(y,"DIV",{class:!0});var Cn=w(A);Qe=_(Cn,!1),Cn.forEach(h),dt=o(y),R=s(y,"P",{"data-svelte-h":!0}),a(R)!=="svelte-1uuwdr8"&&(R.textContent=Cs),vt=o(y),O=s(y,"P",{"data-svelte-h":!0}),a(O)!=="svelte-gsni4h"&&(O.textContent=Ts),yt=o(y),D=s(y,"DIV",{class:!0});var Tn=w(D);Ke=_(Tn,!1),Tn.forEach(h),ut=o(y),V=s(y,"P",{"data-svelte-h":!0}),a(V)!=="svelte-1h3kong"&&(V.textContent=Is),xt=o(y),$=s(y,"DIV",{class:!0});var In=w($);Ze=_(In,!1),In.forEach(h),ft=o(y),B=s(y,"P",{"data-svelte-h":!0}),a(B)!=="svelte-p01syw"&&(B.innerHTML=Ls),mt=o(y),U=s(y,"P",{"data-svelte-h":!0}),a(U)!=="svelte-1ol04dh"&&(U.textContent=Hs),wt=o(y),z=s(y,"P",{"data-svelte-h":!0}),a(z)!=="svelte-10rq88z"&&(z.innerHTML=Ms),gt=o(y),F=s(y,"P",{"data-svelte-h":!0}),a(F)!=="svelte-u19wq9"&&(F.textContent=qs),_t=o(y),N=s(y,"DIV",{class:!0});var Ln=w(N);Xe=_(Ln,!1),Ln.forEach(h),bt=o(y),W=s(y,"P",{"data-svelte-h":!0}),a(W)!=="svelte-gdq127"&&(W.textContent=js),Ct=o(y),G=s(y,"P",{"data-svelte-h":!0}),a(G)!=="svelte-ks12az"&&(G.textContent=Ps),y.forEach(h),Ye=o(l),i=s(l,"SECTION",{});var d=w(i);J=s(d,"H2",{"data-svelte-h":!0}),a(J)!=="svelte-2gx4ci"&&(J.innerHTML=Es),Tt=o(d),Q=s(d,"P",{"data-svelte-h":!0}),a(Q)!=="svelte-1wie7fc"&&(Q.textContent=Ss),It=o(d),K=s(d,"P",{"data-svelte-h":!0}),a(K)!=="svelte-1tvl1nm"&&(K.innerHTML=As),Lt=o(d),Z=s(d,"P",{"data-svelte-h":!0}),a(Z)!=="svelte-13hqo21"&&(Z.innerHTML=Rs),Ht=o(d),X=s(d,"P",{"data-svelte-h":!0}),a(X)!=="svelte-194z6as"&&(X.innerHTML=Os),Mt=o(d),Y=s(d,"P",{"data-svelte-h":!0}),a(Y)!=="svelte-1mqvxeu"&&(Y.textContent=Ds),qt=o(d),ee=s(d,"DIV",{class:!0});var Hn=w(ee);et=_(Hn,!1),Hn.forEach(h),jt=o(d),te=s(d,"P",{"data-svelte-h":!0}),a(te)!=="svelte-s5krrl"&&(te.innerHTML=Vs),Pt=o(d),se=s(d,"P",{"data-svelte-h":!0}),a(se)!=="svelte-1u4bhpj"&&(se.innerHTML=$s),Et=o(d),ne=s(d,"P",{"data-svelte-h":!0}),a(ne)!=="svelte-gh1w8e"&&(ne.innerHTML=Bs),St=o(d),oe=s(d,"UL",{"data-svelte-h":!0}),a(oe)!=="svelte-12nklpv"&&(oe.innerHTML=Us),At=o(d),ae=s(d,"DIV",{class:!0});var Mn=w(ae);tt=_(Mn,!1),Mn.forEach(h),Rt=o(d),le=s(d,"P",{"data-svelte-h":!0}),a(le)!=="svelte-1nb3mzy"&&(le.textContent=zs),Ot=o(d),re=s(d,"P",{"data-svelte-h":!0}),a(re)!=="svelte-ln8s6d"&&(re.innerHTML=Fs),Dt=o(d),ie=s(d,"DIV",{class:!0});var qn=w(ie);st=_(qn,!1),qn.forEach(h),Vt=o(d),pe=s(d,"P",{"data-svelte-h":!0}),a(pe)!=="svelte-14c7wx0"&&(pe.textContent=Ns),$t=o(d),ce=s(d,"P",{"data-svelte-h":!0}),a(ce)!=="svelte-1kyisc7"&&(ce.innerHTML=Ws),d.forEach(h),nt=o(l),p=s(l,"SECTION",{});var v=w(p);he=s(v,"H2",{"data-svelte-h":!0}),a(he)!=="svelte-9p3snd"&&(he.innerHTML=Gs),Bt=o(v),ke=s(v,"P",{"data-svelte-h":!0}),a(ke)!=="svelte-35nvj9"&&(ke.textContent=Js),Ut=o(v),de=s(v,"P",{"data-svelte-h":!0}),a(de)!=="svelte-ujoiz"&&(de.textContent=Qs),zt=o(v),ve=s(v,"DIV",{class:!0});var jn=w(ve);ot=_(jn,!1),jn.forEach(h),Ft=o(v),ye=s(v,"P",{"data-svelte-h":!0}),a(ye)!=="svelte-1kmbmbm"&&(ye.textContent=Ks),Nt=o(v),ue=s(v,"P",{"data-svelte-h":!0}),a(ue)!=="svelte-1j9r97b"&&(ue.innerHTML=Zs),Wt=o(v),xe=s(v,"P",{"data-svelte-h":!0}),a(xe)!=="svelte-1xchxdn"&&(xe.innerHTML=Xs),Gt=o(v),fe=s(v,"P",{"data-svelte-h":!0}),a(fe)!=="svelte-bdha0f"&&(fe.innerHTML=Ys),Jt=o(v),me=s(v,"P",{"data-svelte-h":!0}),a(me)!=="svelte-19jvb7e"&&(me.textContent=en),Qt=o(v),we=s(v,"P",{"data-svelte-h":!0}),a(we)!=="svelte-1i07hrv"&&(we.innerHTML=tn),Kt=o(v),ge=s(v,"DIV",{class:!0});var Pn=w(ge);at=_(Pn,!1),Pn.forEach(h),Zt=o(v),_e=s(v,"P",{"data-svelte-h":!0}),a(_e)!=="svelte-1w9x7k6"&&(_e.textContent=sn),Xt=o(v),be=s(v,"P",{"data-svelte-h":!0}),a(be)!=="svelte-xc9j7n"&&(be.innerHTML=nn),Yt=o(v),Ce=s(v,"DIV",{class:!0});var En=w(Ce);lt=_(En,!1),En.forEach(h),es=o(v),Te=s(v,"P",{"data-svelte-h":!0}),a(Te)!=="svelte-1v6una1"&&(Te.innerHTML=on),ts=o(v),Ie=s(v,"P",{"data-svelte-h":!0}),a(Ie)!=="svelte-1lmumv0"&&(Ie.textContent=an),v.forEach(h),rt=o(l),r=s(l,"SECTION",{});var c=w(r);Le=s(c,"H2",{"data-svelte-h":!0}),a(Le)!=="svelte-1gvcqh2"&&(Le.innerHTML=ln),ss=o(c),He=s(c,"P",{"data-svelte-h":!0}),a(He)!=="svelte-1slqjj8"&&(He.textContent=rn),ns=o(c),Me=s(c,"P",{"data-svelte-h":!0}),a(Me)!=="svelte-xdoqpi"&&(Me.textContent=pn),os=o(c),qe=s(c,"DIV",{class:!0});var Sn=w(qe);it=_(Sn,!1),Sn.forEach(h),as=o(c),je=s(c,"P",{"data-svelte-h":!0}),a(je)!=="svelte-1r53g3r"&&(je.innerHTML=cn),ls=o(c),Pe=s(c,"P",{"data-svelte-h":!0}),a(Pe)!=="svelte-1ux4i17"&&(Pe.textContent=hn),rs=o(c),Ee=s(c,"P",{"data-svelte-h":!0}),a(Ee)!=="svelte-1atw79k"&&(Ee.textContent=kn),is=o(c),Se=s(c,"P",{"data-svelte-h":!0}),a(Se)!=="svelte-18fq8jk"&&(Se.textContent=dn),ps=o(c),Ae=s(c,"P",{"data-svelte-h":!0}),a(Ae)!=="svelte-x5uykb"&&(Ae.innerHTML=vn),cs=o(c),Re=s(c,"P",{"data-svelte-h":!0}),a(Re)!=="svelte-1x4b37o"&&(Re.innerHTML=yn),hs=o(c),Oe=s(c,"P",{"data-svelte-h":!0}),a(Oe)!=="svelte-j0t31a"&&(Oe.textContent=un),ks=o(c),De=s(c,"BLOCKQUOTE",{"data-svelte-h":!0}),a(De)!=="svelte-3nspc6"&&(De.innerHTML=xn),ds=o(c),Ve=s(c,"P",{"data-svelte-h":!0}),a(Ve)!=="svelte-99e41n"&&(Ve.innerHTML=fn),vs=o(c),$e=s(c,"P",{"data-svelte-h":!0}),a($e)!=="svelte-1yhfzzg"&&($e.textContent=mn),ys=o(c),Be=s(c,"P",{"data-svelte-h":!0}),a(Be)!=="svelte-10jo243"&&(Be.innerHTML=wn),us=o(c),Ue=s(c,"DIV",{class:!0});var An=w(Ue);pt=_(An,!1),An.forEach(h),xs=o(c),ze=s(c,"P",{"data-svelte-h":!0}),a(ze)!=="svelte-1ycj8ht"&&(ze.textContent=gn),fs=o(c),Fe=s(c,"P",{"data-svelte-h":!0}),a(Fe)!=="svelte-7rsuce"&&(Fe.textContent=_n),c.forEach(h),ct=o(l),j=s(l,"SECTION",{"data-svelte-h":!0}),a(j)!=="svelte-1eq5ey1"&&(j.innerHTML=bn),this.h()},h(){Ne.a=null,b(L,"class","code-section"),Qe.a=null,b(A,"class","code-section"),Ke.a=null,b(D,"class","code-section"),Ze.a=null,b($,"class","code-section"),Xe.a=null,b(N,"class","code-section"),et.a=null,b(ee,"class","code-section"),tt.a=null,b(ae,"class","code-section"),st.a=null,b(ie,"class","code-section"),ot.a=null,b(ve,"class","code-section"),at.a=null,b(ge,"class","code-section"),lt.a=null,b(Ce,"class","code-section"),it.a=null,b(qe,"class","code-section"),pt.a=null,b(Ue,"class","code-section")},m(l,x){m(l,u,x),m(l,I,x),m(l,T,x),m(l,C,x),m(l,L,x),Ne.m($n,L),m(l,We,x),m(l,M,x),m(l,Ge,x),m(l,q,x),m(l,Je,x),m(l,k,x),e(k,E),e(k,ht),e(k,S),e(k,kt),e(k,A),Qe.m(Bn,A),e(k,dt),e(k,R),e(k,vt),e(k,O),e(k,yt),e(k,D),Ke.m(Un,D),e(k,ut),e(k,V),e(k,xt),e(k,$),Ze.m(zn,$),e(k,ft),e(k,B),e(k,mt),e(k,U),e(k,wt),e(k,z),e(k,gt),e(k,F),e(k,_t),e(k,N),Xe.m(Fn,N),e(k,bt),e(k,W),e(k,Ct),e(k,G),m(l,Ye,x),m(l,i,x),e(i,J),e(i,Tt),e(i,Q),e(i,It),e(i,K),e(i,Lt),e(i,Z),e(i,Ht),e(i,X),e(i,Mt),e(i,Y),e(i,qt),e(i,ee),et.m(Nn,ee),e(i,jt),e(i,te),e(i,Pt),e(i,se),e(i,Et),e(i,ne),e(i,St),e(i,oe),e(i,At),e(i,ae),tt.m(Wn,ae),e(i,Rt),e(i,le),e(i,Ot),e(i,re),e(i,Dt),e(i,ie),st.m(Gn,ie),e(i,Vt),e(i,pe),e(i,$t),e(i,ce),m(l,nt,x),m(l,p,x),e(p,he),e(p,Bt),e(p,ke),e(p,Ut),e(p,de),e(p,zt),e(p,ve),ot.m(Jn,ve),e(p,Ft),e(p,ye),e(p,Nt),e(p,ue),e(p,Wt),e(p,xe),e(p,Gt),e(p,fe),e(p,Jt),e(p,me),e(p,Qt),e(p,we),e(p,Kt),e(p,ge),at.m(Qn,ge),e(p,Zt),e(p,_e),e(p,Xt),e(p,be),e(p,Yt),e(p,Ce),lt.m(Kn,Ce),e(p,es),e(p,Te),e(p,ts),e(p,Ie),m(l,rt,x),m(l,r,x),e(r,Le),e(r,ss),e(r,He),e(r,ns),e(r,Me),e(r,os),e(r,qe),it.m(Zn,qe),e(r,as),e(r,je),e(r,ls),e(r,Pe),e(r,rs),e(r,Ee),e(r,is),e(r,Se),e(r,ps),e(r,Ae),e(r,cs),e(r,Re),e(r,hs),e(r,Oe),e(r,ks),e(r,De),e(r,ds),e(r,Ve),e(r,vs),e(r,$e),e(r,ys),e(r,Be),e(r,us),e(r,Ue),pt.m(Xn,Ue),e(r,xs),e(r,ze),e(r,fs),e(r,Fe),m(l,ct,x),m(l,j,x)},p:to,d(l){l&&(h(u),h(I),h(T),h(C),h(L),h(We),h(M),h(Ge),h(q),h(Je),h(k),h(Ye),h(i),h(nt),h(p),h(rt),h(r),h(ct),h(j))}}}function fo(P){let u,H;const I=[P[0],Vn];let T={$$slots:{default:[xo]},$$scope:{ctx:P}};for(let f=0;f<I.length;f+=1)T=ms(T,I[f]);return u=new ho({props:T}),{c(){oo(u.$$.fragment)},l(f){ao(u.$$.fragment,f)},m(f,C){lo(u,f,C),H=!0},p(f,[C]){const L=C&1?co(I,[C&1&&On(f[0]),C&0&&On(Vn)]):{};C&2&&(L.$$scope={dirty:C,ctx:f}),u.$set(L)},i(f){H||(ro(u.$$.fragment,f),H=!0)},o(f){io(u.$$.fragment,f),H=!1},d(f){po(u,f)}}}const Vn={title:"Debugging Story: Build failed, error from Terser",date:"2020-01-08T08:00:00Z",tags:["debugging"],description:"It all started with an error message during the build: 'ERROR in bundle.xxx.js from Terser'.",label:"blog",tableOfContents:[{link:"act-i-the-first-attempt",title:"Act I - The First Attempt"},{link:"act-ii-terser-webpack-plugin",title:"Act II - terser-webpack-plugin"},{link:"act-iii-terser",title:"Act III - Terser"},{link:"final-act-the-resolution",title:"Final Act - The Resolution"},{link:"closing-note",title:"Closing Note"}]};function mo(P,u,H){return eo("blog",{image:uo}),P.$$set=I=>{H(0,u=ms(ms({},u),Rn(I)))},u=Rn(u),[u]}class Co extends so{constructor(u){super(),no(this,u,mo,fo,Yn,{})}}export{Co as component};
