import{s as Zs,d as xs,e as Js,f as Rs,n as Ks}from"../chunks/scheduler.D6VJxl8L.js";import{S as Qs,i as Xs,m as sa,n as aa,o as na,t as oa,a as ta,p as ea,e as o,s as i,H as P,c as t,q as k,h as p,d,r as F,g as a,u as A,j as c,k as n}from"../chunks/index.CLAVN-Y5.js";import{g as la,a as Us}from"../chunks/code-snippet.Gym6WUAG.js";import{B as ra}from"../chunks/BlogLayout.BTH3PMCG.js";import{t as ia}from"../chunks/twitter-card-image.C3bQ3Oc7.js";const pa=""+new URL("../assets/reversible.D4bnAF95.gif",import.meta.url).href,Ns=""+new URL("../assets/reversible.DUxSH2cC.gif",import.meta.url).href,ca=""+new URL("../assets/breakdown-3.D-pvMTu4.gif",import.meta.url).href,Os=""+new URL("../assets/breakdown-3.CC53olbv.gif",import.meta.url).href,ka=""+new URL("../assets/breakdown-2.DfMkBgjm.gif",import.meta.url).href,Bs=""+new URL("../assets/breakdown-2.DvwTrMrI.gif",import.meta.url).href,ha=""+new URL("../assets/breakdown-1.CAxGg9vp.gif",import.meta.url).href,zs=""+new URL("../assets/breakdown-1.6PzrDWei.gif",import.meta.url).href,ya=""+new URL("../assets/custom-solid-swipe.CvEHwHrZ.gif",import.meta.url).href,Vs=""+new URL("../assets/custom-solid-swipe.DYx4Baok.gif",import.meta.url).href;function va(H){let e,w=`<h2><a href="#the-result" id="the-result">The Result</a></h2> <p><span style="display: block; position: relative; padding-top: 65.286%; width: 100%;"><img src="${Vs}" srcset="${Vs}, ${ya} 2x" loading="lazy" style="position: absolute; top: 0; width: 100%; height: 100%" alt="the-result"/></span></p>`,g,u,r=`<h2><a href="#break-it-down-slowly" id="break-it-down-slowly">Break it down slowly</a></h2> <p><span style="display: block; position: relative; padding-top: 62.000%; width: 100%;"><img src="${zs}" srcset="${zs}, ${ha} 2x" loading="lazy" style="position: absolute; top: 0; width: 100%; height: 100%" alt="breakdown"/></span></p> <p>The transition can be broken down into 2 halves:</p> <ul><li>1️⃣ a solid color growing from the left covering the whole text area</li> <li>2️⃣ as the solid color shrinks, it reveals the text</li></ul>`,h,x,C,gs='<a href="#1-the-first-thing-is-to-figure-out-the-color-of-the-text" id="1-the-first-thing-is-to-figure-out-the-color-of-the-text">1. The first thing is to figure out the color of the text</a>',rs,L,G,Ps=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">swipeColor</span><span style="color: var(--shiki-color-text)">(node</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> params) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> &#123; </span><span style="color: var(--shiki-token-constant)">color</span><span style="color: var(--shiki-color-text)"> &#125; </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">window</span><span style="color: var(--shiki-token-function)">.getComputedStyle</span><span style="color: var(--shiki-color-text)">(node);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,W,y,M,ws='<a href="#2-i-tried-using-linear-gradient-to-draw-the-background" id="2-i-tried-using-linear-gradient-to-draw-the-background">2. I tried using linear-gradient to draw the background</a>',is,E,ms='<li>I use the value of <code class="inline">t</code> to determine how wide the solid color should be</li>',ps,I,Y,Fs=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-function)">css</span><span style="color: var(--shiki-color-text)">(t) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> (t </span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0.5</span><span style="color: var(--shiki-color-text)">) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// transform t from range [0.5, 1] into percentage [0, 100]</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// t: 0.5 -&gt; 1</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// u: 0 -&gt; 0.5</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">u</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> t </span><span style="color: var(--shiki-token-keyword)">-</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0.5</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// percentage: 0 -&gt; 100</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">percentage</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> u </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">200</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#96;background: linear-gradient(to right, transparent 0, </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">percentage</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">%, </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">color</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)"> </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">percentage</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">%);&#96;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125; </span><span style="color: var(--shiki-token-keyword)">else</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// transform t from range [0, 0.5] into percentage [0, 100]</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// t: 0 -&gt; 0.5</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// percentage: 0 -&gt; 100</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">percentage</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> t </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">200</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#96;background: linear-gradient(to right, </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">color</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)"> 0, </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">percentage</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">%, transparent </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">percentage</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">%);&#96;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span></code></pre>`,cs,S,fs=`<span style="display: block; position: relative; padding-top: 62.000%; width: 100%;"><img src="${Bs}" srcset="${Bs}, ${ka} 2x" loading="lazy" style="position: absolute; top: 0; width: 100%; height: 100%" alt="breakdown 2"/></span>`,Z,v,j,_s='<a href="#3-next-i-need-to-hide-reveal-the-text-at-the-right-time" id="3-next-i-need-to-hide-reveal-the-text-at-the-right-time">3. Next I need to hide / reveal the text at the right time</a>',ks,D,bs="<li>I hid the text by setting the text color to transparent</li>",hs,R,J,As=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-function)">css</span><span style="color: var(--shiki-color-text)">(t) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> (t </span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0.5</span><span style="color: var(--shiki-color-text)">) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#96;color: </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">color</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">&#96;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125; </span><span style="color: var(--shiki-token-keyword)">else</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#96;color: transparent&#96;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,ys,U,Ts=`<span style="display: block; position: relative; padding-top: 62.000%; width: 100%;"><img src="${Os}" srcset="${Os}, ${ca} 2x" loading="lazy" style="position: absolute; top: 0; width: 100%; height: 100%" alt="breakdown 3"/></span>`,K,m,N,$s='<a href="#4-combining-the-both-2-and-3-together" id="4-combining-the-both-2-and-3-together">4. Combining the both 2. and 3. together</a>',vs,O,Q,Gs=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-function)">css</span><span style="color: var(--shiki-color-text)">(t) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> (t </span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0.5</span><span style="color: var(--shiki-color-text)">) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// transform t from range [0.5, 1] into percentage [0, 100]</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// t: 0.5 -&gt; 1</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// u: 0 -&gt; 0.5</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">u</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> t </span><span style="color: var(--shiki-token-keyword)">-</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0.5</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// percentage: 0 -&gt; 100</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">percentage</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> u </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">200</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#96;</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">      background: linear-gradient(to right, transparent 0, </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">percentage</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">%, </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">color</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)"> </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">percentage</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">%);</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">      color: </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">color</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">;</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">    &#96;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125; </span><span style="color: var(--shiki-token-keyword)">else</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// transform t from range [0, 0.5] into percentage [0, 100]</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// t: 0 -&gt; 0.5</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// percentage: 0 -&gt; 100</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">percentage</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> t </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">200</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#96;</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">      background: linear-gradient(to right, </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">color</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)"> 0, </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">percentage</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">%, transparent </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">percentage</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">%);</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">      color: transparent;</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">    &#96;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span></code></pre>`,X,f,B,Hs='<a href="#5-final-touches-pass-the-duration-delay-and-easing-into-the-returned-object" id="5-final-touches-pass-the-duration-delay-and-easing-into-the-returned-object">5. final touches, pass the <code class="inline">duration</code>, <code class="inline">delay</code>, and <code class="inline">easing</code> into the returned object</a>',ds,z,ss,Ws='<pre class="prism language-svelte"><code><div class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"></div><div class="line">  <span class="token keyword">function</span> <span class="token function">swipeColor</span><span class="token punctuation">(</span><span class="token parameter">node<span class="token punctuation">,</span> params</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></div><div class="line">    <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> duration<span class="token punctuation">,</span> delay<span class="token punctuation">,</span> easing <span class="token punctuation">&#125;</span> <span class="token operator">=</span> params <span class="token operator">||</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span></div><div class="line">    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span></div><div class="line">      duration<span class="token punctuation">,</span></div><div class="line">      delay<span class="token punctuation">,</span></div><div class="line">      easing<span class="token punctuation">,</span></div><div class="line">      <span class="token function">css</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">/* ... */</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></div><div class="line">    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span></div><div class="line">  <span class="token punctuation">&#125;</span></div><div class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></div><div class="line"></div><div class="line"><span class="token language-javascript"><span class="token punctuation">&#123;</span>#<span class="token keyword">if</span> show<span class="token punctuation">&#125;</span></span></div><div class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">transition:</span>swipeColor</span><span class="token punctuation">></span></span>Hello world<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></div><div class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">transition:</span>swipeColor=</span><span class="token language-javascript"><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">delay</span><span class="token operator">:</span> <span class="token number">300</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span><span class="token punctuation">></span></span>Hello world<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></div><div class="line"><span class="token language-javascript"><span class="token punctuation">&#123;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token punctuation">&#125;</span></span></div></code></pre>',as,_,V,Cs='<a href="#final-code" id="final-code">Final code</a>',us,q,ns,Ys=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">swipeColor</span><span style="color: var(--shiki-color-text)">(node</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> params) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> &#123; </span><span style="color: var(--shiki-token-constant)">duration</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">delay</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">easing</span><span style="color: var(--shiki-color-text)"> &#125; </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> params </span><span style="color: var(--shiki-token-keyword)">||</span><span style="color: var(--shiki-color-text)"> &#123;&#125;;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> &#123; </span><span style="color: var(--shiki-token-constant)">color</span><span style="color: var(--shiki-color-text)"> &#125; </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">window</span><span style="color: var(--shiki-token-function)">.getComputedStyle</span><span style="color: var(--shiki-color-text)">(node);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    duration</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    delay</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    easing</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">css</span><span style="color: var(--shiki-color-text)">(t) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> (t </span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0.5</span><span style="color: var(--shiki-color-text)">) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-comment)">// transform t from range [0.5, 1] into percentage [0, 100]</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-comment)">// t: 0.5 -&gt; 1</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-comment)">// u: 0 -&gt; 0.5</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">u</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> t </span><span style="color: var(--shiki-token-keyword)">-</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0.5</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-comment)">// percentage: 0 -&gt; 100</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">percentage</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> u </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">200</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#96;</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">          background: linear-gradient(to right, transparent 0, </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">percentage</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">%, </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">color</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)"> </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">percentage</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">%);</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">          color: </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">color</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">;</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">        &#96;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      &#125; </span><span style="color: var(--shiki-token-keyword)">else</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-comment)">// transform t from range [0, 0.5] into percentage [0, 100]</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-comment)">// t: 0 -&gt; 0.5</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-comment)">// percentage: 0 -&gt; 100</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">percentage</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> t </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">200</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#96;</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">          background: linear-gradient(to right, </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">color</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)"> 0, </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">percentage</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">%, transparent </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">percentage</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">%);</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">          color: transparent;</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">        &#96;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,os,$,Ls=`<h2><a href="#extra" id="extra">Extra</a></h2> <p>Svelte has make writing custom transitions simple, with the code above, the transition itself is able to pause / reverse halfway through the transition</p> <p><span style="display: block; position: relative; padding-top: 60.714%; width: 100%;"><img src="${Ns}" srcset="${Ns}, ${pa} 2x" loading="lazy" style="position: absolute; top: 0; width: 100%; height: 100%" alt="reversible"/></span></p>`;return{c(){e=o("section"),e.innerHTML=w,g=i(),u=o("section"),u.innerHTML=r,h=i(),x=o("section"),C=o("h3"),C.innerHTML=gs,rs=i(),L=o("div"),G=new P(!1),W=i(),y=o("section"),M=o("h3"),M.innerHTML=ws,is=i(),E=o("ul"),E.innerHTML=ms,ps=i(),I=o("div"),Y=new P(!1),cs=i(),S=o("p"),S.innerHTML=fs,Z=i(),v=o("section"),j=o("h3"),j.innerHTML=_s,ks=i(),D=o("ul"),D.innerHTML=bs,hs=i(),R=o("div"),J=new P(!1),ys=i(),U=o("p"),U.innerHTML=Ts,K=i(),m=o("section"),N=o("h3"),N.innerHTML=$s,vs=i(),O=o("div"),Q=new P(!1),X=i(),f=o("section"),B=o("h3"),B.innerHTML=Hs,ds=i(),z=o("div"),ss=new P(!1),as=i(),_=o("section"),V=o("h2"),V.innerHTML=Cs,us=i(),q=o("div"),ns=new P(!1),os=i(),$=o("section"),$.innerHTML=Ls,this.h()},l(s){e=t(s,"SECTION",{"data-svelte-h":!0}),k(e)!=="svelte-psjd3c"&&(e.innerHTML=w),g=p(s),u=t(s,"SECTION",{"data-svelte-h":!0}),k(u)!=="svelte-hlu333"&&(u.innerHTML=r),h=p(s),x=t(s,"SECTION",{});var l=d(x);C=t(l,"H3",{"data-svelte-h":!0}),k(C)!=="svelte-1outk80"&&(C.innerHTML=gs),rs=p(l),L=t(l,"DIV",{class:!0});var Ms=d(L);G=F(Ms,!1),Ms.forEach(a),l.forEach(a),W=p(s),y=t(s,"SECTION",{});var b=d(y);M=t(b,"H3",{"data-svelte-h":!0}),k(M)!=="svelte-17xa75l"&&(M.innerHTML=ws),is=p(b),E=t(b,"UL",{"data-svelte-h":!0}),k(E)!=="svelte-cv2agn"&&(E.innerHTML=ms),ps=p(b),I=t(b,"DIV",{class:!0});var Es=d(I);Y=F(Es,!1),Es.forEach(a),cs=p(b),S=t(b,"P",{"data-svelte-h":!0}),k(S)!=="svelte-1grhjj5"&&(S.innerHTML=fs),b.forEach(a),Z=p(s),v=t(s,"SECTION",{});var T=d(v);j=t(T,"H3",{"data-svelte-h":!0}),k(j)!=="svelte-8u4t2f"&&(j.innerHTML=_s),ks=p(T),D=t(T,"UL",{"data-svelte-h":!0}),k(D)!=="svelte-ybqf5k"&&(D.innerHTML=bs),hs=p(T),R=t(T,"DIV",{class:!0});var Is=d(R);J=F(Is,!1),Is.forEach(a),ys=p(T),U=t(T,"P",{"data-svelte-h":!0}),k(U)!=="svelte-823p71"&&(U.innerHTML=Ts),T.forEach(a),K=p(s),m=t(s,"SECTION",{});var ts=d(m);N=t(ts,"H3",{"data-svelte-h":!0}),k(N)!=="svelte-ojghm"&&(N.innerHTML=$s),vs=p(ts),O=t(ts,"DIV",{class:!0});var Ss=d(O);Q=F(Ss,!1),Ss.forEach(a),ts.forEach(a),X=p(s),f=t(s,"SECTION",{});var es=d(f);B=t(es,"H3",{"data-svelte-h":!0}),k(B)!=="svelte-ncbmd9"&&(B.innerHTML=Hs),ds=p(es),z=t(es,"DIV",{class:!0});var js=d(z);ss=F(js,!1),js.forEach(a),es.forEach(a),as=p(s),_=t(s,"SECTION",{});var ls=d(_);V=t(ls,"H2",{"data-svelte-h":!0}),k(V)!=="svelte-1cei6pd"&&(V.innerHTML=Cs),us=p(ls),q=t(ls,"DIV",{class:!0});var Ds=d(q);ns=F(Ds,!1),Ds.forEach(a),ls.forEach(a),os=p(s),$=t(s,"SECTION",{"data-svelte-h":!0}),k($)!=="svelte-q99gqx"&&($.innerHTML=Ls),this.h()},h(){G.a=null,A(L,"class","code-section"),Y.a=null,A(I,"class","code-section"),J.a=null,A(R,"class","code-section"),Q.a=null,A(O,"class","code-section"),ss.a=null,A(z,"class","code-section"),ns.a=null,A(q,"class","code-section")},m(s,l){c(s,e,l),c(s,g,l),c(s,u,l),c(s,h,l),c(s,x,l),n(x,C),n(x,rs),n(x,L),G.m(Ps,L),c(s,W,l),c(s,y,l),n(y,M),n(y,is),n(y,E),n(y,ps),n(y,I),Y.m(Fs,I),n(y,cs),n(y,S),c(s,Z,l),c(s,v,l),n(v,j),n(v,ks),n(v,D),n(v,hs),n(v,R),J.m(As,R),n(v,ys),n(v,U),c(s,K,l),c(s,m,l),n(m,N),n(m,vs),n(m,O),Q.m(Gs,O),c(s,X,l),c(s,f,l),n(f,B),n(f,ds),n(f,z),ss.m(Ws,z),c(s,as,l),c(s,_,l),n(_,V),n(_,us),n(_,q),ns.m(Ys,q),c(s,os,l),c(s,$,l)},p:Ks,d(s){s&&(a(e),a(g),a(u),a(h),a(x),a(W),a(y),a(Z),a(v),a(K),a(m),a(X),a(f),a(as),a(_),a(os),a($))}}}function da(H){let e,w;const g=[H[0],qs];let u={$$slots:{default:[va]},$$scope:{ctx:H}};for(let r=0;r<g.length;r+=1)u=xs(u,g[r]);return e=new ra({props:u}),{c(){sa(e.$$.fragment)},l(r){aa(e.$$.fragment,r)},m(r,h){na(e,r,h),w=!0},p(r,[h]){const x=h&1?la(g,[h&1&&Us(r[0]),h&0&&Us(qs)]):{};h&2&&(x.$$scope={dirty:h,ctx:r}),e.$set(x)},i(r){w||(oa(e.$$.fragment,r),w=!0)},o(r){ta(e.$$.fragment,r),w=!1},d(r){ea(e,r)}}}const qs={title:"Solid color swipe Svelte Transition",tags:["svelte","transition"],description:"The ResultBreak it down slowlyThe transition can be broken down into 2 halves:1️⃣ a solid color growing from the left covering the whole text area2️⃣ as the solid color shrinks, it reveals the text1. The first thing is to figure out the color of the text...",tableOfContents:[{link:"the-result",title:"The Result"},{link:"break-it-down-slowly",title:"Break it down slowly",nested:[{link:"1-the-first-thing-is-to-figure-out-the-color-of-the-text",title:"1. The first thing is to figure out the color of the text"},{link:"2-i-tried-using-linear-gradient-to-draw-the-background",title:"2. I tried using linear-gradient to draw the background"},{link:"3-next-i-need-to-hide-reveal-the-text-at-the-right-time",title:"3. Next I need to hide / reveal the text at the right time"},{link:"4-combining-the-both-2-and-3-together",title:"4. Combining the both 2. and 3. together"},{link:"5-final-touches-pass-the-duration-delay-and-easing-into-the-returned-object",title:"5. final touches, pass the  `duration` ,  `delay` , and  `easing`  into the returned object"}]},{link:"final-code",title:"Final code"},{link:"extra",title:"Extra"}]};function ua(H,e,w){return Js("blog",{image:ia}),H.$$set=g=>{w(0,e=xs(xs({},e),Rs(g)))},e=Rs(e),[e]}class _a extends Qs{constructor(e){super(),Xs(this,e,ua,da,Zs,{})}}export{_a as component};
