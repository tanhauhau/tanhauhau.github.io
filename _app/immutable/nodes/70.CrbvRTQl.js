import"../chunks/Bzak7iHL.js";import"../chunks/kfVmCPsV.js";import{p as Y,g as A,d as H,b as K,f as N,s as t,e as s,t as W,a as X,r as e,n as Z}from"../chunks/C2PHntuy.js";import{h as i}from"../chunks/C3QlhiH-.js";import{s as a}from"../chunks/CEusTUg_.js";import{i as J}from"../chunks/BQOOHHT8.js";import{l as Q,s as ss}from"../chunks/gzNpScmH.js";import{B as es}from"../chunks/B1caYEk9.js";import{t as ts}from"../chunks/C3bQ3Oc7.js";const D=""+new URL("../assets/filter-blur.BPjfhF91.png",import.meta.url).href,as=""+new URL("../assets/filter-blur.CcLgsex-.png",import.meta.url).href,is=""+new URL("../assets/filter-blur.inOlo_KB.webp",import.meta.url).href,os=""+new URL("../assets/filter-blur.C3HaWrV8.webp",import.meta.url).href,q=""+new URL("../assets/filter-brightness.kf5Od2O9.png",import.meta.url).href,ls=""+new URL("../assets/filter-brightness.D8I7EC4X.png",import.meta.url).href,ns=""+new URL("../assets/filter-brightness.B6bMjZua.webp",import.meta.url).href,rs=""+new URL("../assets/filter-brightness.DFAYwlGS.webp",import.meta.url).href,z=""+new URL("../assets/filter-contrast.ENeD1ok1.png",import.meta.url).href,ps=""+new URL("../assets/filter-contrast.BDOkFYLq.png",import.meta.url).href,cs=""+new URL("../assets/filter-contrast.DhhFEBBI.webp",import.meta.url).href,hs=""+new URL("../assets/filter-contrast.D_12EDhh.webp",import.meta.url).href,M={title:"The CSS Podcast: 023: Filters",tags:["css filters","The CSS Podcast"],description:"CSS Filtersapplied in order providedyou can use filter functions or url to svg filtersblur()uses gaussian blurspecify blur radiusbrightness()takes in percentage valuegreater than 100% - lighteningless than 100% - darkening...",tableOfContents:[{link:"css-filters",title:"CSS Filters",nested:[{link:"blur",title:"blur()"},{link:"brightness",title:"brightness()"},{link:"contrast",title:"contrast()"},{link:"grayscale",title:"grayscale()"},{link:"invert",title:"invert()"},{link:"opacity",title:"opacity()"},{link:"saturate",title:"saturate()"},{link:"sepia",title:"sepia()"},{link:"hue-rotate",title:"hue-rotate()"},{link:"drop-shadow",title:"drop-shadow()"},{link:"url",title:"url()"},{link:"backdrop-filter",title:"`backdrop-filter`"}]},{link:"svg-filters",title:"SVG Filters",nested:[{link:"color-matrix",title:"Color Matrix"}]}]},{title:ws,tags:$s,description:Ss,tableOfContents:Cs}=M;var ks=K(`<section><h2><a href="#css-filters" id="css-filters">CSS Filters</a></h2> <ul><li>applied in order provided</li> <li>you can use filter functions or url to svg filters</li></ul> <div class="code-section"><!></div></section> <section><h3><a href="#blur" id="blur">blur()</a></h3> <ul><li>uses gaussian blur</li> <li>specify blur radius</li></ul> <div class="code-section"><!></div> <p><span style="display: block; position: relative; padding-top: 34.569%; width: 100%;"><picture><source type="image/webp"/><img loading="lazy" style="position: absolute; top: 0; width: 100%; height: 100%" alt="filter blur" class="svelte-pzh0pi"/></picture></span></p></section> <section><h3><a href="#brightness" id="brightness">brightness()</a></h3> <ul><li>takes in percentage value</li> <li>greater than 100% - lightening</li> <li>less than 100% - darkening</li> <li>0 - complete black</li></ul> <div class="code-section"><!></div> <p><span style="display: block; position: relative; padding-top: 34.208%; width: 100%;"><picture><source type="image/webp"/><img loading="lazy" style="position: absolute; top: 0; width: 100%; height: 100%" alt="filter brightness" class="svelte-pzh0pi"/></picture></span></p></section> <section><h3><a href="#contrast" id="contrast">contrast()</a></h3> <ul><li>takes in percentage value</li> <li>greater than 100% - increasing contrast</li> <li>less than 100% - decreasing contrast</li></ul> <div class="code-section"><!></div> <p><span style="display: block; position: relative; padding-top: 34.532%; width: 100%;"><picture><source type="image/webp"/><img loading="lazy" style="position: absolute; top: 0; width: 100%; height: 100%" alt="filter contrast" class="svelte-pzh0pi"/></picture></span></p></section> <section><h3><a href="#grayscale" id="grayscale">grayscale()</a></h3> <ul><li>grayscale vs desaturation <ul><li>grayscale: perceptual information of the color will be maintained</li></ul></li></ul></section> <section><h3><a href="#invert" id="invert">invert()</a></h3> <ul><li>inverts the dark and light</li> <li><code class="inline">invert(1)</code> is the default, which completely inverts</li> <li><code class="inline">invert(0.5)</code> will end up a 50% color gray (light increase and dark decrease at the same amount and meet at 50%)</li> <li>can be used to implement dark mode (invert everything, then invert the image again)</li></ul></section> <section><h3><a href="#opacity" id="opacity">opacity()</a></h3> <ul><li>similar to opacity property</li></ul></section> <section><h3><a href="#saturate" id="saturate">saturate()</a></h3> <ul><li>takes in percentage value</li> <li>greater than 100% - increasing saturation</li> <li>less than 100% - decreasing saturation</li></ul></section> <section><h3><a href="#sepia" id="sepia">sepia()</a></h3> <ul><li>sepia has a warm, yellow/brown appearance</li> <li>takes in percentage value</li> <li>value from 0% - 100%, 100% is complete sepia, 0% is no effect</li></ul></section> <section><h3><a href="#hue-rotate" id="hue-rotate">hue-rotate()</a></h3> <ul><li>rotates the color along the color wheel</li> <li>takes in an angle</li></ul></section> <section><h3><a href="#drop-shadow" id="drop-shadow">drop-shadow()</a></h3> <ul><li>works on the painted space instead of the box</li> <li>not casting shadow if it is transparent</li></ul></section> <section><h3><a href="#url" id="url">url()</a></h3> <ul><li>point to svg filter</li> <li>svg must be inline, cannot be a url as an image, so that it can be referenced</li></ul> <div class="code-section"><!></div></section> <section><h3><a href="#backdrop-filter" id="backdrop-filter"><code class="inline">backdrop-filter</code></a></h3> <ul><li>apply behind the element, instead on the element</li> <li><a href="https://css-tricks.com/almanac/properties/b/backdrop-filter/" rel="nofollow">https://css-tricks.com/almanac/properties/b/backdrop-filter/</a></li></ul></section> <section><h2><a href="#svg-filters" id="svg-filters">SVG Filters</a></h2></section> <section><h3><a href="#color-matrix" id="color-matrix">Color Matrix</a></h3> <ul><li><a href="https://alistapart.com/article/finessing-fecolormatrix/" rel="nofollow">https://alistapart.com/article/finessing-fecolormatrix/</a></li> <li><a href="https://css-tricks.com/color-filters-can-turn-your-gray-skies-blue/" rel="nofollow">https://css-tricks.com/color-filters-can-turn-your-gray-skies-blue/</a></li></ul> <ul><li>feMerge</li></ul> <p>svg filter effects
fe color matrix</p> <ul><li>4x4 matrix
[1000,0100,0010,0001]</li> <li>a</li></ul> <p>svg filter</p> <p>feBlend</p> <ul><li>just like how blend mode works
feComponentTransfer</li></ul> <p>feComposite
pixel level image interactions, how each pixels composite together</p> <p>feConvolve
how pixels interacte with its neighbour, this results in blurring, sharpening</p> <p>feDiffuseLighting
defines a light source</p> <p>feDisplacementMap
displaces an image, in, using another image in2 to displace the in image</p> <p>feFlood
fills the filter subregion with the specified color and opacity</p> <p>feGaussianBlur
same as what <code class="inline">blur()</code> use</p> <p>feImage
to use with other filters, feBlend or feComposite</p> <p>feMerge
asynchronous operations in the filter effects instead of layering them</p> <p>feMorphology
erods or dilates the input image</p> <p>feOffset
useful for creating dropShadow</p> <p>feSpecularLighting
use alpha channel as bump map</p> <p>feTile
how image repeated to fill the space</p> <p>feTurbulence
creates image using Perlin turbulence function</p> <p><a href="https://www.w3.org/TR/filter-effects-1/#ShorthandEquivalents" rel="nofollow">https://www.w3.org/TR/filter-effects-1/#ShorthandEquivalents</a></p> <ul><li><a href="https://tympanus.net/codrops/2019/01/15/svg-filters-101" rel="nofollow">https://tympanus.net/codrops/2019/01/15/svg-filters-101</a></li> <li><a href="https://www.sarasoueidan.com/blog/compositing-and-blending-in-css/" rel="nofollow">https://www.sarasoueidan.com/blog/compositing-and-blending-in-css/</a></li> <li><a href="https://alistapart.com/article/finessing-fecolormatrix/" rel="nofollow">https://alistapart.com/article/finessing-fecolormatrix/</a></li> <li><a href="https://css-tricks.com/color-filters-can-turn-your-gray-skies-blue/" rel="nofollow">https://css-tricks.com/color-filters-can-turn-your-gray-skies-blue/</a></li> <li><a href="https://css-tricks.com/look-svg-light-source-filters/" rel="nofollow">https://css-tricks.com/look-svg-light-source-filters/</a></li></ul></section>`,1);function Ls(O,k){const T=Q(k,["children","$$slots","$$events","$$legacy"]);Y(k,!1),A("blog",{image:ts}),J(),es(O,ss(()=>T,()=>M,{children:(E,us)=>{var u=ks(),o=N(u),v=t(s(o),4),G=s(v);i(G,()=>`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-function)">.element</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">filter</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">blur</span><span style="color: var(--shiki-token-constant)">(1</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-token-constant)">)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">filter</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">url</span><span style="color: var(--shiki-token-constant)">(#blur)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">filter</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">url</span><span style="color: var(--shiki-token-constant)">(commonfilters.xml#blur)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`),e(v),e(o);var l=t(o,2),n=t(s(l),4),P=s(n);i(P,()=>`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-function)">.center</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">filter</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">blur</span><span style="color: var(--shiki-token-constant)">(3</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-token-constant)">)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line"><span style="color: var(--shiki-token-function)">.right</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">filter</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">blur</span><span style="color: var(--shiki-token-constant)">(10</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-token-constant)">)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`),e(n);var f=t(n,2),d=s(f),y=s(d),g=s(y),m=t(g);e(y),e(d),e(f),e(l);var r=t(l,2),p=t(s(r),4),I=s(p);i(I,()=>`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-function)">.left</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">filter</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">brightness</span><span style="color: var(--shiki-token-constant)">(0.5)</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line"><span style="color: var(--shiki-token-function)">.right</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">filter</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">brightness</span><span style="color: var(--shiki-token-constant)">(1.5)</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`),e(p);var b=t(p,2),_=s(b),x=s(_),w=s(x),$=t(w);e(x),e(_),e(b),e(r);var c=t(r,2),h=t(s(c),4),j=s(h);i(j,()=>`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-function)">.left</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">filter</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">contrast</span><span style="color: var(--shiki-token-constant)">(0.5)</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line"><span style="color: var(--shiki-token-function)">.right</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">filter</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">contrast</span><span style="color: var(--shiki-token-constant)">(1.5)</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`),e(h);var S=t(h,2),C=s(S),L=s(C),R=s(L),B=t(R);e(L),e(C),e(S),e(c);var U=t(c,16),F=t(s(U),4),V=s(F);i(V,()=>`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">style</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">.element</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">filter</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">url</span><span style="color: var(--shiki-token-constant)">(#my-filter)</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">style</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)"> </span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">svg</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">id</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;my-filter&quot;</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">     &lt;</span><span style="color: var(--shiki-token-string-expression)">feGaussianBlur</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SourceGraphic&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">stdDeviation</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;5&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;/</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">svg</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`),e(F),e(U),Z(6),W(()=>{a(g,"srcset",`${is}, ${os} 2x`),a(m,"src",D),a(m,"srcset",`${D}, ${as} 2x`),a(w,"srcset",`${ns}, ${rs} 2x`),a($,"src",q),a($,"srcset",`${q}, ${ls} 2x`),a(R,"srcset",`${cs}, ${hs} 2x`),a(B,"src",z),a(B,"srcset",`${z}, ${ps} 2x`)}),X(E,u)},$$slots:{default:!0}})),H()}export{Ls as component};
