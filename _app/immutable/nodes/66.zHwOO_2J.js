import{s as Ms,d as as,e as Ts,f as us,n as Hs}from"../chunks/scheduler.85ImRbsk.js";import{S as Cs,i as Ns,m as Ss,n as $s,o as Os,t as Us,a as Es,p as qs,e,s as p,H as X,c as l,q as h,h as c,d as q,r as ss,g as t,u as ns,j as k,k as i}from"../chunks/index.JMRAb4ib.js";import{g as Ds,a as gs}from"../chunks/code-snippet.p32Anx_S.js";import{B as Rs}from"../chunks/BlogLayout.TadBQAnB.js";import{t as Is}from"../chunks/twitter-card-image.6izpPI6I.js";const js=""+new URL("../assets/visbug-pesticide.v2P5auvS.webp",import.meta.url).href,Ys=""+new URL("../assets/visbug-pesticide.Af_tZsSY.webp",import.meta.url).href,Ps=""+new URL("../assets/visbug-pesticide.LvVeBY1D.png",import.meta.url).href,ms=""+new URL("../assets/visbug-pesticide.D7eJ-7da.png",import.meta.url).href,Ws=""+new URL("../assets/visbug-zindex.nbUvQDvG.webp",import.meta.url).href,Vs=""+new URL("../assets/visbug-zindex.9WM36uFc.webp",import.meta.url).href,As=""+new URL("../assets/visbug-zindex.oMz_j-pu.png",import.meta.url).href,_s=""+new URL("../assets/visbug-zindex.EN6cjmAs.png",import.meta.url).href,Bs=""+new URL("../assets/layers-panel.CQG2shbg.webp",import.meta.url).href,Gs=""+new URL("../assets/layers-panel.arRLp_xM.webp",import.meta.url).href,Qs=""+new URL("../assets/layers-panel.xGyxL_xn.png",import.meta.url).href,fs=""+new URL("../assets/layers-panel.gosMVDBs.png",import.meta.url).href;function Zs(b){let n,g='<h2><a href="#1-natural-stacking-order" id="1-natural-stacking-order">1️⃣ Natural stacking order</a></h2> <ul><li>Order of the element in the DOM.</li> <li>Last child in DOM tree appears in the frontmost</li> <li>CSS grid when assigning multiple elements into the same grid, without z-index, the order of stacking of the elements depends on their order in the DOM</li> <li><code class="inline">flex-direction: reverse</code> does not change the stacking order</li></ul>',x,d,o='<h2><a href="#2-z-index" id="2-z-index">2️⃣ z-index</a></h2> <ul><li>can be positive / negative</li> <li>need to set position other than static, in order to work<ul><li>need a position to make z-index to have context</li></ul></li> <li>why z-index not working, position</li></ul>',v,r,z,ts='<a href="#3-negative-z-index" id="3-negative-z-index">3️⃣ negative z-index</a>',A,L,os='<li>negative z-index goes behind the parent.</li> <li>html tag has base z-index, you can&#39;t go behind the <code class="inline">&lt;html&gt;</code></li>',B,M,D,bs=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">class</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;parent&quot;</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">&lt;!-- child hidden behind parent --&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">class</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;child&quot;</span><span style="color: var(--shiki-color-text)">&gt;&lt;/</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-token-comment)">&lt;!-- child still visible, can&#39;t hide behind html body --&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">class</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;child&quot;</span><span style="color: var(--shiki-color-text)">&gt;&lt;/</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">style</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">width</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">100</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">height</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">100</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">.child</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">position</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">absolute</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">z-index</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">-1</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">background</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">green</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">.parent</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">background</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">red</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-string-expression)">body</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">background</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">blue</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">style</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,G,T,es='<a href="https://codepen.io/tanhauhau/pen/WNwvraL" rel="nofollow">Codepen</a>',R,_,ls='<h2><a href="#4-highest-z-index-value" id="4-highest-z-index-value">4️⃣ Highest z-index value</a></h2> <ul><li>Not mentioned in the spec, limited by the implementation (32-bit signed integer)</li> <li>(2^31)-1</li></ul>',I,f,is=`<h2><a href="#5-debugging-z-index" id="5-debugging-z-index">5️⃣ Debugging z-index</a></h2> <ul><li><p>Layers panel</p> <p><span style="display: block; position: relative; padding-top: 61.865%; width: 100%;"><picture><source type="image/webp" srcset="${Gs}, ${Bs} 2x"/><img src="${fs}" srcset="${fs}, ${Qs} 2x" loading="lazy" style="position: absolute; top: 0; width: 100%; height: 100%" alt="layers panel"/></picture></span></p></li> <li><p>visbug /zindex plugin</p> <p><span style="display: block; position: relative; padding-top: 67.204%; width: 100%;"><picture><source type="image/webp" srcset="${Vs}, ${Ws} 2x"/><img src="${_s}" srcset="${_s}, ${As} 2x" loading="lazy" style="position: absolute; top: 0; width: 100%; height: 100%" alt="visbug zindex"/></picture></span></p></li> <li><p>visbug /pesticide plugin</p> <p><span style="display: block; position: relative; padding-top: 68.194%; width: 100%;"><picture><source type="image/webp" srcset="${Ys}, ${js} 2x"/><img src="${ms}" srcset="${ms}, ${Ps} 2x" loading="lazy" style="position: absolute; top: 0; width: 100%; height: 100%" alt="visbug pesticide"/></picture></span></p></li></ul> <p><a href="https://chrome.google.com/webstore/detail/visbug/cdockenadnadldjbbgcallicgledbeoc?hl=en" rel="nofollow">visbug extension</a></p>`,j,u,H,rs='<a href="#6-manage-z-index" id="6-manage-z-index">6️⃣ Manage z-index</a>',Q,C,ps="<li>using css custom properties</li> <li>name your z-index</li>",Z,N,Y,zs=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-function)">:root</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  --dialog-z-index</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  --popup-z-index</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">2</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-function)">.my-popup</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">z-index</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">var</span><span style="color: var(--shiki-token-constant)">(--popup-z-index)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-function)">.my-dialog</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">z-index</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">var</span><span style="color: var(--shiki-token-constant)">(--dialog-z-index)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,P,y,S,cs='<a href="#7-stacking-context" id="7-stacking-context">7️⃣ stacking context</a>',F,$,ks="<li>html create the 1st stacking context</li> <li>To create stacking context<ul><li>position + z-index not auto</li> <li>when creating composite layer - filters, opacity, transform, will-change</li></ul></li>",J,O,W,Ls=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">class</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;parent&quot;</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">&lt;!-- z-index: 99 --&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">class</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;child1&quot;</span><span style="color: var(--shiki-color-text)">&gt;&lt;/</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-token-comment)">&lt;!-- z-index: 2 --&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">class</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;child2&quot;</span><span style="color: var(--shiki-color-text)">&gt;&lt;/</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">style</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">width</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">100</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">height</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">100</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">.parent</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">/* any of the following will create a new stacking context, */</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">/* thus child2 will be on top of child1 */</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">/* 1) position + z-index not auto */</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">position</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">relative</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">z-index</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">/*  2) filter  */</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">filter</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">grayscale</span><span style="color: var(--shiki-token-constant)">()</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">/* 3) opacity &lt; 1 */</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">opacity</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0.9999999</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">/* 4) transform */</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">transform</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">scale</span><span style="color: var(--shiki-token-constant)">(1)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">/* 5) will change: transform, opacity, filter, z-index */</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">will-change</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">opacity</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">.child1</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">background</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">green</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">position</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">absolute</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">top</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">40</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">left</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">40</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">z-index</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">99</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">.child2</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">background</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">cyan</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">top</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">20</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">left</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">20</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">position</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">absolute</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">z-index</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">2</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">style</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,K,U,hs='<a href="https://codepen.io/tanhauhau/pen/NWNqxEe" rel="nofollow">Codepen</a>',V,w,vs='<h2><a href="#links" id="links">Links</a></h2> <ul><li><a href="https://podcasts.google.com/feed/aHR0cHM6Ly90aGVjc3Nwb2RjYXN0LmxpYnN5bi5jb20vcnNz/episode/NmZmNzlmOTgtNmM2NS00MjVhLWE0M2UtNTY1YmY4MjYxODU5?sa=X&amp;ved=2ahUKEwiH-uH7_YzrAhWlGbcAHWJKBHcQkfYCegQIARAF" rel="nofollow">The CSS Podcast: 019: Z-Index and Stacking Context</a></li> <li><a href="https://philipwalton.com/articles/what-no-one-told-you-about-z-index/" rel="nofollow">Philip Walton: What no one told you about z-index</a> (<a href="/notes/what-no-one-told-you-about-z-index">My Note</a>)</li></ul>';return{c(){n=e("section"),n.innerHTML=g,x=p(),d=e("section"),d.innerHTML=o,v=p(),r=e("section"),z=e("h2"),z.innerHTML=ts,A=p(),L=e("ul"),L.innerHTML=os,B=p(),M=e("div"),D=new X(!1),G=p(),T=e("p"),T.innerHTML=es,R=p(),_=e("section"),_.innerHTML=ls,I=p(),f=e("section"),f.innerHTML=is,j=p(),u=e("section"),H=e("h2"),H.innerHTML=rs,Q=p(),C=e("ul"),C.innerHTML=ps,Z=p(),N=e("div"),Y=new X(!1),P=p(),y=e("section"),S=e("h2"),S.innerHTML=cs,F=p(),$=e("ul"),$.innerHTML=ks,J=p(),O=e("div"),W=new X(!1),K=p(),U=e("p"),U.innerHTML=hs,V=p(),w=e("section"),w.innerHTML=vs,this.h()},l(s){n=l(s,"SECTION",{"data-svelte-h":!0}),h(n)!=="svelte-1jxyxbo"&&(n.innerHTML=g),x=c(s),d=l(s,"SECTION",{"data-svelte-h":!0}),h(d)!=="svelte-1akc0ai"&&(d.innerHTML=o),v=c(s),r=l(s,"SECTION",{});var a=q(r);z=l(a,"H2",{"data-svelte-h":!0}),h(z)!=="svelte-xbsd2p"&&(z.innerHTML=ts),A=c(a),L=l(a,"UL",{"data-svelte-h":!0}),h(L)!=="svelte-1cc3wkm"&&(L.innerHTML=os),B=c(a),M=l(a,"DIV",{class:!0});var ys=q(M);D=ss(ys,!1),ys.forEach(t),G=c(a),T=l(a,"P",{"data-svelte-h":!0}),h(T)!=="svelte-fp0u0c"&&(T.innerHTML=es),a.forEach(t),R=c(s),_=l(s,"SECTION",{"data-svelte-h":!0}),h(_)!=="svelte-1fmdlja"&&(_.innerHTML=ls),I=c(s),f=l(s,"SECTION",{"data-svelte-h":!0}),h(f)!=="svelte-1ysducf"&&(f.innerHTML=is),j=c(s),u=l(s,"SECTION",{});var E=q(u);H=l(E,"H2",{"data-svelte-h":!0}),h(H)!=="svelte-1iagu7s"&&(H.innerHTML=rs),Q=c(E),C=l(E,"UL",{"data-svelte-h":!0}),h(C)!=="svelte-1n7lmg6"&&(C.innerHTML=ps),Z=c(E),N=l(E,"DIV",{class:!0});var ds=q(N);Y=ss(ds,!1),ds.forEach(t),E.forEach(t),P=c(s),y=l(s,"SECTION",{});var m=q(y);S=l(m,"H2",{"data-svelte-h":!0}),h(S)!=="svelte-o643qu"&&(S.innerHTML=cs),F=c(m),$=l(m,"UL",{"data-svelte-h":!0}),h($)!=="svelte-uouvai"&&($.innerHTML=ks),J=c(m),O=l(m,"DIV",{class:!0});var xs=q(O);W=ss(xs,!1),xs.forEach(t),K=c(m),U=l(m,"P",{"data-svelte-h":!0}),h(U)!=="svelte-xddxhn"&&(U.innerHTML=hs),m.forEach(t),V=c(s),w=l(s,"SECTION",{"data-svelte-h":!0}),h(w)!=="svelte-1i01biw"&&(w.innerHTML=vs),this.h()},h(){D.a=null,ns(M,"class","code-section"),Y.a=null,ns(N,"class","code-section"),W.a=null,ns(O,"class","code-section")},m(s,a){k(s,n,a),k(s,x,a),k(s,d,a),k(s,v,a),k(s,r,a),i(r,z),i(r,A),i(r,L),i(r,B),i(r,M),D.m(bs,M),i(r,G),i(r,T),k(s,R,a),k(s,_,a),k(s,I,a),k(s,f,a),k(s,j,a),k(s,u,a),i(u,H),i(u,Q),i(u,C),i(u,Z),i(u,N),Y.m(zs,N),k(s,P,a),k(s,y,a),i(y,S),i(y,F),i(y,$),i(y,J),i(y,O),W.m(Ls,O),i(y,K),i(y,U),k(s,V,a),k(s,w,a)},p:Hs,d(s){s&&(t(n),t(x),t(d),t(v),t(r),t(R),t(_),t(I),t(f),t(j),t(u),t(P),t(y),t(V),t(w))}}}function Fs(b){let n,g;const x=[b[0],ws];let d={$$slots:{default:[Zs]},$$scope:{ctx:b}};for(let o=0;o<x.length;o+=1)d=as(d,x[o]);return n=new Rs({props:d}),{c(){Ss(n.$$.fragment)},l(o){$s(n.$$.fragment,o)},m(o,v){Os(n,o,v),g=!0},p(o,[v]){const r=v&1?Ds(x,[v&1&&gs(o[0]),v&0&&gs(ws)]):{};v&2&&(r.$$scope={dirty:v,ctx:o}),n.$set(r)},i(o){g||(Us(n.$$.fragment,o),g=!0)},o(o){Es(n.$$.fragment,o),g=!1},d(o){qs(n,o)}}}const ws={title:"The CSS Podcast: 019: Z-Index and Stacking Context",tags:["z-index","stacking context","The CSS Podcast"],description:"1️⃣ Natural stacking orderOrder of the element in the DOM.Last child in DOM tree appears in the frontmostCSS grid when assigning multiple elements into the same grid, without z-index, the order of stacking of the elements depends on their order in the DOM...",tableOfContents:[{link:"1-natural-stacking-order",title:"1️⃣ Natural stacking order"},{link:"2-z-index",title:"2️⃣ z-index"},{link:"3-negative-z-index",title:"3️⃣ negative z-index"},{link:"4-highest-z-index-value",title:"4️⃣ Highest z-index value"},{link:"5-debugging-z-index",title:"5️⃣ Debugging z-index"},{link:"6-manage-z-index",title:"6️⃣ Manage z-index"},{link:"7-stacking-context",title:"7️⃣ stacking context"},{link:"links",title:"Links"}]};function Js(b,n,g){return Ts("blog",{image:Is}),b.$$set=x=>{g(0,n=as(as({},n),us(x)))},n=us(n),[n]}class tn extends Cs{constructor(n){super(),Ns(this,n,Js,Fs,Ms,{})}}export{tn as component};
