import"../chunks/Bzak7iHL.js";import"../chunks/kfVmCPsV.js";import{p as re,g as ne,d as pe,b as le,s as t,f as ce,t as de,a as ue,e,r as s,n as J}from"../chunks/C2PHntuy.js";import{h as i}from"../chunks/C3QlhiH-.js";import{s as a}from"../chunks/CEusTUg_.js";import{i as _e}from"../chunks/BQOOHHT8.js";import{l as he,s as me}from"../chunks/gzNpScmH.js";import{B as be}from"../chunks/B1caYEk9.js";import{t as ge}from"../chunks/C3bQ3Oc7.js";const P=""+new URL("../assets/travis.Ct82lnmk.png",import.meta.url).href,ve=""+new URL("../assets/travis.DwrJGwmj.png",import.meta.url).href,we=""+new URL("../assets/travis.DwaF0UzA.webp",import.meta.url).href,ye=""+new URL("../assets/travis.DZV8O9HC.webp",import.meta.url).href,K=""+new URL("../assets/travis-2.ra9PHzQO.png",import.meta.url).href,fe=""+new URL("../assets/travis-2.BDKRkWlM.png",import.meta.url).href,ke=""+new URL("../assets/travis-2.CTINnhO6.webp",import.meta.url).href,Ce=""+new URL("../assets/travis-2.B09V_oGu.webp",import.meta.url).href,V=""+new URL("../assets/package-json.C0iTcpze.png",import.meta.url).href,Ie=""+new URL("../assets/package-json.I2WT7qpZ.png",import.meta.url).href,Te=""+new URL("../assets/package-json.CT1U488A.webp",import.meta.url).href,je=""+new URL("../assets/package-json.BKf05AsD.webp",import.meta.url).href,Y=""+new URL("../assets/bower.CMX_evPf.png",import.meta.url).href,xe=""+new URL("../assets/bower.0E32wk58.png",import.meta.url).href,$e=""+new URL("../assets/bower.FHqjJ0i8.webp",import.meta.url).href,Re=""+new URL("../assets/bower.u1s8Kt3f.webp",import.meta.url).href,F=""+new URL("../assets/badge.B8WRGJa-.png",import.meta.url).href,Ue=""+new URL("../assets/badge.x8myRX7U.png",import.meta.url).href,Le=""+new URL("../assets/badge.5iLgs70E.webp",import.meta.url).href,He=""+new URL("../assets/badge.BTDXMsob.webp",import.meta.url).href,Q=""+new URL("../assets/badge-2.D0AI4Q-h.png",import.meta.url).href,ze=""+new URL("../assets/badge-2.DQAu9e9E.png",import.meta.url).href,Ge=""+new URL("../assets/badge-2.H9BKuhVF.webp",import.meta.url).href,Ae=""+new URL("../assets/badge-2.C3p4hxrt.webp",import.meta.url).href,X={title:"5 Steps to build NodeJS using Travis CI",date:"2016-04-13T08:00:00Z",description:"Setting up Travis CI for your NodeJS Github repo!",label:"blog",tableOfContents:[{link:"1-what-is-travis-ci",title:"1. What is Travis CI"},{link:"2-how-do-i-use-travis-ci",title:"2. How do I use Travis CI"},{link:"3-how-to-build-a-node-js-project-using-travis-ci",title:"3. How to build a Node.js project using Travis CI"},{link:"4-how-do-i-use-bower-and-install-bower-dependencies",title:"4. How do I use bower and install bower dependencies"},{link:"5-include-a-travis-ci-badge",title:"5. Include a Travis CI badge"}]},{title:Ke,date:Ve,description:Ye,label:Fe,tableOfContents:Qe}=X;var De=le('<section><h2><a href="#1-what-is-travis-ci" id="1-what-is-travis-ci">1. What is Travis CI</a></h2> <blockquote><p><strong><a href="https://travis-ci.org" rel="nofollow">Travis CI</a></strong> is a <strong>Continuous Integration</strong> service used to build and test software projects hosted at <a href="https://github.com" rel="nofollow">GitHub</a>.</p></blockquote> <p>Or in simple terms, when you push a commit to the master branch of your project hosted at GitHub, Travis CI will run tests and build the latest commit of your master branch.</p> <p>It’s that simple. You push a commit → Travis CI run tests and build. Automatically.</p></section> <section><h2><a href="#2-how-do-i-use-travis-ci" id="2-how-do-i-use-travis-ci">2. How do I use Travis CI</a></h2> <p>Go to <a href="https://travis-ci.org" rel="nofollow">Travis CI</a>. Sign in using your GitHub account. You will be prompted to authorise Travis CI to your GitHub account. Approved that.</p> <p>When you see something like this:</p> <p><span style="display: block; position: relative; padding-top: 55.667%; width: 100%;"><picture><source type="image/webp"/><img loading="lazy" style="position: absolute; top: 0; width: 100%; height: 100%" alt="travis"/></picture></span></p> <p>Voila. You have created a Travis CI account.</p> <p>Next thing you are going to do is to click the <code class="inline">(+)</code> button beside the <em>“My Repositories”</em> on the left.</p> <p>You will then see a list of projects on your GitHub.</p> <p><span style="display: block; position: relative; padding-top: 55.542%; width: 100%;"><picture><source type="image/webp"/><img loading="lazy" style="position: absolute; top: 0; width: 100%; height: 100%" alt="travis"/></picture></span></p> <p>If the list of repositories is empty, click “Sync account” to fetch all your repositories.</p> <p>Turn on one of your project for Continuous Integration!</p> <p>That’s all.</p></section> <section><h2><a href="#3-how-to-build-a-node-js-project-using-travis-ci" id="3-how-to-build-a-node-js-project-using-travis-ci">3. How to build a Node.js project using Travis CI</a></h2> <p>Create a file name <code class="inline">.travis.yml</code> at the root folder of your project.</p> <p>Copy this into the file.</p> <p><strong>travis.yml:</strong></p> <div class="code-section"><!></div> <p>Commit and Push. That’s simple.</p> <p>Or if you are lazy, run this:</p> <div class="code-section"><!></div> <p>The version of Node.js I am using is 4.2 at the time of writing this article. To be safe, you can run “node — version” on your command line to determine which version of Node.js you are running.</p> <blockquote><p>Make sure that you have all your dependencies persists to the package.json as Travis CI will install all the dependencies from it by calling npm install.</p></blockquote> <p>Another thing to take note is that if you wanna run your test script, make sure to include it in the <code class="inline">package.json</code>.</p> <p><span style="display: block; position: relative; padding-top: 44.661%; width: 100%;"><picture><source type="image/webp"/><img loading="lazy" style="position: absolute; top: 0; width: 100%; height: 100%" alt="packagejson"/></picture></span></p></section> <section><h2><a href="#4-how-do-i-use-bower-and-install-bower-dependencies" id="4-how-do-i-use-bower-and-install-bower-dependencies">4. How do I use bower and install bower dependencies</a></h2> <p>If you are using bower, add a before_script for .travis.yml</p> <div class="code-section"><!></div> <p>Or likewise if you are lazy, copy and paste this to your command line.</p> <div class="code-section"><!></div> <p>One thing to take note for bower is that when there is dependency conflict, bower will ask you to choose which version of the dependency to be installed interactively. In the case for Travis CI, Travis CI will not know which version to install it for you where you will see an error like this:</p> <p><span style="display: block; position: relative; padding-top: 22.386%; width: 100%;"><picture><source type="image/webp"/><img loading="lazy" style="position: absolute; top: 0; width: 100%; height: 100%" alt="bower"/></picture></span></p> <blockquote><p>Therefore, you will have to <a href="https://jaketrent.com/post/bower-resolutions/" rel="nofollow">persists the resolution to bower.json</a> to avoid the build error.</p></blockquote></section> <section><h2><a href="#5-include-a-travis-ci-badge" id="5-include-a-travis-ci-badge">5. Include a Travis CI badge</a></h2> <p>To summarise, you have set up your Travis CI, copied and pasted the <code class="inline">.travis.yml</code> to your project, commited and pushed your project to GitHub, and Travis CI had built and tested your project.</p> <p>Now, it’s time to add a badge to your GitHub repository!</p> <p>Simply clicked the badge in Travis CI and choose for Markdown.</p> <p><span style="display: block; position: relative; padding-top: 48.854%; width: 100%;"><picture><source type="image/webp"/><img loading="lazy" style="position: absolute; top: 0; width: 100%; height: 100%" alt="badge"/></picture></span></p> <p>Copy and paste the line into your README.md.</p> <p>Commit and Push.</p> <p>And now you have a Travis CI badge on your repo!</p> <p><span style="display: block; position: relative; padding-top: 65.412%; width: 100%;"><picture><source type="image/webp"/><img loading="lazy" style="position: absolute; top: 0; width: 100%; height: 100%" alt="badge"/></picture></span></p></section>',1);function Xe(Z,h){const ee=he(h,["children","$$slots","$$events","$$legacy"]);re(h,!1),ne("blog",{image:ge}),_e(),be(Z,me(()=>ee,()=>X,{children:(se,Ne)=>{var m=De(),o=t(ce(m),2),r=t(e(o),6),b=e(r),g=e(b),v=e(g),w=t(v);s(g),s(b),s(r);var y=t(r,8),f=e(y),k=e(f),C=e(k),I=t(C);s(k),s(f),s(y),J(6),s(o);var n=t(o,2),p=t(e(n),8),te=e(p);i(te,()=>'<pre class="prism language-yml"><code><div class="line"><span class="token key atrule">language</span><span class="token punctuation">:</span> node_js</div><div class="line"><span class="token key atrule">node_js</span><span class="token punctuation">:</span></div><div class="line">  <span class="token punctuation">-</span> <span class="token number">4.2</span></div></code></pre>'),s(p);var l=t(p,6),ae=e(l);i(ae,()=>'<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">curl https://gist.githubusercontent.com/tanhauhau/405e39884e80288615a7b51181fd5228/raw/9045c2e219547f0a228da630abff345d8add0c47/.travis.yml </span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> .travis.yml</span></span></code></pre>'),s(l);var T=t(l,8),j=e(T),x=e(j),$=e(x),R=t($);s(x),s(j),s(T),s(n);var c=t(n,2),d=t(e(c),4),ie=e(d);i(ie,()=>'<pre class="prism language-yml"><code><div class="line"><span class="token key atrule">language</span><span class="token punctuation">:</span> node_js</div><div class="line"><span class="token key atrule">node_js</span><span class="token punctuation">:</span></div><div class="line">  <span class="token punctuation">-</span> <span class="token number">4.2</span></div><div class="line"><span class="token key atrule">before_script</span><span class="token punctuation">:</span></div><div class="line">  <span class="token punctuation">-</span> npm install <span class="token punctuation">-</span>g bower</div><div class="line">  <span class="token punctuation">-</span> bower install</div></code></pre>'),s(d);var u=t(d,4),oe=e(u);i(oe,()=>'<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">curl https://gist.githubusercontent.com/tanhauhau/71998bf221810186f046db94cda10c4e/raw/d1e8aee0981a96c20f94de6db386da048face423/.travis.yml </span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> .travis.yml</span></span></code></pre>'),s(u);var U=t(u,4),L=e(U),H=e(L),z=e(H),G=t(z);s(H),s(L),s(U),J(2),s(c);var A=t(c,2),_=t(e(A),8),D=e(_),N=e(D),O=e(N),q=t(O);s(N),s(D),s(_);var B=t(_,8),M=e(B),S=e(M),W=e(S),E=t(W);s(S),s(M),s(B),s(A),de(()=>{a(v,"srcset",`${we}, ${ye} 2x`),a(w,"src",P),a(w,"srcset",`${P}, ${ve} 2x`),a(C,"srcset",`${ke}, ${Ce} 2x`),a(I,"src",K),a(I,"srcset",`${K}, ${fe} 2x`),a($,"srcset",`${Te}, ${je} 2x`),a(R,"src",V),a(R,"srcset",`${V}, ${Ie} 2x`),a(z,"srcset",`${$e}, ${Re} 2x`),a(G,"src",Y),a(G,"srcset",`${Y}, ${xe} 2x`),a(O,"srcset",`${Le}, ${He} 2x`),a(q,"src",F),a(q,"srcset",`${F}, ${Ue} 2x`),a(W,"srcset",`${Ge}, ${Ae} 2x`),a(E,"src",Q),a(E,"srcset",`${Q}, ${ze} 2x`)}),ue(se,m)},$$slots:{default:!0}})),pe()}export{Xe as component};
