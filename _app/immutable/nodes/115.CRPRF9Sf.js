import{s as fe,d as Z,e as xe,f as ce,n as ge}from"../chunks/scheduler.D6VJxl8L.js";import{S as we,i as be,m as Ce,n as Le,o as Ie,t as Te,a as He,p as $e,e as i,s as p,H as Se,c as l,q as c,h,d as he,r as Me,g as r,u as Ue,j as u,k as a}from"../chunks/index.CLAVN-Y5.js";import{g as Re,a as ue}from"../chunks/code-snippet.Gym6WUAG.js";import{B as Pe}from"../chunks/BlogLayout.BLHkC4CD.js";import{t as Oe}from"../chunks/twitter-card-image.C3bQ3Oc7.js";const je=""+new URL("../assets/express-console-warning.BlB8hOoL.webp",import.meta.url).href,qe=""+new URL("../assets/express-console-warning.5U7KcJ1C.webp",import.meta.url).href,Ee=""+new URL("../assets/express-console-warning.Dv2pfTXY.png",import.meta.url).href,de=""+new URL("../assets/express-console-warning.Ck56CWxg.png",import.meta.url).href,ze=""+new URL("../assets/coursera.DHPzwUdD.webp",import.meta.url).href,De=""+new URL("../assets/coursera.Dm62ZsiP.webp",import.meta.url).href,Fe=""+new URL("../assets/coursera.CEG7YJPG.png",import.meta.url).href,me=""+new URL("../assets/coursera.BMSakM-U.png",import.meta.url).href,Ne=""+new URL("../assets/oc.DtSZ7Ebh.webp",import.meta.url).href,Be=""+new URL("../assets/oc.DN_OnASE.webp",import.meta.url).href,Ae=""+new URL("../assets/oc.D5r9La2R.png",import.meta.url).href,ke=""+new URL("../assets/oc.7x9N1i4f.png",import.meta.url).href,Ye=""+new URL("../assets/fb.PWauxRsE.webp",import.meta.url).href,Ge=""+new URL("../assets/fb.12FFqUkL.webp",import.meta.url).href,We=""+new URL("../assets/fb.NRe704UI.png",import.meta.url).href,ve=""+new URL("../assets/fb.XWDIPprv.png",import.meta.url).href;function Ze(w){let s,_="On one normal day, I opened up my browser’s developer console for no reason. The page I was on, at that moment, was Facebook. And I saw a big red “Stop” in the console, and followed by a big bolded text of “This is a browser feature intended for developers….”.",k,m,n=`<span style="display: block; position: relative; padding-top: 55.583%; width: 100%;"><picture><source type="image/webp" srcset="${Ge}, ${Ye} 2x"/><img src="${ve}" srcset="${ve}, ${We} 2x" loading="lazy" style="position: absolute; top: 0; width: 100%; height: 100%" alt="fb"/></picture></span>`,d,v,J="I paused for a while, amazed by what I’ve discovered randomly. This is quite interesting and I have two questions come up to my mind.",R,y,X=`<h2><a href="#1-is-facebook-the-only-site-that-leaves-message-in-the-console" id="1-is-facebook-the-only-site-that-leaves-message-in-the-console">1. Is Facebook the only site that leaves message in the console?</a></h2> <p>It turns out to be <strong>NO. It’s not just Facebook.</strong></p> <p>This is what I found out after some random searches: Oculus and Coursera are hiring people through the console!</p> <p><span style="display: block; position: relative; padding-top: 56.083%; width: 100%;"><picture><source type="image/webp" srcset="${Be}, ${Ne} 2x"/><img src="${ke}" srcset="${ke}, ${Ae} 2x" loading="lazy" style="position: absolute; top: 0; width: 100%; height: 100%" alt="oc"/></picture></span>
Oculus hiring people through the console</p> <p><span style="display: block; position: relative; padding-top: 55.750%; width: 100%;"><picture><source type="image/webp" srcset="${De}, ${ze} 2x"/><img src="${me}" srcset="${me}, ${Fe} 2x" loading="lazy" style="position: absolute; top: 0; width: 100%; height: 100%" alt="coursera"/></picture></span>
Coursera did the same thing too!</p> <p>It seems like this is a good place to hire web stack developer. Since the only person who is going to look into the console of your page is a web developer, or a full stack developer, hiring them through your console isn’t a bad idea after all.</p>`,P,f,K='<h2><a href="#2-how-did-the-facebook-printed-out-a-styled-text-in-the-console" id="2-how-did-the-facebook-printed-out-a-styled-text-in-the-console">2. How did the Facebook printed out a styled text in the console?</a></h2> <p>Actually it turns out it is very simple indeed. You can follow <a href="http://stackoverflow.com/a/22156044/1513547" rel="nofollow">the StackOverflow thread</a> to see how it is done.</p>',O,x,V='<h2><a href="#3-so-can-the-console-print-out-images" id="3-so-can-the-console-print-out-images">3. So can the console print out images?</a></h2> <p>It’s a <strong>YES</strong> again. But how?</p> <p>You can refer to this awesome <a href="https://github.com/adriancooney/console.image" rel="nofollow">console.image</a> library developed by adriancooney. He will explain how he did it to you.</p>',j,o,b,Q='<a href="#so-why-not-create-an-express-middleware-for-this" id="so-why-not-create-an-express-middleware-for-this">So, why not create an express middleware for this?</a>',z,C,ee='This was the random idea that came out from my mind after seeing websites leaving messages in the console. Why not have an express middleware that injects a script that prints to the console for each html pages served from the <a href="http://expressjs.com/" rel="nofollow">express server</a>. It should have an simple intuitive API, and should not pollute to the global namespace at all.',D,L,te='So, <a href="https://www.npmjs.com/package/express-console-warning" rel="nofollow">this is what I’ve come up</a>.',F,I,se="I know, the name is mouthful and awkward. This is because initially I intended the middleware to just print out a warning message. After a bit of consideration, turns out that hiring in the console should be a good use case too. But the name of the package just stuck there.",N,T,oe="So, how do you use it?",B,H,ne="It’s simple. See the code snippet below:",A,$,q,ye=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">var</span><span style="color: var(--shiki-color-text)"> express </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;express&#39;</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        app </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">express</span><span style="color: var(--shiki-color-text)">()</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	hr </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;express-console-warning&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">app</span><span style="color: var(--shiki-token-function)">.use</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">hr</span><span style="color: var(--shiki-token-function)">.LOG</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;Hello world&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	  </span><span style="color: var(--shiki-token-function)">.text</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;This is a blue text&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> &#123;color</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;blue&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> fontSize</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;x-large&#39;</span><span style="color: var(--shiki-color-text)">&#125;)</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	  </span><span style="color: var(--shiki-token-function)">.text</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;and this is red&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> &#123;color</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;red&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> fontSize</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;x-large&#39;</span><span style="color: var(--shiki-color-text)">&#125;)</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	  </span><span style="color: var(--shiki-token-function)">.image</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;http://memesvault.com/wp-content/uploads/Best-Meme-Faces-14.png&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-token-constant)">0.1</span><span style="color: var(--shiki-color-text)">)</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	  </span><span style="color: var(--shiki-token-function)">.build</span><span style="color: var(--shiki-color-text)">());</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">app</span><span style="color: var(--shiki-token-function)">.use</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">express</span><span style="color: var(--shiki-token-function)">.static</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;client&#39;</span><span style="color: var(--shiki-color-text)">));</span></span></code></pre>`,Y,S,ae="And there you go.",G,M,ie=`<span style="display: block; position: relative; padding-top: 55.750%; width: 100%;"><picture><source type="image/webp" srcset="${qe}, ${je} 2x"/><img src="${de}" srcset="${de}, ${Ee} 2x" loading="lazy" style="position: absolute; top: 0; width: 100%; height: 100%" alt="express-console-warning"/></picture></span>`,W,U,le="<em>Disclaimer: I did not own the meme. I got the link from Google search just to try out the API.</em>",E,g,re='<h2><a href="#conclusion" id="conclusion">Conclusion</a></h2> <p>So, these are what I’ve learned from a random action (open the developer console) and what I’ve created from it (express-console-warning).</p> <p>express-console-warning <a href="https://github.com/tanhauhau/express-console-warning" rel="nofollow">github</a> <a href="http://npmjs.com/package/express-console-warning" rel="nofollow">npm</a></p>';return{c(){s=i("p"),s.textContent=_,k=p(),m=i("p"),m.innerHTML=n,d=p(),v=i("p"),v.textContent=J,R=p(),y=i("section"),y.innerHTML=X,P=p(),f=i("section"),f.innerHTML=K,O=p(),x=i("section"),x.innerHTML=V,j=p(),o=i("section"),b=i("h2"),b.innerHTML=Q,z=p(),C=i("p"),C.innerHTML=ee,D=p(),L=i("p"),L.innerHTML=te,F=p(),I=i("p"),I.textContent=se,N=p(),T=i("p"),T.textContent=oe,B=p(),H=i("p"),H.textContent=ne,A=p(),$=i("div"),q=new Se(!1),Y=p(),S=i("p"),S.textContent=ae,G=p(),M=i("p"),M.innerHTML=ie,W=p(),U=i("p"),U.innerHTML=le,E=p(),g=i("section"),g.innerHTML=re,this.h()},l(t){s=l(t,"P",{"data-svelte-h":!0}),c(s)!=="svelte-ui7mnx"&&(s.textContent=_),k=h(t),m=l(t,"P",{"data-svelte-h":!0}),c(m)!=="svelte-chjc5w"&&(m.innerHTML=n),d=h(t),v=l(t,"P",{"data-svelte-h":!0}),c(v)!=="svelte-kavcq7"&&(v.textContent=J),R=h(t),y=l(t,"SECTION",{"data-svelte-h":!0}),c(y)!=="svelte-1qdi73v"&&(y.innerHTML=X),P=h(t),f=l(t,"SECTION",{"data-svelte-h":!0}),c(f)!=="svelte-1a7aqd1"&&(f.innerHTML=K),O=h(t),x=l(t,"SECTION",{"data-svelte-h":!0}),c(x)!=="svelte-3kr8lg"&&(x.innerHTML=V),j=h(t),o=l(t,"SECTION",{});var e=he(o);b=l(e,"H2",{"data-svelte-h":!0}),c(b)!=="svelte-laadds"&&(b.innerHTML=Q),z=h(e),C=l(e,"P",{"data-svelte-h":!0}),c(C)!=="svelte-yu0fgs"&&(C.innerHTML=ee),D=h(e),L=l(e,"P",{"data-svelte-h":!0}),c(L)!=="svelte-1ndzzb"&&(L.innerHTML=te),F=h(e),I=l(e,"P",{"data-svelte-h":!0}),c(I)!=="svelte-1qm293s"&&(I.textContent=se),N=h(e),T=l(e,"P",{"data-svelte-h":!0}),c(T)!=="svelte-1mcnk4d"&&(T.textContent=oe),B=h(e),H=l(e,"P",{"data-svelte-h":!0}),c(H)!=="svelte-1b3nmj0"&&(H.textContent=ne),A=h(e),$=l(e,"DIV",{class:!0});var pe=he($);q=Me(pe,!1),pe.forEach(r),Y=h(e),S=l(e,"P",{"data-svelte-h":!0}),c(S)!=="svelte-qmtfb4"&&(S.textContent=ae),G=h(e),M=l(e,"P",{"data-svelte-h":!0}),c(M)!=="svelte-19psu4m"&&(M.innerHTML=ie),W=h(e),U=l(e,"P",{"data-svelte-h":!0}),c(U)!=="svelte-d5go6q"&&(U.innerHTML=le),e.forEach(r),E=h(t),g=l(t,"SECTION",{"data-svelte-h":!0}),c(g)!=="svelte-jk5s7r"&&(g.innerHTML=re),this.h()},h(){q.a=null,Ue($,"class","code-section")},m(t,e){u(t,s,e),u(t,k,e),u(t,m,e),u(t,d,e),u(t,v,e),u(t,R,e),u(t,y,e),u(t,P,e),u(t,f,e),u(t,O,e),u(t,x,e),u(t,j,e),u(t,o,e),a(o,b),a(o,z),a(o,C),a(o,D),a(o,L),a(o,F),a(o,I),a(o,N),a(o,T),a(o,B),a(o,H),a(o,A),a(o,$),q.m(ye,$),a(o,Y),a(o,S),a(o,G),a(o,M),a(o,W),a(o,U),u(t,E,e),u(t,g,e)},p:ge,d(t){t&&(r(s),r(k),r(m),r(d),r(v),r(R),r(y),r(P),r(f),r(O),r(x),r(j),r(o),r(E),r(g))}}}function Je(w){let s,_;const k=[w[0],_e];let m={$$slots:{default:[Ze]},$$scope:{ctx:w}};for(let n=0;n<k.length;n+=1)m=Z(m,k[n]);return s=new Pe({props:m}),{c(){Ce(s.$$.fragment)},l(n){Le(s.$$.fragment,n)},m(n,d){Ie(s,n,d),_=!0},p(n,[d]){const v=d&1?Re(k,[d&1&&ue(n[0]),d&0&&ue(_e)]):{};d&2&&(v.$$scope={dirty:d,ctx:n}),s.$set(v)},i(n){_||(Te(s.$$.fragment,n),_=!0)},o(n){He(s.$$.fragment,n),_=!1},d(n){$e(s,n)}}}const _e={title:"Random stuff that I’ve learned from a browser’s developer console",date:"2016-04-20T08:00:00Z",description:"I opened up my browser’s developer console for no reason, and I found this",label:"blog",tableOfContents:[{link:"1-is-facebook-the-only-site-that-leaves-message-in-the-console",title:"1. Is Facebook the only site that leaves message in the console?"},{link:"2-how-did-the-facebook-printed-out-a-styled-text-in-the-console",title:"2. How did the Facebook printed out a styled text in the console?"},{link:"3-so-can-the-console-print-out-images",title:"3. So can the console print out images?"},{link:"so-why-not-create-an-express-middleware-for-this",title:"So, why not create an express middleware for this?"},{link:"conclusion",title:"Conclusion"}]};function Xe(w,s,_){return xe("blog",{image:Oe}),w.$$set=k=>{_(0,s=Z(Z({},s),ce(k)))},s=ce(s),[s]}class st extends we{constructor(s){super(),be(this,s,Xe,Je,fe,{})}}export{st as component};
