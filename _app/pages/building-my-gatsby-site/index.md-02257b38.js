import{S as mo,i as _o,s as go,C as cs,w as bo,x as wo,y as xo,z as Eo,A as no,q as Io,o as Ao,B as To,r as jo,Y as io,e as o,t as a,k as d,c as r,a as l,h as s,d as t,m as u,b as n,X as po,f,g as x,H as e,J as Po}from"../../chunks/vendor-da4388d4.js";import{B as Oo}from"../../chunks/BlogLayout-14cfab6f.js";import{_ as Go}from"../../chunks/twitter-card-image-a57df29d.js";import"../../chunks/stores-1fad7c36.js";import"../../chunks/ldjson-b0805387.js";/* empty css                                */var So="https://lihautan.com/_app/assets/inverted_emojis-da2061e8.webp",Co="https://lihautan.com/_app/assets/inverted_emojis-4957b0b6.webp",Do="https://lihautan.com/_app/assets/inverted_emojis-5e73b135.png",co="https://lihautan.com/_app/assets/inverted_emojis-a711de5a.png",qo="https://lihautan.com/_app/assets/github-pages-7d962960.webp",Ro="https://lihautan.com/_app/assets/github-pages-e62f381e.webp",Bo="https://lihautan.com/_app/assets/github-pages-a4f3e932.png",ho="https://lihautan.com/_app/assets/github-pages-c8603eb5.png";function Mo(pe){let c,j,g,$,y,m,ce,vt,he,yt,kt,De,ft,Ye,D,mt,W,_t,gt,Ze,q,bt,qe,wt,xt,Ke,R,Re,H,Et,It,L,At,z,Tt,jt,et,k,Be,U,Pt,Ot,F,Gt,Q,St,Ct,Dt,Me,O,de,Ne,b,hs,qt,G,Rt,ue,Bt,Mt,ve,Nt,$t,Wt,V,Ht,X,Lt,zt,Ut,T,Ft,ye,Qt,Vt,ke,Xt,Jt,fe,Yt,Zt,tt,p,$e,J,Kt,ea,B,Y,ta,aa,Z,sa,oa,ra,K,la,ee,na,ia,pa,te,ca,me,ha,da,ua,_e,vo=`<div class="filename">theme-mode.css</div><pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">div#___gatsby</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)">:after &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  content</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  position</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> fixed;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  top</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  bottom</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  left</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  right</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  pointer</span><span style="color: var(--shiki-token-keyword)">-</span><span style="color: var(--shiki-color-text)">events</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> none;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  background</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> white;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  mix</span><span style="color: var(--shiki-token-keyword)">-</span><span style="color: var(--shiki-color-text)">blend</span><span style="color: var(--shiki-token-keyword)">-</span><span style="color: var(--shiki-color-text)">mode</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> difference;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,va,We,ya,ka,He,S,ge,Le,w,ds,fa,_,ma,be,_a,ga,we,ba,wa,ae,xa,Ea,xe,Ia,Aa,Ee,Ta,ja,Pa,ze,Oa,Ga,M,se,Sa,Ca,oe,Da,qa,Ra,Ie,yo=`<div class="filename">remark-emoji.js</div><pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">visit</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;unist-util-visit&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">emojiRegex</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;emoji-regex&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-constant)">module</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">exports</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)">(&#123; markdownAST &#125;) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">visit</span><span style="color: var(--shiki-color-text)">(markdownAST</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;text&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> node </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">node</span><span style="color: var(--shiki-color-text)">.type </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;html&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">node</span><span style="color: var(--shiki-color-text)">.value </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">node</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">value</span><span style="color: var(--shiki-token-function)">.replace</span><span style="color: var(--shiki-color-text)">(</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-function)">emojiRegex</span><span style="color: var(--shiki-color-text)">()</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      val </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#96;&lt;span class=&quot;emoji&quot;&gt;</span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">val</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">&lt;/span&gt;&#96;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    );</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;;</span></span></code></pre>`,Ba,Ue,Ae,Ma,at,Na,Fe,$a,Wa,Qe,Ha,La,re,za,Te,Ua,Fa,st,P,Ve,le,Qa,Va,E,Xa,je,Ja,Ya,Pe,Za,Ka,Oe,es,ts,ne,as,ss,ie,os,Ge,rs,ls;return{c(){c=o("p"),j=a("After reading Dan's "),g=o("a"),$=a("Overreacted"),y=a(" & Wei's "),m=o("a"),ce=a("A Work in Progress"),vt=a(" a while ago, I decided to have my "),he=o("a"),yt=a("own blog"),kt=a(" as well! "),De=o("em"),ft=a("(In case you still don't know, it's the very one you are reading right now!)"),Ye=d(),D=o("p"),mt=a("I took it as an opportunity to learn "),W=o("a"),_t=a("Gatsby"),gt=a(", I've heard about it for a while, so I guess it's to know how it works."),Ze=d(),q=o("p"),bt=a("This article is "),qe=o("strong"),wt=a("NOT about how to build a Gatsby site"),xt=a(", there a lot resources about that you can go for. But I am here to share some of my customisations that I've added to my Gatsby site, and hopefully you would share yours too."),Ke=d(),R=o("section"),Re=o("h2"),H=o("a"),Et=a("The boilerplate"),It=d(),L=o("p"),At=a("I used the exact same Gatsby starter pack as Dan's "),z=o("a"),Tt=a("Overreacted"),jt=a(", because why not \xAF_(\u30C4)_/\xAF. It looks sleek and simple and I like it."),et=d(),k=o("section"),Be=o("h2"),U=o("a"),Pt=a("The deployment"),Ot=d(),F=o("p"),Gt=a("I use "),Q=o("a"),St=a("Github Pages"),Ct=a(" to host this blog."),Dt=d(),Me=o("p"),O=o("span"),de=o("picture"),Ne=o("source"),b=o("img"),qt=d(),G=o("p"),Rt=a("According to the settings, I am required to use "),ue=o("code"),Bt=a("master"),Mt=a(" branch to serve the content, that's why I am writing and developing in "),ve=o("code"),Nt=a("dev"),$t=a(" branch instead."),Wt=d(),V=o("p"),Ht=a("To deploy, I added a "),X=o("a"),Lt=a("publish.js"),zt=a(" script. The script will clone the repo in a temporary folder, copy all the built files into the folder, make a commit and push it to the master branch."),Ut=d(),T=o("p"),Ft=a("Lastly, I added the script to the "),ye=o("code"),Qt=a("pre-push"),Vt=a(" git hook, so that every time when I am pushing changes to the "),ke=o("code"),Xt=a("dev"),Jt=a(' branch, it will also build and "deploy" changes to the '),fe=o("code"),Yt=a("master"),Zt=a(" branch."),tt=d(),p=o("section"),$e=o("h2"),J=o("a"),Kt=a("The light & dark mode"),ea=d(),B=o("p"),Y=o("a"),ta=a("Wei"),aa=a(" did a sharing on how mix blend mode works and how she "),Z=o("a"),sa=a("added night mode using mix-blend-mode"),oa=a(" on her site."),ra=d(),K=o("p"),la=a("So I decided to add my own "),ee=o("a"),na=a("Dark Mode Switch"),ia=a(" as well."),pa=d(),te=o("p"),ca=a("The Dark Mode Switch was relatively easy. I added a pseudo-element "),me=o("code"),ha=a("div#___gatsby::after"),da=a(" to cover over my entire Gatsby blog, so I don't have to create another div element."),ua=d(),_e=o("div"),va=d(),We=o("p"),ya=a("It's easy and it looks great, except, all my images and emojis are inverted. \u{1F622}"),ka=d(),He=o("p"),S=o("span"),ge=o("picture"),Le=o("source"),w=o("img"),fa=d(),_=o("p"),ma=a("I need to wrap all my emojis around a "),be=o("code"),_a=a("<span>"),ga=a(" so I can apply some css like "),we=o("code"),ba=a("isolation: isolate"),wa=a(" to exclude them from being blended. "),ae=o("a"),xa=a("Inspiration credits to huijing \u{1F44F}\u{1F44F}"),Ea=a(". But I am lazy to wrap all my emojis with "),xe=o("code"),Ia=a("<span>"),Aa=a(", I want to use them anytime I want, without bothering much of the "),Ee=o("code"),Ta=a("<span>"),ja=a(", so I decided to write a gatsby remark plugin to do that for me. \u{1F60E}"),Pa=d(),ze=o("p"),Oa=a("Well, it turns out it's not that hard."),Ga=d(),M=o("p"),se=o("a"),Sa=a("Remark"),Ca=a(" provides a friendly api to tap into the AST and "),oe=o("a"),Da=a("does transformation"),qa=a("."),Ra=d(),Ie=o("div"),Ba=d(),Ue=o("p"),Ae=o("em"),Ma=a("using emoji-regex find emojis and wrap them with a "),at=o("span"),Na=d(),Fe=o("p"),$a=a("...and it works!"),Wa=d(),Qe=o("p"),Ha=a("Although somewhere when I started writing the gatsby plugin, a weird error popped up, and after some digging, I noticed that"),La=d(),re=o("p"),za=a("I had to include "),Te=o("code"),Ua=a("package.json"),Fa=a(" into the plugin folder, or else it will yell at me."),st=d(),P=o("section"),Ve=o("h2"),le=o("a"),Qa=a("The Restructure"),Va=d(),E=o("p"),Xa=a("A while ago, I decided to add more categories to my blog, ie, "),je=o("a"),Ja=a("my blogs"),Ya=a(", "),Pe=o("a"),Za=a("my talks"),Ka=a(" and "),Oe=o("a"),es=a("my notes"),ts=a(". So I created different folders for them and "),ne=o("a"),as=a("rewrote the GraphQL query"),ss=d(),ie=o("p"),os=a("The Graphql Editor in "),Ge=o("code"),rs=a("http://localhost:8000/___graphql"),ls=a(" is really helpful for me to understand how Gatsby and Gatsby plugins are creating all the objects."),this.h()},l(i){c=r(i,"P",{});var v=l(c);j=s(v,"After reading Dan's "),g=r(v,"A",{href:!0,rel:!0});var us=l(g);$=s(us,"Overreacted"),us.forEach(t),y=s(v," & Wei's "),m=r(v,"A",{href:!0,rel:!0});var vs=l(m);ce=s(vs,"A Work in Progress"),vs.forEach(t),vt=s(v," a while ago, I decided to have my "),he=r(v,"A",{href:!0});var ys=l(he);yt=s(ys,"own blog"),ys.forEach(t),kt=s(v," as well! "),De=r(v,"EM",{});var ks=l(De);ft=s(ks,"(In case you still don't know, it's the very one you are reading right now!)"),ks.forEach(t),v.forEach(t),Ye=u(i),D=r(i,"P",{});var ot=l(D);mt=s(ot,"I took it as an opportunity to learn "),W=r(ot,"A",{href:!0,rel:!0});var fs=l(W);_t=s(fs,"Gatsby"),fs.forEach(t),gt=s(ot,", I've heard about it for a while, so I guess it's to know how it works."),ot.forEach(t),Ze=u(i),q=r(i,"P",{});var rt=l(q);bt=s(rt,"This article is "),qe=r(rt,"STRONG",{});var ms=l(qe);wt=s(ms,"NOT about how to build a Gatsby site"),ms.forEach(t),xt=s(rt,", there a lot resources about that you can go for. But I am here to share some of my customisations that I've added to my Gatsby site, and hopefully you would share yours too."),rt.forEach(t),Ke=u(i),R=r(i,"SECTION",{});var lt=l(R);Re=r(lt,"H2",{});var _s=l(Re);H=r(_s,"A",{href:!0,id:!0});var gs=l(H);Et=s(gs,"The boilerplate"),gs.forEach(t),_s.forEach(t),It=u(lt),L=r(lt,"P",{});var nt=l(L);At=s(nt,"I used the exact same Gatsby starter pack as Dan's "),z=r(nt,"A",{href:!0,rel:!0});var bs=l(z);Tt=s(bs,"Overreacted"),bs.forEach(t),jt=s(nt,", because why not \xAF_(\u30C4)_/\xAF. It looks sleek and simple and I like it."),nt.forEach(t),lt.forEach(t),et=u(i),k=r(i,"SECTION",{});var I=l(k);Be=r(I,"H2",{});var ws=l(Be);U=r(ws,"A",{href:!0,id:!0});var xs=l(U);Pt=s(xs,"The deployment"),xs.forEach(t),ws.forEach(t),Ot=u(I),F=r(I,"P",{});var it=l(F);Gt=s(it,"I use "),Q=r(it,"A",{href:!0,rel:!0});var Es=l(Q);St=s(Es,"Github Pages"),Es.forEach(t),Ct=s(it," to host this blog."),it.forEach(t),Dt=u(I),Me=r(I,"P",{});var Is=l(Me);O=r(Is,"SPAN",{style:!0});var As=l(O);de=r(As,"PICTURE",{});var ns=l(de);Ne=r(ns,"SOURCE",{type:!0,srcset:!0}),b=r(ns,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0,title:!0}),ns.forEach(t),As.forEach(t),Is.forEach(t),qt=u(I),G=r(I,"P",{});var Se=l(G);Rt=s(Se,"According to the settings, I am required to use "),ue=r(Se,"CODE",{class:!0});var Ts=l(ue);Bt=s(Ts,"master"),Ts.forEach(t),Mt=s(Se," branch to serve the content, that's why I am writing and developing in "),ve=r(Se,"CODE",{class:!0});var js=l(ve);Nt=s(js,"dev"),js.forEach(t),$t=s(Se," branch instead."),Se.forEach(t),Wt=u(I),V=r(I,"P",{});var pt=l(V);Ht=s(pt,"To deploy, I added a "),X=r(pt,"A",{href:!0,rel:!0});var Ps=l(X);Lt=s(Ps,"publish.js"),Ps.forEach(t),zt=s(pt," script. The script will clone the repo in a temporary folder, copy all the built files into the folder, make a commit and push it to the master branch."),pt.forEach(t),Ut=u(I),T=r(I,"P",{});var N=l(T);Ft=s(N,"Lastly, I added the script to the "),ye=r(N,"CODE",{class:!0});var Os=l(ye);Qt=s(Os,"pre-push"),Os.forEach(t),Vt=s(N," git hook, so that every time when I am pushing changes to the "),ke=r(N,"CODE",{class:!0});var Gs=l(ke);Xt=s(Gs,"dev"),Gs.forEach(t),Jt=s(N,' branch, it will also build and "deploy" changes to the '),fe=r(N,"CODE",{class:!0});var Ss=l(fe);Yt=s(Ss,"master"),Ss.forEach(t),Zt=s(N," branch."),N.forEach(t),I.forEach(t),tt=u(i),p=r(i,"SECTION",{});var h=l(p);$e=r(h,"H2",{});var Cs=l($e);J=r(Cs,"A",{href:!0,id:!0});var Ds=l(J);Kt=s(Ds,"The light & dark mode"),Ds.forEach(t),Cs.forEach(t),ea=u(h),B=r(h,"P",{});var Xe=l(B);Y=r(Xe,"A",{href:!0,rel:!0});var qs=l(Y);ta=s(qs,"Wei"),qs.forEach(t),aa=s(Xe," did a sharing on how mix blend mode works and how she "),Z=r(Xe,"A",{href:!0,rel:!0});var Rs=l(Z);sa=s(Rs,"added night mode using mix-blend-mode"),Rs.forEach(t),oa=s(Xe," on her site."),Xe.forEach(t),ra=u(h),K=r(h,"P",{});var ct=l(K);la=s(ct,"So I decided to add my own "),ee=r(ct,"A",{href:!0,rel:!0});var Bs=l(ee);na=s(Bs,"Dark Mode Switch"),Bs.forEach(t),ia=s(ct," as well."),ct.forEach(t),pa=u(h),te=r(h,"P",{});var ht=l(te);ca=s(ht,"The Dark Mode Switch was relatively easy. I added a pseudo-element "),me=r(ht,"CODE",{class:!0});var Ms=l(me);ha=s(Ms,"div#___gatsby::after"),Ms.forEach(t),da=s(ht," to cover over my entire Gatsby blog, so I don't have to create another div element."),ht.forEach(t),ua=u(h),_e=r(h,"DIV",{class:!0});var ko=l(_e);ko.forEach(t),va=u(h),We=r(h,"P",{});var Ns=l(We);ya=s(Ns,"It's easy and it looks great, except, all my images and emojis are inverted. \u{1F622}"),Ns.forEach(t),ka=u(h),He=r(h,"P",{});var $s=l(He);S=r($s,"SPAN",{style:!0});var Ws=l(S);ge=r(Ws,"PICTURE",{});var is=l(ge);Le=r(is,"SOURCE",{type:!0,srcset:!0}),w=r(is,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0,title:!0}),is.forEach(t),Ws.forEach(t),$s.forEach(t),fa=u(h),_=r(h,"P",{});var A=l(_);ma=s(A,"I need to wrap all my emojis around a "),be=r(A,"CODE",{class:!0});var Hs=l(be);_a=s(Hs,"<span>"),Hs.forEach(t),ga=s(A," so I can apply some css like "),we=r(A,"CODE",{class:!0});var Ls=l(we);ba=s(Ls,"isolation: isolate"),Ls.forEach(t),wa=s(A," to exclude them from being blended. "),ae=r(A,"A",{href:!0,rel:!0});var zs=l(ae);xa=s(zs,"Inspiration credits to huijing \u{1F44F}\u{1F44F}"),zs.forEach(t),Ea=s(A,". But I am lazy to wrap all my emojis with "),xe=r(A,"CODE",{class:!0});var Us=l(xe);Ia=s(Us,"<span>"),Us.forEach(t),Aa=s(A,", I want to use them anytime I want, without bothering much of the "),Ee=r(A,"CODE",{class:!0});var Fs=l(Ee);Ta=s(Fs,"<span>"),Fs.forEach(t),ja=s(A,", so I decided to write a gatsby remark plugin to do that for me. \u{1F60E}"),A.forEach(t),Pa=u(h),ze=r(h,"P",{});var Qs=l(ze);Oa=s(Qs,"Well, it turns out it's not that hard."),Qs.forEach(t),Ga=u(h),M=r(h,"P",{});var Je=l(M);se=r(Je,"A",{href:!0,rel:!0});var Vs=l(se);Sa=s(Vs,"Remark"),Vs.forEach(t),Ca=s(Je," provides a friendly api to tap into the AST and "),oe=r(Je,"A",{href:!0,rel:!0});var Xs=l(oe);Da=s(Xs,"does transformation"),Xs.forEach(t),qa=s(Je,"."),Je.forEach(t),Ra=u(h),Ie=r(h,"DIV",{class:!0});var fo=l(Ie);fo.forEach(t),Ba=u(h),Ue=r(h,"P",{});var Js=l(Ue);Ae=r(Js,"EM",{});var ps=l(Ae);Ma=s(ps,"using emoji-regex find emojis and wrap them with a "),at=r(ps,"SPAN",{}),l(at).forEach(t),ps.forEach(t),Js.forEach(t),Na=u(h),Fe=r(h,"P",{});var Ys=l(Fe);$a=s(Ys,"...and it works!"),Ys.forEach(t),Wa=u(h),Qe=r(h,"P",{});var Zs=l(Qe);Ha=s(Zs,"Although somewhere when I started writing the gatsby plugin, a weird error popped up, and after some digging, I noticed that"),Zs.forEach(t),La=u(h),re=r(h,"P",{});var dt=l(re);za=s(dt,"I had to include "),Te=r(dt,"CODE",{class:!0});var Ks=l(Te);Ua=s(Ks,"package.json"),Ks.forEach(t),Fa=s(dt," into the plugin folder, or else it will yell at me."),dt.forEach(t),h.forEach(t),st=u(i),P=r(i,"SECTION",{});var Ce=l(P);Ve=r(Ce,"H2",{});var eo=l(Ve);le=r(eo,"A",{href:!0,id:!0});var to=l(le);Qa=s(to,"The Restructure"),to.forEach(t),eo.forEach(t),Va=u(Ce),E=r(Ce,"P",{});var C=l(E);Xa=s(C,"A while ago, I decided to add more categories to my blog, ie, "),je=r(C,"A",{href:!0});var ao=l(je);Ja=s(ao,"my blogs"),ao.forEach(t),Ya=s(C,", "),Pe=r(C,"A",{href:!0});var so=l(Pe);Za=s(so,"my talks"),so.forEach(t),Ka=s(C," and "),Oe=r(C,"A",{href:!0});var oo=l(Oe);es=s(oo,"my notes"),oo.forEach(t),ts=s(C,". So I created different folders for them and "),ne=r(C,"A",{href:!0,rel:!0});var ro=l(ne);as=s(ro,"rewrote the GraphQL query"),ro.forEach(t),C.forEach(t),ss=u(Ce),ie=r(Ce,"P",{});var ut=l(ie);os=s(ut,"The Graphql Editor in "),Ge=r(ut,"CODE",{class:!0});var lo=l(Ge);rs=s(lo,"http://localhost:8000/___graphql"),lo.forEach(t),ls=s(ut," is really helpful for me to understand how Gatsby and Gatsby plugins are creating all the objects."),ut.forEach(t),Ce.forEach(t),this.h()},h(){n(g,"href","https://overreacted.io"),n(g,"rel","nofollow"),n(m,"href","https://dev.wgao19.cc/"),n(m,"rel","nofollow"),n(he,"href","/blogs/"),n(W,"href","https://www.gatsbyjs.org/"),n(W,"rel","nofollow"),n(H,"href","#the-boilerplate"),n(H,"id","the-boilerplate"),n(z,"href","https://overreacted.io"),n(z,"rel","nofollow"),n(U,"href","#the-deployment"),n(U,"id","the-deployment"),n(Q,"href","https://pages.github.com/"),n(Q,"rel","nofollow"),n(Ne,"type","image/webp"),n(Ne,"srcset",Ro+", "+qo+" 2x"),po(b.src,hs=ho)||n(b,"src",hs),n(b,"srcset",ho+", "+Bo+" 2x"),n(b,"loading","lazy"),f(b,"position","absolute"),f(b,"top","0"),f(b,"width","100%"),f(b,"height","100%"),n(b,"alt","github pages settings"),n(b,"title","Github Pages Settings"),f(O,"display","block"),f(O,"position","relative"),f(O,"padding-top","80.214%"),f(O,"width","100%"),n(ue,"class","inline"),n(ve,"class","inline"),n(X,"href","https://github.com/tanhauhau/tanhauhau.github.io/blob/dev/scripts/publish.js"),n(X,"rel","nofollow"),n(ye,"class","inline"),n(ke,"class","inline"),n(fe,"class","inline"),n(J,"href","#the-light-dark-mode"),n(J,"id","the-light-dark-mode"),n(Y,"href","https://twitter.com/wgao19"),n(Y,"rel","nofollow"),n(Z,"href","https://dev.wgao19.cc/2019-05-04__sun-moon-blending-mode/"),n(Z,"rel","nofollow"),n(ee,"href","https://github.com/tanhauhau/tanhauhau.github.io/commit/291663d10cc7838d67392acb6a28a04a655603a6#diff-4e34e842430a5e2977417f28e477e14d"),n(ee,"rel","nofollow"),n(me,"class","inline"),n(_e,"class","code-section"),n(Le,"type","image/webp"),n(Le,"srcset",Co+", "+So+" 2x"),po(w.src,ds=co)||n(w,"src",ds),n(w,"srcset",co+", "+Do+" 2x"),n(w,"loading","lazy"),f(w,"position","absolute"),f(w,"top","0"),f(w,"width","100%"),f(w,"height","100%"),n(w,"alt","inverted emojis"),n(w,"title","It looked like emojis going through X-Rays.. \u{1F622}"),f(S,"display","block"),f(S,"position","relative"),f(S,"padding-top","55.677%"),f(S,"width","100%"),n(be,"class","inline"),n(we,"class","inline"),n(ae,"href","https://www.chenhuijing.com/blog/friends-dont-let-friends-implement-dark-mode-alone/#%F0%9F%92%BB"),n(ae,"rel","nofollow"),n(xe,"class","inline"),n(Ee,"class","inline"),n(se,"href","https://github.com/remarkjs/remark"),n(se,"rel","nofollow"),n(oe,"href","https://github.com/tanhauhau/tanhauhau.github.io/commit/291663d10cc7838d67392acb6a28a04a655603a6#diff-1be49bbded0fd920136646bdb37f5b91"),n(oe,"rel","nofollow"),n(Ie,"class","code-section"),n(Te,"class","inline"),n(le,"href","#the-restructure"),n(le,"id","the-restructure"),n(je,"href","/blogs/"),n(Pe,"href","/talks/"),n(Oe,"href","/notes"),n(ne,"href","https://github.com/tanhauhau/tanhauhau.github.io/commit/50c82259749f7608d1c81062eac1f357b9437485"),n(ne,"rel","nofollow"),n(Ge,"class","inline")},m(i,v){x(i,c,v),e(c,j),e(c,g),e(g,$),e(c,y),e(c,m),e(m,ce),e(c,vt),e(c,he),e(he,yt),e(c,kt),e(c,De),e(De,ft),x(i,Ye,v),x(i,D,v),e(D,mt),e(D,W),e(W,_t),e(D,gt),x(i,Ze,v),x(i,q,v),e(q,bt),e(q,qe),e(qe,wt),e(q,xt),x(i,Ke,v),x(i,R,v),e(R,Re),e(Re,H),e(H,Et),e(R,It),e(R,L),e(L,At),e(L,z),e(z,Tt),e(L,jt),x(i,et,v),x(i,k,v),e(k,Be),e(Be,U),e(U,Pt),e(k,Ot),e(k,F),e(F,Gt),e(F,Q),e(Q,St),e(F,Ct),e(k,Dt),e(k,Me),e(Me,O),e(O,de),e(de,Ne),e(de,b),e(k,qt),e(k,G),e(G,Rt),e(G,ue),e(ue,Bt),e(G,Mt),e(G,ve),e(ve,Nt),e(G,$t),e(k,Wt),e(k,V),e(V,Ht),e(V,X),e(X,Lt),e(V,zt),e(k,Ut),e(k,T),e(T,Ft),e(T,ye),e(ye,Qt),e(T,Vt),e(T,ke),e(ke,Xt),e(T,Jt),e(T,fe),e(fe,Yt),e(T,Zt),x(i,tt,v),x(i,p,v),e(p,$e),e($e,J),e(J,Kt),e(p,ea),e(p,B),e(B,Y),e(Y,ta),e(B,aa),e(B,Z),e(Z,sa),e(B,oa),e(p,ra),e(p,K),e(K,la),e(K,ee),e(ee,na),e(K,ia),e(p,pa),e(p,te),e(te,ca),e(te,me),e(me,ha),e(te,da),e(p,ua),e(p,_e),_e.innerHTML=vo,e(p,va),e(p,We),e(We,ya),e(p,ka),e(p,He),e(He,S),e(S,ge),e(ge,Le),e(ge,w),e(p,fa),e(p,_),e(_,ma),e(_,be),e(be,_a),e(_,ga),e(_,we),e(we,ba),e(_,wa),e(_,ae),e(ae,xa),e(_,Ea),e(_,xe),e(xe,Ia),e(_,Aa),e(_,Ee),e(Ee,Ta),e(_,ja),e(p,Pa),e(p,ze),e(ze,Oa),e(p,Ga),e(p,M),e(M,se),e(se,Sa),e(M,Ca),e(M,oe),e(oe,Da),e(M,qa),e(p,Ra),e(p,Ie),Ie.innerHTML=yo,e(p,Ba),e(p,Ue),e(Ue,Ae),e(Ae,Ma),e(Ae,at),e(p,Na),e(p,Fe),e(Fe,$a),e(p,Wa),e(p,Qe),e(Qe,Ha),e(p,La),e(p,re),e(re,za),e(re,Te),e(Te,Ua),e(re,Fa),x(i,st,v),x(i,P,v),e(P,Ve),e(Ve,le),e(le,Qa),e(P,Va),e(P,E),e(E,Xa),e(E,je),e(je,Ja),e(E,Ya),e(E,Pe),e(Pe,Za),e(E,Ka),e(E,Oe),e(Oe,es),e(E,ts),e(E,ne),e(ne,as),e(P,ss),e(P,ie),e(ie,os),e(ie,Ge),e(Ge,rs),e(ie,ls)},p:Po,d(i){i&&t(c),i&&t(Ye),i&&t(D),i&&t(Ze),i&&t(q),i&&t(Ke),i&&t(R),i&&t(et),i&&t(k),i&&t(tt),i&&t(p),i&&t(st),i&&t(P)}}}function No(pe){let c,j;const g=[pe[0],uo];let $={$$slots:{default:[Mo]},$$scope:{ctx:pe}};for(let y=0;y<g.length;y+=1)$=cs($,g[y]);return c=new Oo({props:$}),{c(){bo(c.$$.fragment)},l(y){wo(c.$$.fragment,y)},m(y,m){xo(c,y,m),j=!0},p(y,[m]){const ce=m&1?Eo(g,[m&1&&no(y[0]),m&0&&no(uo)]):{};m&2&&(ce.$$scope={dirty:m,ctx:y}),c.$set(ce)},i(y){j||(Io(c.$$.fragment,y),j=!0)},o(y){Ao(c.$$.fragment,y),j=!1},d(y){To(c,y)}}}const uo={title:"Building my Gatsby site",date:"2019-07-02T08:00:00Z",description:"A work in progress",wip:!0,label:"blog",tableOfContents:[{link:"the-boilerplate",title:"The boilerplate"},{link:"the-deployment",title:"The deployment"},{link:"the-light-dark-mode",title:"The light & dark mode"},{link:"the-restructure",title:"The Restructure"}]};function $o(pe,c,j){return jo("blog",{image:Go}),pe.$$set=g=>{j(0,c=cs(cs({},c),io(g)))},c=io(c),[c]}class Qo extends mo{constructor(c){super();_o(this,c,$o,No,go,{})}}export{Qo as default,uo as metadata};
