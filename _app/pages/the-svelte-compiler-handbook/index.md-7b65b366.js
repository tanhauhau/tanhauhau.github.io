import{S as Vu,i as qu,s as Xu,C as hh,w as Zu,x as Ku,y as Qu,z as e2,A as Au,q as t2,o as s2,B as a2,r as r2,Y as Ou,e as s,t as o,k as i,c as a,a as r,h as l,d as t,m as p,b as n,X as oo,f as h,g as v,H as e,J as o2}from"../../chunks/vendor-da4388d4.js";import{B as l2}from"../../chunks/BlogLayout-14cfab6f.js";import"../../chunks/stores-1fad7c36.js";import"../../chunks/ldjson-b0805387.js";/* empty css                                */var n2="https://lihautan.com/_app/assets/step-4-6a79547d.webp",c2="https://lihautan.com/_app/assets/step-4-997f18e1.webp",i2="https://lihautan.com/_app/assets/step-4-c91b1333.png",Iu="https://lihautan.com/_app/assets/step-4-533a8fe0.png",p2="https://lihautan.com/_app/assets/step-3-272528bb.webp",d2="https://lihautan.com/_app/assets/step-3-faffd8b6.webp",h2="https://lihautan.com/_app/assets/step-3-14370199.png",Du="https://lihautan.com/_app/assets/step-3-45c82f40.png",v2="https://lihautan.com/_app/assets/step-2-3ee1ae1e.webp",f2="https://lihautan.com/_app/assets/step-2-a5607e12.webp",u2="https://lihautan.com/_app/assets/step-2-9777da8f.png",Lu="https://lihautan.com/_app/assets/step-2-09f9fb5b.png",m2="https://lihautan.com/_app/assets/step-1-1881d02d.webp",_2="https://lihautan.com/_app/assets/step-1-61461261.webp",k2="https://lihautan.com/_app/assets/step-1-f3360fc2.png",Ru="https://lihautan.com/_app/assets/step-1-d9984fea.png",b2="https://lihautan.com/_app/assets/overview-3e214559.webp",E2="https://lihautan.com/_app/assets/overview-9793d290.webp",y2="https://lihautan.com/_app/assets/overview-e7425ff1.png",Pu="https://lihautan.com/_app/assets/overview-6ca5bb24.png",g2="https://lihautan.com/_app/assets/hero-twitter-87e98179.jpg";function w2(ds){let f,L,A,$e,k,O,hs,Vo,ze,Za,qo,Xo,Ka,Zo,lo,g,Qa,Ye,Ko,Qo,er,ne,vs,tr,R,vh,el,sr,tl,sl,B,ar,al,rl,rr,ol,ll,or,nl,cl,lr,il,pl,nr,dl,hl,fs,Mu=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">source</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">fs</span><span style="color: var(--shiki-token-function)">.readFileSync</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;App.svelte&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-comment)">// parse source code into AST</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ast</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">parse</span><span style="color: var(--shiki-color-text)">(source);</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-comment)">// tracking references and dependencies</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">component</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Component</span><span style="color: var(--shiki-color-text)">(ast);</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-comment)">// creating code blocks and fragments</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">renderer</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">options</span><span style="color: var(--shiki-color-text)">.generate </span><span style="color: var(--shiki-token-keyword)">===</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;ssr&#39;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">?</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">SSRRenderer</span><span style="color: var(--shiki-color-text)">(component) </span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">DomRenderer</span><span style="color: var(--shiki-color-text)">(component);</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-comment)">// Generate code</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> &#123; </span><span style="color: var(--shiki-token-constant)">js</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">css</span><span style="color: var(--shiki-color-text)"> &#125; </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">renderer</span><span style="color: var(--shiki-token-function)">.render</span><span style="color: var(--shiki-color-text)">();</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-constant)">fs</span><span style="color: var(--shiki-token-function)">.writeFileSync</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;App.js&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> js);</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">fs</span><span style="color: var(--shiki-token-function)">.writeFileSync</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;App.css&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> css);</span></span></code></pre>`,no,u,cr,Ve,vl,fl,ir,ce,us,pr,P,fh,ul,ms,Hu=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-comment)">// parse source code into AST</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ast</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">parse</span><span style="color: var(--shiki-color-text)">(source);</span></span></code></pre>`,ml,dr,_l,kl,ie,_s,bl,ks,El,yl,bs,gl,Es,wl,Sl,ys,xl,gs,Cl,Tl,pe,Al,ws,Ol,Il,Ss,Dl,Ll,Rl,I,Pl,xs,jl,Ml,qe,Hl,Nl,Cs,Wl,Ul,Xe,Jl,Gl,Bl,de,Fl,Ts,$l,zl,As,Yl,Vl,ql,hr,Xl,Zl,Os,Nu=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  html</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> &#123; type</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;Fragment&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> children</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> [</span><span style="color: var(--shiki-token-keyword)">...</span><span style="color: var(--shiki-color-text)">] &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  css</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> &#123; </span><span style="color: var(--shiki-token-keyword)">...</span><span style="color: var(--shiki-color-text)"> &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  instance</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> &#123; context</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;default&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> content</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> &#123;</span><span style="color: var(--shiki-token-keyword)">...</span><span style="color: var(--shiki-color-text)">&#125; &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  module</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> &#123; context</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;context&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> content</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> &#123;</span><span style="color: var(--shiki-token-keyword)">...</span><span style="color: var(--shiki-color-text)">&#125; &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Kl,he,Ql,Ze,en,tn,vr,sn,an,co,xe,fr,Ke,rn,on,ve,ln,Qe,nn,cn,et,pn,dn,io,Z,ur,tt,hn,vn,st,fn,Is,un,mn,_n,mr,kn,po,j,_r,at,bn,En,kr,fe,Ds,br,M,uh,yn,Ls,Wu=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-comment)">// tracking references and dependencies</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">component</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Component</span><span style="color: var(--shiki-color-text)">(ast);</span></span></code></pre>`,gn,Er,wn,ho,K,yr,ue,Sn,Rs,xn,Cn,Tn,rt,An,Ps,On,In,Dn,b,js,Ln,ot,Ms,Rn,Pn,Ce,jn,lt,Hs,Mn,Hn,nt,Ns,Nn,Wn,Ws,Un,ct,Us,Jn,Gn,Js,Bn,it,Gs,Fn,$n,Bs,zn,pt,Fs,Yn,Vn,$s,dt,qn,Xn,Zn,ht,vt,Kn,Qn,ft,ec,tc,ut,mt,sc,ac,_t,rc,vo,Q,gr,kt,oc,lc,Te,zs,nc,cc,wr,ic,pc,dc,bt,hc,Ys,vc,fc,fo,m,Sr,Et,uc,mc,yt,_c,gt,kc,bc,Ec,xr,yc,gc,Cr,Tr,wc,Sc,me,xc,Vs,Cc,Tc,qs,Ac,Oc,Ic,Ar,Or,Dc,Lc,ee,Xs,Rc,Pc,Zs,jc,Mc,Ks,Hc,Nc,Wc,Ir,Uc,Jc,F,x,wt,Gc,Bc,St,Fc,$c,xt,zc,Yc,Ct,Vc,qc,Tt,Xc,Zc,Kc,Ae,At,Qc,ei,Qs,ti,si,ai,te,Ot,ri,oi,ea,li,ni,ta,ci,ii,pi,Dr,di,uo,H,Lr,It,hi,vi,Rr,fi,ui,Pr,mi,_i,Dt,Lt,ki,sa,bi,Ei,yi,jr,gi,mo,se,Mr,Rt,wi,Si,Pt,xi,aa,Ci,Ti,Ai,Hr,Oi,_o,Oe,Nr,jt,Ii,Di,$,Li,Mt,Ri,Pi,ra,ji,Mi,Ht,Hi,Ni,ko,Ie,Wr,Nt,Wi,Ui,Wt,Ji,oa,Gi,Bi,bo,N,Ur,Ut,Fi,$i,Jr,_e,la,Gr,W,mh,zi,na,Uu=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-comment)">// creating code blocks and fragments</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">renderer</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">options</span><span style="color: var(--shiki-color-text)">.generate </span><span style="color: var(--shiki-token-keyword)">===</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;ssr&#39;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">?</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">SSRRenderer</span><span style="color: var(--shiki-color-text)">(component) </span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">DomRenderer</span><span style="color: var(--shiki-color-text)">(component);</span></span></code></pre>`,Yi,z,Vi,ca,qi,Xi,Jt,Zi,ke,Ki,ia,Qi,ep,tp,sp,pa,ap,rp,Eo,w,Br,Gt,op,lp,be,np,Bt,cp,ip,Ft,pp,dp,hp,Ee,vp,$t,fp,up,da,ha,mp,_p,kp,ye,bp,va,Ep,yp,fa,gp,wp,Sp,zt,xp,Yt,Cp,Tp,Ap,Vt,Op,ua,Ip,Dp,yo,De,Fr,qt,Lp,Rp,Y,Pp,Xt,jp,Mp,Zt,ma,Hp,Np,Kt,_a,Wp,Up,go,Le,$r,ge,Jp,ka,Gp,Bp,Fp,we,$p,Qt,zp,Yp,es,Vp,qp,wo,E,zr,ts,Xp,Zp,Yr,Se,ba,Vr,U,_h,Kp,Ea,Ju=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-comment)">// Generate code</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> &#123; </span><span style="color: var(--shiki-token-constant)">js</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">css</span><span style="color: var(--shiki-color-text)"> &#125; </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">renderer</span><span style="color: var(--shiki-token-function)">.render</span><span style="color: var(--shiki-color-text)">();</span></span></code></pre>`,Qp,qr,ed,td,C,Xr,sd,ad,ya,rd,od,ga,ld,nd,wa,cd,id,Sa,pd,dd,hd,Re,Zr,vd,fd,ss,ud,md,_d,D,kd,xa,bd,Ed,Ca,yd,gd,as,wd,Sd,rs,xd,Cd,So,ae,Kr,os,Td,Ad,ls,Od,ns,Id,Dd,Ld,V,re,Rd,Ta,Pd,jd,Aa,Md,Hd,Oa,Nd,Wd,Pe,Ud,Ia,Jd,Gd,Da,Bd,Fd,je,$d,La,zd,Yd,Ra,Vd,qd,Pa,Xd,ja,Zd;return{c(){f=s("section"),L=s("h2"),A=s("a"),$e=o("Who is this for?"),k=i(),O=s("p"),hs=o("Anyone who"),Vo=i(),ze=s("ul"),Za=s("li"),qo=o("is interested in the Svelte compilation process"),Xo=i(),Ka=s("li"),Zo=o("wants to get started in reading Svelte source code"),lo=i(),g=s("section"),Qa=s("h2"),Ye=s("a"),Ko=o("Overview"),Qo=i(),er=s("p"),ne=s("span"),vs=s("picture"),tr=s("source"),R=s("img"),el=i(),sr=s("p"),tl=o("The Svelte compilation process can be broken down into 4-steps"),sl=i(),B=s("ul"),ar=s("li"),al=o("Parsing source code into Abstract Syntax Tree (AST)"),rl=i(),rr=s("li"),ol=o("Tracking references and dependencies"),ll=i(),or=s("li"),nl=o("Creating code blocks and fragments"),cl=i(),lr=s("li"),il=o("Generate code"),pl=i(),nr=s("p"),dl=o("Which sums out by the following pseudocode:"),hl=i(),fs=s("div"),no=i(),u=s("section"),cr=s("h2"),Ve=s("a"),vl=o("1. Parsing source code into AST"),fl=i(),ir=s("p"),ce=s("span"),us=s("picture"),pr=s("source"),P=s("img"),ul=i(),ms=s("div"),ml=i(),dr=s("p"),_l=o("The Svelte syntax is a superset of HTML. Svelte implements its own parser for the Svelte syntax, which handles:"),kl=i(),ie=s("ul"),_s=s("li"),bl=o("HTML syntax "),ks=s("code"),El=o("<div>"),yl=i(),bs=s("li"),gl=o("Curly brackets "),Es=s("code"),wl=o("{ data }"),Sl=i(),ys=s("li"),xl=o("Logic blocks "),gs=s("code"),Cl=o("{#each list as item}"),Tl=i(),pe=s("p"),Al=o("The Svelte parser handles specially for "),ws=s("code"),Ol=o("<script>"),Il=o(" and "),Ss=s("code"),Dl=o("<style>"),Ll=o(" tags."),Rl=i(),I=s("p"),Pl=o("When the parser encounters a "),xs=s("code"),jl=o("<script>"),Ml=o(" tag, it uses "),qe=s("a"),Hl=o("acorn"),Nl=o(" to parse the content within the tag. When the parser sees a "),Cs=s("code"),Wl=o("<style>"),Ul=o(" tag, it uses "),Xe=s("a"),Jl=o("css-tree"),Gl=o(" to parse the CSS content."),Bl=i(),de=s("p"),Fl=o("Besides, the Svelte parser differentiates instance script, "),Ts=s("code"),$l=o("<script>"),zl=o(", and module script, "),As=s("code"),Yl=o('<script context="module">'),Vl=o("."),ql=i(),hr=s("p"),Xl=o("The Svelte AST look like:"),Zl=i(),Os=s("div"),Kl=i(),he=s("p"),Ql=o("You can try out the Svelte parser in "),Ze=s("a"),en=o("ASTExplorer"),tn=o(". You can find the Svelte parser under "),vr=s("strong"),sn=o("HTML > Svelte"),an=o("."),co=i(),xe=s("section"),fr=s("h3"),Ke=s("a"),rn=o("Where can I find the parser in the source code?"),on=i(),ve=s("p"),ln=o("The parsing "),Qe=s("a"),nn=o("starts here"),cn=o(", which the parser is implemented in "),et=s("a"),pn=o("src/compiler/parse/index.ts"),dn=o("."),io=i(),Z=s("section"),ur=s("h3"),tt=s("a"),hn=o("Where can I learn about parsing in JavaScript?"),vn=i(),st=s("p"),fn=o("My previous article, "),Is=s("a"),un=o('"JSON Parser with JavaScript"'),mn=o(" introduces the terminology and guides you step-by-step on writing a parser for JSON in JavaScript."),_n=i(),mr=s("p"),kn=o("If this is the your first time learning about parser, I highly recommend you to read that."),po=i(),j=s("section"),_r=s("h2"),at=s("a"),bn=o("2. Tracking references and dependencies"),En=i(),kr=s("p"),fe=s("span"),Ds=s("picture"),br=s("source"),M=s("img"),yn=i(),Ls=s("div"),gn=i(),Er=s("p"),wn=o("In this step, Svelte traverses through the AST to track all the variable declared and referenced and their depedencies."),ho=i(),K=s("section"),yr=s("h3"),ue=s("a"),Sn=o("a. Svelte creates a "),Rs=s("code"),xn=o("Component"),Cn=o(" instance."),Tn=i(),rt=s("p"),An=o("The "),Ps=s("code"),On=o("Component"),In=o(" class stores information of the Svelte component, which includes:"),Dn=i(),b=s("ul"),js=s("li"),Ln=o("HTML fragment, "),ot=s("a"),Ms=s("code"),Rn=o("fragment"),Pn=i(),Ce=s("li"),jn=o("instance script and module script AST and their lexical scopes, "),lt=s("a"),Hs=s("code"),Mn=o("instance_scope"),Hn=o(" and "),nt=s("a"),Ns=s("code"),Nn=o("module_scope"),Wn=i(),Ws=s("li"),Un=o("instance variables, "),ct=s("a"),Us=s("code"),Jn=o("vars"),Gn=i(),Js=s("li"),Bn=o("reactive variables, "),it=s("a"),Gs=s("code"),Fn=o("reactive_declarations"),$n=i(),Bs=s("li"),zn=o("slots, "),pt=s("a"),Fs=s("code"),Yn=o("slots"),Vn=i(),$s=s("li"),dt=s("a"),qn=o("used variable names"),Xn=o(" to prevent naming conflict when creating temporary variables"),Zn=i(),ht=s("li"),vt=s("a"),Kn=o("warnings"),Qn=o(" and "),ft=s("a"),ec=o("errors"),tc=i(),ut=s("li"),mt=s("a"),sc=o("compile options"),ac=o(" and "),_t=s("a"),rc=o("ignored warnings"),vo=i(),Q=s("section"),gr=s("h3"),kt=s("a"),oc=o("b. Traverse the instance script and module script AST"),lc=i(),Te=s("p"),zs=s("code"),nc=o("Component"),cc=o(" traverses the instance script and module script AST to "),wr=s("strong"),ic=o("find out all the variables declared, referenced, and updated"),pc=o(" within the instance script and module script."),dc=i(),bt=s("p"),hc=o("Svelte identifies all the variables available before traversing the template. When encountering the variable during template traversal, Svelte will mark the variable as "),Ys=s("code"),vc=o("referenced"),fc=o(" from template."),fo=i(),m=s("section"),Sr=s("h3"),Et=s("a"),uc=o("c. Traverse the template"),mc=i(),yt=s("p"),_c=o("Svelte traverses through the template AST and creates a "),gt=s("a"),kc=o("Fragment"),bc=o(" tree out of the template AST."),Ec=i(),xr=s("p"),yc=o("Each fragment node contains information such as:"),gc=i(),Cr=s("p"),Tr=s("strong"),wc=o("- expression and dependencies"),Sc=i(),me=s("p"),xc=o("Logic blocks, "),Vs=s("code"),Cc=o("{#if}"),Tc=o(", and mustache tags, "),qs=s("code"),Ac=o("{ data }"),Oc=o(", contain expression and the dependencies of the expression."),Ic=i(),Ar=s("p"),Or=s("strong"),Dc=o("- scope"),Lc=i(),ee=s("p"),Xs=s("code"),Rc=o("{#each}"),Pc=o(" and "),Zs=s("code"),jc=o("{#await}"),Mc=o(" logic block and "),Ks=s("code"),Hc=o("let:"),Nc=o(" binding create new variables for the children template."),Wc=i(),Ir=s("p"),Uc=o("Svelte creates a different Fragment node for each type of node in the AST, as different kind of Fragment node handles things differently:"),Jc=i(),F=s("ul"),x=s("li"),wt=s("a"),Gc=o("Element node"),Bc=o(" validates the "),St=s("a"),Fc=o("attribute"),$c=o(", "),xt=s("a"),zc=o("bindings"),Yc=o(", "),Ct=s("a"),Vc=o("content"),qc=o(" and "),Tt=s("a"),Xc=o("event handlers"),Zc=o("."),Kc=i(),Ae=s("li"),At=s("a"),Qc=o("Slot node"),ei=o(" registers the slot name to the "),Qs=s("code"),ti=o("Component"),si=o("."),ai=i(),te=s("li"),Ot=s("a"),ri=o("EachBlock node"),oi=o(" creates a new scope and tracks the "),ea=s("code"),li=o("key"),ni=o(", "),ta=s("code"),ci=o("index"),ii=o(" and the name of the list to be iterated."),pi=i(),Dr=s("li"),di=o("..."),uo=i(),H=s("section"),Lr=s("h3"),It=s("a"),hi=o("d. Traverse the instance script AST"),vi=i(),Rr=s("p"),fi=o("After traversing through the template, Svelte now knows whether a variable is ever being updated or referenced in the component."),ui=i(),Pr=s("p"),mi=o("With this information, Svelte tries make preparations for optimising the output, for example:"),_i=i(),Dt=s("ul"),Lt=s("li"),ki=o("determine which variables or functions can be safely hoisted out of the "),sa=s("code"),bi=o("instance"),Ei=o(" function."),yi=i(),jr=s("li"),gi=o("determine reactive declarations that does not need to be reactive"),mo=i(),se=s("section"),Mr=s("h3"),Rt=s("a"),wi=o("e. Update CSS selectors to make style declarations component scope"),Si=i(),Pt=s("p"),xi=o("Svelte updates the CSS selectors, by adding "),aa=s("code"),Ci=o(".svelte-xxx"),Ti=o(" class to the selectors when necessary."),Ai=i(),Hr=s("p"),Oi=o("At the end of this step, Svelte has enough information to generate the compiled code, which brings us to the next step."),_o=i(),Oe=s("section"),Nr=s("h3"),jt=s("a"),Ii=o("Where can I find this in the source code?"),Di=i(),$=s("p"),Li=o("You can start reading "),Mt=s("a"),Ri=o("from here"),Pi=o(", which the "),ra=s("code"),ji=o("Component"),Mi=o(" is implemented in "),Ht=s("a"),Hi=o("src/compiler/compile/Component.ts"),Ni=o("."),ko=i(),Ie=s("section"),Wr=s("h3"),Nt=s("a"),Wi=o("Where can I learn about traversing in JavaScript?"),Ui=i(),Wt=s("p"),Ji=o("Bear with my shameless plug, my previous article, "),oa=s("a"),Gi=o('"Manipulating AST with JavaScript"'),Bi=o(" covers relevant knowledge you need to know about traversing AST in JavaScript."),bo=i(),N=s("section"),Ur=s("h2"),Ut=s("a"),Fi=o("3. Creating code blocks and fragments"),$i=i(),Jr=s("p"),_e=s("span"),la=s("picture"),Gr=s("source"),W=s("img"),zi=i(),na=s("div"),Yi=i(),z=s("p"),Vi=o("In this step, Svelte creates a "),ca=s("code"),qi=o("Renderer"),Xi=o(" instance which keeps track necessary information required to generate the compiled output. Depending on the whether to output DOM or SSR code "),Jt=s("em"),Zi=o("("),ke=s("a"),Ki=o("see "),ia=s("code"),Qi=o("generate"),ep=o(" in compile options"),tp=o(")"),sp=o(", Svelte instantiates different "),pa=s("code"),ap=o("Renderer"),rp=o(" respectively."),Eo=i(),w=s("section"),Br=s("h3"),Gt=s("a"),op=o("DOM Renderer"),lp=i(),be=s("p"),np=o("DOM Renderer keeps track of "),Bt=s("a"),cp=o("a list of blocks"),ip=o(" and "),Ft=s("a"),pp=o("context"),dp=o("."),hp=i(),Ee=s("p"),vp=o("A "),$t=s("a"),fp=o("Block"),up=o(" contains code fragments for generate the "),da=s("a"),ha=s("code"),mp=o("create_fragment"),_p=o(" function."),kp=i(),ye=s("p"),bp=o("Context tracks a list of "),va=s("a"),Ep=o("instance variables"),yp=o(" which will be presented in the "),fa=s("code"),gp=o("$$.ctx"),wp=o(" in the compiled output."),Sp=i(),zt=s("p"),xp=o("In the renderer, Svelte creates a "),Yt=s("a"),Cp=o("render tree"),Tp=o(" out of the Fragment tree."),Ap=i(),Vt=s("p"),Op=o("Each node in the render tree implements the "),ua=s("code"),Ip=o("render"),Dp=o(" function which generate codes that create and update the DOM for the node."),yo=i(),De=s("section"),Fr=s("h3"),qt=s("a"),Lp=o("SSR Renderer"),Rp=i(),Y=s("p"),Pp=o("SSR Renderer provide helpers to generate "),Xt=s("a"),jp=o("template literals"),Mp=o(" in the compiled output, such as "),Zt=s("a"),ma=s("code"),Hp=o("add_string(str)"),Np=o(" and "),Kt=s("a"),_a=s("code"),Wp=o("add_expression(node)"),Up=o("."),go=i(),Le=s("section"),$r=s("h3"),ge=s("a"),Jp=o("Where can I find the "),ka=s("code"),Gp=o("Renderer"),Bp=o(" in the source code?"),Fp=i(),we=s("p"),$p=o("The DOM Renderer is implemented in "),Qt=s("a"),zp=o("src/compiler/compile/render_dom/Renderer.ts"),Yp=o(", and you can check out the SSR Renderer code in "),es=s("a"),Vp=o("src/compiler/compile/render_ssr/Renderer.ts"),qp=o("."),wo=i(),E=s("section"),zr=s("h2"),ts=s("a"),Xp=o("4. Generate code"),Zp=i(),Yr=s("p"),Se=s("span"),ba=s("picture"),Vr=s("source"),U=s("img"),Kp=i(),Ea=s("div"),Qp=i(),qr=s("p"),ed=o("Different renderer renders differently."),td=i(),C=s("p"),Xr=s("strong"),sd=o("The DOM Renderer"),ad=o(" traverses through the render tree and calls the "),ya=s("code"),rd=o("render"),od=o(" function of each node along the way. The "),ga=s("code"),ld=o("Block"),nd=o(" instance is passed into the "),wa=s("code"),cd=o("render"),id=o(" function, so that each node inserts the code into the appropriate "),Sa=s("code"),pd=o("create_fragment"),dd=o(" function."),hd=i(),Re=s("p"),Zr=s("strong"),vd=o("The SSR Renderer"),fd=o(", on the other hand, relies on different "),ss=s("a"),ud=o("node handlers"),md=o(" to insert strings or expressions into the final template literal."),_d=i(),D=s("p"),kd=o("The render function returns "),xa=s("code"),bd=o("js"),Ed=o(" and "),Ca=s("code"),yd=o("css"),gd=o(" which will be consumed by the bundler, via "),as=s("a"),wd=o("rollup-plugin-svelte"),Sd=o(" for rollup and "),rs=s("a"),xd=o("svelte-loader"),Cd=o(" for webpack respectively."),So=i(),ae=s("section"),Kr=s("h2"),os=s("a"),Td=o("Svelte runtime"),Ad=i(),ls=s("p"),Od=o("To remove duplicate code in the compiled output, Svelte provide util function which can be found in the "),ns=s("a"),Id=o("src/runtime/internal"),Dd=o(", such as:"),Ld=i(),V=s("ul"),re=s("li"),Rd=o("dom related utils, eg: "),Ta=s("code"),Pd=o("append"),jd=o(", "),Aa=s("code"),Md=o("insert"),Hd=o(", "),Oa=s("code"),Nd=o("detach"),Wd=i(),Pe=s("li"),Ud=o("scheduling utils, eg: "),Ia=s("code"),Jd=o("schedule_update"),Gd=o(", "),Da=s("code"),Bd=o("flush"),Fd=i(),je=s("li"),$d=o("lifecycle utils, eg: "),La=s("code"),zd=o("onMount"),Yd=o(", "),Ra=s("code"),Vd=o("beforeUpdate"),qd=i(),Pa=s("li"),Xd=o("animation utils, eg: "),ja=s("code"),Zd=o("create_animation"),this.h()},l(c){f=a(c,"SECTION",{});var d=r(f);L=a(d,"H2",{});var kh=r(L);A=a(kh,"A",{href:!0,id:!0});var bh=r(A);$e=l(bh,"Who is this for?"),bh.forEach(t),kh.forEach(t),k=p(d),O=a(d,"P",{});var Eh=r(O);hs=l(Eh,"Anyone who"),Eh.forEach(t),Vo=p(d),ze=a(d,"UL",{});var xo=r(ze);Za=a(xo,"LI",{});var yh=r(Za);qo=l(yh,"is interested in the Svelte compilation process"),yh.forEach(t),Xo=p(xo),Ka=a(xo,"LI",{});var gh=r(Ka);Zo=l(gh,"wants to get started in reading Svelte source code"),gh.forEach(t),xo.forEach(t),d.forEach(t),lo=p(c),g=a(c,"SECTION",{});var J=r(g);Qa=a(J,"H2",{});var wh=r(Qa);Ye=a(wh,"A",{href:!0,id:!0});var Sh=r(Ye);Ko=l(Sh,"Overview"),Sh.forEach(t),wh.forEach(t),Qo=p(J),er=a(J,"P",{});var xh=r(er);ne=a(xh,"SPAN",{style:!0});var Ch=r(ne);vs=a(Ch,"PICTURE",{});var Kd=r(vs);tr=a(Kd,"SOURCE",{type:!0,srcset:!0}),R=a(Kd,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),Kd.forEach(t),Ch.forEach(t),xh.forEach(t),el=p(J),sr=a(J,"P",{});var Th=r(sr);tl=l(Th,"The Svelte compilation process can be broken down into 4-steps"),Th.forEach(t),sl=p(J),B=a(J,"UL",{});var Me=r(B);ar=a(Me,"LI",{});var Ah=r(ar);al=l(Ah,"Parsing source code into Abstract Syntax Tree (AST)"),Ah.forEach(t),rl=p(Me),rr=a(Me,"LI",{});var Oh=r(rr);ol=l(Oh,"Tracking references and dependencies"),Oh.forEach(t),ll=p(Me),or=a(Me,"LI",{});var Ih=r(or);nl=l(Ih,"Creating code blocks and fragments"),Ih.forEach(t),cl=p(Me),lr=a(Me,"LI",{});var Dh=r(lr);il=l(Dh,"Generate code"),Dh.forEach(t),Me.forEach(t),pl=p(J),nr=a(J,"P",{});var Lh=r(nr);dl=l(Lh,"Which sums out by the following pseudocode:"),Lh.forEach(t),hl=p(J),fs=a(J,"DIV",{class:!0});var Gu=r(fs);Gu.forEach(t),J.forEach(t),no=p(c),u=a(c,"SECTION",{});var _=r(u);cr=a(_,"H2",{});var Rh=r(cr);Ve=a(Rh,"A",{href:!0,id:!0});var Ph=r(Ve);vl=l(Ph,"1. Parsing source code into AST"),Ph.forEach(t),Rh.forEach(t),fl=p(_),ir=a(_,"P",{});var jh=r(ir);ce=a(jh,"SPAN",{style:!0});var Mh=r(ce);us=a(Mh,"PICTURE",{});var Qd=r(us);pr=a(Qd,"SOURCE",{type:!0,srcset:!0}),P=a(Qd,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),Qd.forEach(t),Mh.forEach(t),jh.forEach(t),ul=p(_),ms=a(_,"DIV",{class:!0});var Bu=r(ms);Bu.forEach(t),ml=p(_),dr=a(_,"P",{});var Hh=r(dr);_l=l(Hh,"The Svelte syntax is a superset of HTML. Svelte implements its own parser for the Svelte syntax, which handles:"),Hh.forEach(t),kl=p(_),ie=a(_,"UL",{});var Ma=r(ie);_s=a(Ma,"LI",{});var eh=r(_s);bl=l(eh,"HTML syntax "),ks=a(eh,"CODE",{class:!0});var Nh=r(ks);El=l(Nh,"<div>"),Nh.forEach(t),eh.forEach(t),yl=p(Ma),bs=a(Ma,"LI",{});var th=r(bs);gl=l(th,"Curly brackets "),Es=a(th,"CODE",{class:!0});var Wh=r(Es);wl=l(Wh,"{ data }"),Wh.forEach(t),th.forEach(t),Sl=p(Ma),ys=a(Ma,"LI",{});var sh=r(ys);xl=l(sh,"Logic blocks "),gs=a(sh,"CODE",{class:!0});var Uh=r(gs);Cl=l(Uh,"{#each list as item}"),Uh.forEach(t),sh.forEach(t),Ma.forEach(t),Tl=p(_),pe=a(_,"P",{});var Ha=r(pe);Al=l(Ha,"The Svelte parser handles specially for "),ws=a(Ha,"CODE",{class:!0});var Jh=r(ws);Ol=l(Jh,"<script>"),Jh.forEach(t),Il=l(Ha," and "),Ss=a(Ha,"CODE",{class:!0});var Gh=r(Ss);Dl=l(Gh,"<style>"),Gh.forEach(t),Ll=l(Ha," tags."),Ha.forEach(t),Rl=p(_),I=a(_,"P",{});var oe=r(I);Pl=l(oe,"When the parser encounters a "),xs=a(oe,"CODE",{class:!0});var Bh=r(xs);jl=l(Bh,"<script>"),Bh.forEach(t),Ml=l(oe," tag, it uses "),qe=a(oe,"A",{href:!0,rel:!0});var Fh=r(qe);Hl=l(Fh,"acorn"),Fh.forEach(t),Nl=l(oe," to parse the content within the tag. When the parser sees a "),Cs=a(oe,"CODE",{class:!0});var $h=r(Cs);Wl=l($h,"<style>"),$h.forEach(t),Ul=l(oe," tag, it uses "),Xe=a(oe,"A",{href:!0,rel:!0});var zh=r(Xe);Jl=l(zh,"css-tree"),zh.forEach(t),Gl=l(oe," to parse the CSS content."),oe.forEach(t),Bl=p(_),de=a(_,"P",{});var Na=r(de);Fl=l(Na,"Besides, the Svelte parser differentiates instance script, "),Ts=a(Na,"CODE",{class:!0});var Yh=r(Ts);$l=l(Yh,"<script>"),Yh.forEach(t),zl=l(Na,", and module script, "),As=a(Na,"CODE",{class:!0});var Vh=r(As);Yl=l(Vh,'<script context="module">'),Vh.forEach(t),Vl=l(Na,"."),Na.forEach(t),ql=p(_),hr=a(_,"P",{});var qh=r(hr);Xl=l(qh,"The Svelte AST look like:"),qh.forEach(t),Zl=p(_),Os=a(_,"DIV",{class:!0});var Fu=r(Os);Fu.forEach(t),Kl=p(_),he=a(_,"P",{});var Wa=r(he);Ql=l(Wa,"You can try out the Svelte parser in "),Ze=a(Wa,"A",{href:!0,rel:!0});var Xh=r(Ze);en=l(Xh,"ASTExplorer"),Xh.forEach(t),tn=l(Wa,". You can find the Svelte parser under "),vr=a(Wa,"STRONG",{});var Zh=r(vr);sn=l(Zh,"HTML > Svelte"),Zh.forEach(t),an=l(Wa,"."),Wa.forEach(t),_.forEach(t),co=p(c),xe=a(c,"SECTION",{});var Co=r(xe);fr=a(Co,"H3",{});var Kh=r(fr);Ke=a(Kh,"A",{href:!0,id:!0});var Qh=r(Ke);rn=l(Qh,"Where can I find the parser in the source code?"),Qh.forEach(t),Kh.forEach(t),on=p(Co),ve=a(Co,"P",{});var Ua=r(ve);ln=l(Ua,"The parsing "),Qe=a(Ua,"A",{href:!0,rel:!0});var ev=r(Qe);nn=l(ev,"starts here"),ev.forEach(t),cn=l(Ua,", which the parser is implemented in "),et=a(Ua,"A",{href:!0,rel:!0});var tv=r(et);pn=l(tv,"src/compiler/parse/index.ts"),tv.forEach(t),dn=l(Ua,"."),Ua.forEach(t),Co.forEach(t),io=p(c),Z=a(c,"SECTION",{});var Ja=r(Z);ur=a(Ja,"H3",{});var sv=r(ur);tt=a(sv,"A",{href:!0,id:!0});var av=r(tt);hn=l(av,"Where can I learn about parsing in JavaScript?"),av.forEach(t),sv.forEach(t),vn=p(Ja),st=a(Ja,"P",{});var To=r(st);fn=l(To,"My previous article, "),Is=a(To,"A",{href:!0});var rv=r(Is);un=l(rv,'"JSON Parser with JavaScript"'),rv.forEach(t),mn=l(To," introduces the terminology and guides you step-by-step on writing a parser for JSON in JavaScript."),To.forEach(t),_n=p(Ja),mr=a(Ja,"P",{});var ov=r(mr);kn=l(ov,"If this is the your first time learning about parser, I highly recommend you to read that."),ov.forEach(t),Ja.forEach(t),po=p(c),j=a(c,"SECTION",{});var He=r(j);_r=a(He,"H2",{});var lv=r(_r);at=a(lv,"A",{href:!0,id:!0});var nv=r(at);bn=l(nv,"2. Tracking references and dependencies"),nv.forEach(t),lv.forEach(t),En=p(He),kr=a(He,"P",{});var cv=r(kr);fe=a(cv,"SPAN",{style:!0});var iv=r(fe);Ds=a(iv,"PICTURE",{});var ah=r(Ds);br=a(ah,"SOURCE",{type:!0,srcset:!0}),M=a(ah,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),ah.forEach(t),iv.forEach(t),cv.forEach(t),yn=p(He),Ls=a(He,"DIV",{class:!0});var $u=r(Ls);$u.forEach(t),gn=p(He),Er=a(He,"P",{});var pv=r(Er);wn=l(pv,"In this step, Svelte traverses through the AST to track all the variable declared and referenced and their depedencies."),pv.forEach(t),He.forEach(t),ho=p(c),K=a(c,"SECTION",{});var Ga=r(K);yr=a(Ga,"H3",{});var dv=r(yr);ue=a(dv,"A",{href:!0,id:!0});var Ao=r(ue);Sn=l(Ao,"a. Svelte creates a "),Rs=a(Ao,"CODE",{class:!0});var hv=r(Rs);xn=l(hv,"Component"),hv.forEach(t),Cn=l(Ao," instance."),Ao.forEach(t),dv.forEach(t),Tn=p(Ga),rt=a(Ga,"P",{});var Oo=r(rt);An=l(Oo,"The "),Ps=a(Oo,"CODE",{class:!0});var vv=r(Ps);On=l(vv,"Component"),vv.forEach(t),In=l(Oo," class stores information of the Svelte component, which includes:"),Oo.forEach(t),Dn=p(Ga),b=a(Ga,"UL",{});var S=r(b);js=a(S,"LI",{});var rh=r(js);Ln=l(rh,"HTML fragment, "),ot=a(rh,"A",{href:!0,rel:!0});var fv=r(ot);Ms=a(fv,"CODE",{class:!0});var uv=r(Ms);Rn=l(uv,"fragment"),uv.forEach(t),fv.forEach(t),rh.forEach(t),Pn=p(S),Ce=a(S,"LI",{});var Qr=r(Ce);jn=l(Qr,"instance script and module script AST and their lexical scopes, "),lt=a(Qr,"A",{href:!0,rel:!0});var mv=r(lt);Hs=a(mv,"CODE",{class:!0});var _v=r(Hs);Mn=l(_v,"instance_scope"),_v.forEach(t),mv.forEach(t),Hn=l(Qr," and "),nt=a(Qr,"A",{href:!0,rel:!0});var kv=r(nt);Ns=a(kv,"CODE",{class:!0});var bv=r(Ns);Nn=l(bv,"module_scope"),bv.forEach(t),kv.forEach(t),Qr.forEach(t),Wn=p(S),Ws=a(S,"LI",{});var oh=r(Ws);Un=l(oh,"instance variables, "),ct=a(oh,"A",{href:!0,rel:!0});var Ev=r(ct);Us=a(Ev,"CODE",{class:!0});var yv=r(Us);Jn=l(yv,"vars"),yv.forEach(t),Ev.forEach(t),oh.forEach(t),Gn=p(S),Js=a(S,"LI",{});var lh=r(Js);Bn=l(lh,"reactive variables, "),it=a(lh,"A",{href:!0,rel:!0});var gv=r(it);Gs=a(gv,"CODE",{class:!0});var wv=r(Gs);Fn=l(wv,"reactive_declarations"),wv.forEach(t),gv.forEach(t),lh.forEach(t),$n=p(S),Bs=a(S,"LI",{});var nh=r(Bs);zn=l(nh,"slots, "),pt=a(nh,"A",{href:!0,rel:!0});var Sv=r(pt);Fs=a(Sv,"CODE",{class:!0});var xv=r(Fs);Yn=l(xv,"slots"),xv.forEach(t),Sv.forEach(t),nh.forEach(t),Vn=p(S),$s=a(S,"LI",{});var ch=r($s);dt=a(ch,"A",{href:!0,rel:!0});var Cv=r(dt);qn=l(Cv,"used variable names"),Cv.forEach(t),Xn=l(ch," to prevent naming conflict when creating temporary variables"),ch.forEach(t),Zn=p(S),ht=a(S,"LI",{});var Io=r(ht);vt=a(Io,"A",{href:!0,rel:!0});var Tv=r(vt);Kn=l(Tv,"warnings"),Tv.forEach(t),Qn=l(Io," and "),ft=a(Io,"A",{href:!0,rel:!0});var Av=r(ft);ec=l(Av,"errors"),Av.forEach(t),Io.forEach(t),tc=p(S),ut=a(S,"LI",{});var Do=r(ut);mt=a(Do,"A",{href:!0,rel:!0});var Ov=r(mt);sc=l(Ov,"compile options"),Ov.forEach(t),ac=l(Do," and "),_t=a(Do,"A",{href:!0,rel:!0});var Iv=r(_t);rc=l(Iv,"ignored warnings"),Iv.forEach(t),Do.forEach(t),S.forEach(t),Ga.forEach(t),vo=p(c),Q=a(c,"SECTION",{});var Ba=r(Q);gr=a(Ba,"H3",{});var Dv=r(gr);kt=a(Dv,"A",{href:!0,id:!0});var Lv=r(kt);oc=l(Lv,"b. Traverse the instance script and module script AST"),Lv.forEach(t),Dv.forEach(t),lc=p(Ba),Te=a(Ba,"P",{});var eo=r(Te);zs=a(eo,"CODE",{class:!0});var Rv=r(zs);nc=l(Rv,"Component"),Rv.forEach(t),cc=l(eo," traverses the instance script and module script AST to "),wr=a(eo,"STRONG",{});var Pv=r(wr);ic=l(Pv,"find out all the variables declared, referenced, and updated"),Pv.forEach(t),pc=l(eo," within the instance script and module script."),eo.forEach(t),dc=p(Ba),bt=a(Ba,"P",{});var Lo=r(bt);hc=l(Lo,"Svelte identifies all the variables available before traversing the template. When encountering the variable during template traversal, Svelte will mark the variable as "),Ys=a(Lo,"CODE",{class:!0});var jv=r(Ys);vc=l(jv,"referenced"),jv.forEach(t),fc=l(Lo," from template."),Lo.forEach(t),Ba.forEach(t),fo=p(c),m=a(c,"SECTION",{});var y=r(m);Sr=a(y,"H3",{});var Mv=r(Sr);Et=a(Mv,"A",{href:!0,id:!0});var Hv=r(Et);uc=l(Hv,"c. Traverse the template"),Hv.forEach(t),Mv.forEach(t),mc=p(y),yt=a(y,"P",{});var Ro=r(yt);_c=l(Ro,"Svelte traverses through the template AST and creates a "),gt=a(Ro,"A",{href:!0,rel:!0});var Nv=r(gt);kc=l(Nv,"Fragment"),Nv.forEach(t),bc=l(Ro," tree out of the template AST."),Ro.forEach(t),Ec=p(y),xr=a(y,"P",{});var Wv=r(xr);yc=l(Wv,"Each fragment node contains information such as:"),Wv.forEach(t),gc=p(y),Cr=a(y,"P",{});var Uv=r(Cr);Tr=a(Uv,"STRONG",{});var Jv=r(Tr);wc=l(Jv,"- expression and dependencies"),Jv.forEach(t),Uv.forEach(t),Sc=p(y),me=a(y,"P",{});var Fa=r(me);xc=l(Fa,"Logic blocks, "),Vs=a(Fa,"CODE",{class:!0});var Gv=r(Vs);Cc=l(Gv,"{#if}"),Gv.forEach(t),Tc=l(Fa,", and mustache tags, "),qs=a(Fa,"CODE",{class:!0});var Bv=r(qs);Ac=l(Bv,"{ data }"),Bv.forEach(t),Oc=l(Fa,", contain expression and the dependencies of the expression."),Fa.forEach(t),Ic=p(y),Ar=a(y,"P",{});var Fv=r(Ar);Or=a(Fv,"STRONG",{});var $v=r(Or);Dc=l($v,"- scope"),$v.forEach(t),Fv.forEach(t),Lc=p(y),ee=a(y,"P",{});var cs=r(ee);Xs=a(cs,"CODE",{class:!0});var zv=r(Xs);Rc=l(zv,"{#each}"),zv.forEach(t),Pc=l(cs," and "),Zs=a(cs,"CODE",{class:!0});var Yv=r(Zs);jc=l(Yv,"{#await}"),Yv.forEach(t),Mc=l(cs," logic block and "),Ks=a(cs,"CODE",{class:!0});var Vv=r(Ks);Hc=l(Vv,"let:"),Vv.forEach(t),Nc=l(cs," binding create new variables for the children template."),cs.forEach(t),Wc=p(y),Ir=a(y,"P",{});var qv=r(Ir);Uc=l(qv,"Svelte creates a different Fragment node for each type of node in the AST, as different kind of Fragment node handles things differently:"),qv.forEach(t),Jc=p(y),F=a(y,"UL",{});var Ne=r(F);x=a(Ne,"LI",{});var q=r(x);wt=a(q,"A",{href:!0,rel:!0});var Xv=r(wt);Gc=l(Xv,"Element node"),Xv.forEach(t),Bc=l(q," validates the "),St=a(q,"A",{href:!0,rel:!0});var Zv=r(St);Fc=l(Zv,"attribute"),Zv.forEach(t),$c=l(q,", "),xt=a(q,"A",{href:!0,rel:!0});var Kv=r(xt);zc=l(Kv,"bindings"),Kv.forEach(t),Yc=l(q,", "),Ct=a(q,"A",{href:!0,rel:!0});var Qv=r(Ct);Vc=l(Qv,"content"),Qv.forEach(t),qc=l(q," and "),Tt=a(q,"A",{href:!0,rel:!0});var ef=r(Tt);Xc=l(ef,"event handlers"),ef.forEach(t),Zc=l(q,"."),q.forEach(t),Kc=p(Ne),Ae=a(Ne,"LI",{});var to=r(Ae);At=a(to,"A",{href:!0,rel:!0});var tf=r(At);Qc=l(tf,"Slot node"),tf.forEach(t),ei=l(to," registers the slot name to the "),Qs=a(to,"CODE",{class:!0});var sf=r(Qs);ti=l(sf,"Component"),sf.forEach(t),si=l(to,"."),to.forEach(t),ai=p(Ne),te=a(Ne,"LI",{});var is=r(te);Ot=a(is,"A",{href:!0,rel:!0});var af=r(Ot);ri=l(af,"EachBlock node"),af.forEach(t),oi=l(is," creates a new scope and tracks the "),ea=a(is,"CODE",{class:!0});var rf=r(ea);li=l(rf,"key"),rf.forEach(t),ni=l(is,", "),ta=a(is,"CODE",{class:!0});var of=r(ta);ci=l(of,"index"),of.forEach(t),ii=l(is," and the name of the list to be iterated."),is.forEach(t),pi=p(Ne),Dr=a(Ne,"LI",{});var lf=r(Dr);di=l(lf,"..."),lf.forEach(t),Ne.forEach(t),y.forEach(t),uo=p(c),H=a(c,"SECTION",{});var We=r(H);Lr=a(We,"H3",{});var nf=r(Lr);It=a(nf,"A",{href:!0,id:!0});var cf=r(It);hi=l(cf,"d. Traverse the instance script AST"),cf.forEach(t),nf.forEach(t),vi=p(We),Rr=a(We,"P",{});var pf=r(Rr);fi=l(pf,"After traversing through the template, Svelte now knows whether a variable is ever being updated or referenced in the component."),pf.forEach(t),ui=p(We),Pr=a(We,"P",{});var df=r(Pr);mi=l(df,"With this information, Svelte tries make preparations for optimising the output, for example:"),df.forEach(t),_i=p(We),Dt=a(We,"UL",{});var Po=r(Dt);Lt=a(Po,"LI",{});var jo=r(Lt);ki=l(jo,"determine which variables or functions can be safely hoisted out of the "),sa=a(jo,"CODE",{class:!0});var hf=r(sa);bi=l(hf,"instance"),hf.forEach(t),Ei=l(jo," function."),jo.forEach(t),yi=p(Po),jr=a(Po,"LI",{});var vf=r(jr);gi=l(vf,"determine reactive declarations that does not need to be reactive"),vf.forEach(t),Po.forEach(t),We.forEach(t),mo=p(c),se=a(c,"SECTION",{});var $a=r(se);Mr=a($a,"H3",{});var ff=r(Mr);Rt=a(ff,"A",{href:!0,id:!0});var uf=r(Rt);wi=l(uf,"e. Update CSS selectors to make style declarations component scope"),uf.forEach(t),ff.forEach(t),Si=p($a),Pt=a($a,"P",{});var Mo=r(Pt);xi=l(Mo,"Svelte updates the CSS selectors, by adding "),aa=a(Mo,"CODE",{class:!0});var mf=r(aa);Ci=l(mf,".svelte-xxx"),mf.forEach(t),Ti=l(Mo," class to the selectors when necessary."),Mo.forEach(t),Ai=p($a),Hr=a($a,"P",{});var _f=r(Hr);Oi=l(_f,"At the end of this step, Svelte has enough information to generate the compiled code, which brings us to the next step."),_f.forEach(t),$a.forEach(t),_o=p(c),Oe=a(c,"SECTION",{});var Ho=r(Oe);Nr=a(Ho,"H3",{});var kf=r(Nr);jt=a(kf,"A",{href:!0,id:!0});var bf=r(jt);Ii=l(bf,"Where can I find this in the source code?"),bf.forEach(t),kf.forEach(t),Di=p(Ho),$=a(Ho,"P",{});var Ue=r($);Li=l(Ue,"You can start reading "),Mt=a(Ue,"A",{href:!0,rel:!0});var Ef=r(Mt);Ri=l(Ef,"from here"),Ef.forEach(t),Pi=l(Ue,", which the "),ra=a(Ue,"CODE",{class:!0});var yf=r(ra);ji=l(yf,"Component"),yf.forEach(t),Mi=l(Ue," is implemented in "),Ht=a(Ue,"A",{href:!0,rel:!0});var gf=r(Ht);Hi=l(gf,"src/compiler/compile/Component.ts"),gf.forEach(t),Ni=l(Ue,"."),Ue.forEach(t),Ho.forEach(t),ko=p(c),Ie=a(c,"SECTION",{});var No=r(Ie);Wr=a(No,"H3",{});var wf=r(Wr);Nt=a(wf,"A",{href:!0,id:!0});var Sf=r(Nt);Wi=l(Sf,"Where can I learn about traversing in JavaScript?"),Sf.forEach(t),wf.forEach(t),Ui=p(No),Wt=a(No,"P",{});var Wo=r(Wt);Ji=l(Wo,"Bear with my shameless plug, my previous article, "),oa=a(Wo,"A",{href:!0});var xf=r(oa);Gi=l(xf,'"Manipulating AST with JavaScript"'),xf.forEach(t),Bi=l(Wo," covers relevant knowledge you need to know about traversing AST in JavaScript."),Wo.forEach(t),No.forEach(t),bo=p(c),N=a(c,"SECTION",{});var Je=r(N);Ur=a(Je,"H2",{});var Cf=r(Ur);Ut=a(Cf,"A",{href:!0,id:!0});var Tf=r(Ut);Fi=l(Tf,"3. Creating code blocks and fragments"),Tf.forEach(t),Cf.forEach(t),$i=p(Je),Jr=a(Je,"P",{});var Af=r(Jr);_e=a(Af,"SPAN",{style:!0});var Of=r(_e);la=a(Of,"PICTURE",{});var ih=r(la);Gr=a(ih,"SOURCE",{type:!0,srcset:!0}),W=a(ih,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),ih.forEach(t),Of.forEach(t),Af.forEach(t),zi=p(Je),na=a(Je,"DIV",{class:!0});var zu=r(na);zu.forEach(t),Yi=p(Je),z=a(Je,"P",{});var Ge=r(z);Vi=l(Ge,"In this step, Svelte creates a "),ca=a(Ge,"CODE",{class:!0});var If=r(ca);qi=l(If,"Renderer"),If.forEach(t),Xi=l(Ge," instance which keeps track necessary information required to generate the compiled output. Depending on the whether to output DOM or SSR code "),Jt=a(Ge,"EM",{});var Uo=r(Jt);Zi=l(Uo,"("),ke=a(Uo,"A",{href:!0,rel:!0});var Jo=r(ke);Ki=l(Jo,"see "),ia=a(Jo,"CODE",{class:!0});var Df=r(ia);Qi=l(Df,"generate"),Df.forEach(t),ep=l(Jo," in compile options"),Jo.forEach(t),tp=l(Uo,")"),Uo.forEach(t),sp=l(Ge,", Svelte instantiates different "),pa=a(Ge,"CODE",{class:!0});var Lf=r(pa);ap=l(Lf,"Renderer"),Lf.forEach(t),rp=l(Ge," respectively."),Ge.forEach(t),Je.forEach(t),Eo=p(c),w=a(c,"SECTION",{});var G=r(w);Br=a(G,"H3",{});var Rf=r(Br);Gt=a(Rf,"A",{href:!0,id:!0});var Pf=r(Gt);op=l(Pf,"DOM Renderer"),Pf.forEach(t),Rf.forEach(t),lp=p(G),be=a(G,"P",{});var za=r(be);np=l(za,"DOM Renderer keeps track of "),Bt=a(za,"A",{href:!0,rel:!0});var jf=r(Bt);cp=l(jf,"a list of blocks"),jf.forEach(t),ip=l(za," and "),Ft=a(za,"A",{href:!0,rel:!0});var Mf=r(Ft);pp=l(Mf,"context"),Mf.forEach(t),dp=l(za,"."),za.forEach(t),hp=p(G),Ee=a(G,"P",{});var Ya=r(Ee);vp=l(Ya,"A "),$t=a(Ya,"A",{href:!0,rel:!0});var Hf=r($t);fp=l(Hf,"Block"),Hf.forEach(t),up=l(Ya," contains code fragments for generate the "),da=a(Ya,"A",{href:!0});var Nf=r(da);ha=a(Nf,"CODE",{class:!0});var Wf=r(ha);mp=l(Wf,"create_fragment"),Wf.forEach(t),Nf.forEach(t),_p=l(Ya," function."),Ya.forEach(t),kp=p(G),ye=a(G,"P",{});var Va=r(ye);bp=l(Va,"Context tracks a list of "),va=a(Va,"A",{href:!0});var Uf=r(va);Ep=l(Uf,"instance variables"),Uf.forEach(t),yp=l(Va," which will be presented in the "),fa=a(Va,"CODE",{class:!0});var Jf=r(fa);gp=l(Jf,"$$.ctx"),Jf.forEach(t),wp=l(Va," in the compiled output."),Va.forEach(t),Sp=p(G),zt=a(G,"P",{});var Go=r(zt);xp=l(Go,"In the renderer, Svelte creates a "),Yt=a(Go,"A",{href:!0,rel:!0});var Gf=r(Yt);Cp=l(Gf,"render tree"),Gf.forEach(t),Tp=l(Go," out of the Fragment tree."),Go.forEach(t),Ap=p(G),Vt=a(G,"P",{});var Bo=r(Vt);Op=l(Bo,"Each node in the render tree implements the "),ua=a(Bo,"CODE",{class:!0});var Bf=r(ua);Ip=l(Bf,"render"),Bf.forEach(t),Dp=l(Bo," function which generate codes that create and update the DOM for the node."),Bo.forEach(t),G.forEach(t),yo=p(c),De=a(c,"SECTION",{});var Fo=r(De);Fr=a(Fo,"H3",{});var Ff=r(Fr);qt=a(Ff,"A",{href:!0,id:!0});var $f=r(qt);Lp=l($f,"SSR Renderer"),$f.forEach(t),Ff.forEach(t),Rp=p(Fo),Y=a(Fo,"P",{});var Be=r(Y);Pp=l(Be,"SSR Renderer provide helpers to generate "),Xt=a(Be,"A",{href:!0,rel:!0});var zf=r(Xt);jp=l(zf,"template literals"),zf.forEach(t),Mp=l(Be," in the compiled output, such as "),Zt=a(Be,"A",{href:!0,rel:!0});var Yf=r(Zt);ma=a(Yf,"CODE",{class:!0});var Vf=r(ma);Hp=l(Vf,"add_string(str)"),Vf.forEach(t),Yf.forEach(t),Np=l(Be," and "),Kt=a(Be,"A",{href:!0,rel:!0});var qf=r(Kt);_a=a(qf,"CODE",{class:!0});var Xf=r(_a);Wp=l(Xf,"add_expression(node)"),Xf.forEach(t),qf.forEach(t),Up=l(Be,"."),Be.forEach(t),Fo.forEach(t),go=p(c),Le=a(c,"SECTION",{});var $o=r(Le);$r=a($o,"H3",{});var Zf=r($r);ge=a(Zf,"A",{href:!0,id:!0});var zo=r(ge);Jp=l(zo,"Where can I find the "),ka=a(zo,"CODE",{class:!0});var Kf=r(ka);Gp=l(Kf,"Renderer"),Kf.forEach(t),Bp=l(zo," in the source code?"),zo.forEach(t),Zf.forEach(t),Fp=p($o),we=a($o,"P",{});var qa=r(we);$p=l(qa,"The DOM Renderer is implemented in "),Qt=a(qa,"A",{href:!0,rel:!0});var Qf=r(Qt);zp=l(Qf,"src/compiler/compile/render_dom/Renderer.ts"),Qf.forEach(t),Yp=l(qa,", and you can check out the SSR Renderer code in "),es=a(qa,"A",{href:!0,rel:!0});var eu=r(es);Vp=l(eu,"src/compiler/compile/render_ssr/Renderer.ts"),eu.forEach(t),qp=l(qa,"."),qa.forEach(t),$o.forEach(t),wo=p(c),E=a(c,"SECTION",{});var T=r(E);zr=a(T,"H2",{});var tu=r(zr);ts=a(tu,"A",{href:!0,id:!0});var su=r(ts);Xp=l(su,"4. Generate code"),su.forEach(t),tu.forEach(t),Zp=p(T),Yr=a(T,"P",{});var au=r(Yr);Se=a(au,"SPAN",{style:!0});var ru=r(Se);ba=a(ru,"PICTURE",{});var ph=r(ba);Vr=a(ph,"SOURCE",{type:!0,srcset:!0}),U=a(ph,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),ph.forEach(t),ru.forEach(t),au.forEach(t),Kp=p(T),Ea=a(T,"DIV",{class:!0});var Yu=r(Ea);Yu.forEach(t),Qp=p(T),qr=a(T,"P",{});var ou=r(qr);ed=l(ou,"Different renderer renders differently."),ou.forEach(t),td=p(T),C=a(T,"P",{});var X=r(C);Xr=a(X,"STRONG",{});var lu=r(Xr);sd=l(lu,"The DOM Renderer"),lu.forEach(t),ad=l(X," traverses through the render tree and calls the "),ya=a(X,"CODE",{class:!0});var nu=r(ya);rd=l(nu,"render"),nu.forEach(t),od=l(X," function of each node along the way. The "),ga=a(X,"CODE",{class:!0});var cu=r(ga);ld=l(cu,"Block"),cu.forEach(t),nd=l(X," instance is passed into the "),wa=a(X,"CODE",{class:!0});var iu=r(wa);cd=l(iu,"render"),iu.forEach(t),id=l(X," function, so that each node inserts the code into the appropriate "),Sa=a(X,"CODE",{class:!0});var pu=r(Sa);pd=l(pu,"create_fragment"),pu.forEach(t),dd=l(X," function."),X.forEach(t),hd=p(T),Re=a(T,"P",{});var so=r(Re);Zr=a(so,"STRONG",{});var du=r(Zr);vd=l(du,"The SSR Renderer"),du.forEach(t),fd=l(so,", on the other hand, relies on different "),ss=a(so,"A",{href:!0,rel:!0});var hu=r(ss);ud=l(hu,"node handlers"),hu.forEach(t),md=l(so," to insert strings or expressions into the final template literal."),so.forEach(t),_d=p(T),D=a(T,"P",{});var le=r(D);kd=l(le,"The render function returns "),xa=a(le,"CODE",{class:!0});var vu=r(xa);bd=l(vu,"js"),vu.forEach(t),Ed=l(le," and "),Ca=a(le,"CODE",{class:!0});var fu=r(Ca);yd=l(fu,"css"),fu.forEach(t),gd=l(le," which will be consumed by the bundler, via "),as=a(le,"A",{href:!0,rel:!0});var uu=r(as);wd=l(uu,"rollup-plugin-svelte"),uu.forEach(t),Sd=l(le," for rollup and "),rs=a(le,"A",{href:!0,rel:!0});var mu=r(rs);xd=l(mu,"svelte-loader"),mu.forEach(t),Cd=l(le," for webpack respectively."),le.forEach(t),T.forEach(t),So=p(c),ae=a(c,"SECTION",{});var Xa=r(ae);Kr=a(Xa,"H2",{});var _u=r(Kr);os=a(_u,"A",{href:!0,id:!0});var ku=r(os);Td=l(ku,"Svelte runtime"),ku.forEach(t),_u.forEach(t),Ad=p(Xa),ls=a(Xa,"P",{});var Yo=r(ls);Od=l(Yo,"To remove duplicate code in the compiled output, Svelte provide util function which can be found in the "),ns=a(Yo,"A",{href:!0,rel:!0});var bu=r(ns);Id=l(bu,"src/runtime/internal"),bu.forEach(t),Dd=l(Yo,", such as:"),Yo.forEach(t),Ld=p(Xa),V=a(Xa,"UL",{});var Fe=r(V);re=a(Fe,"LI",{});var ps=r(re);Rd=l(ps,"dom related utils, eg: "),Ta=a(ps,"CODE",{class:!0});var Eu=r(Ta);Pd=l(Eu,"append"),Eu.forEach(t),jd=l(ps,", "),Aa=a(ps,"CODE",{class:!0});var yu=r(Aa);Md=l(yu,"insert"),yu.forEach(t),Hd=l(ps,", "),Oa=a(ps,"CODE",{class:!0});var gu=r(Oa);Nd=l(gu,"detach"),gu.forEach(t),ps.forEach(t),Wd=p(Fe),Pe=a(Fe,"LI",{});var ao=r(Pe);Ud=l(ao,"scheduling utils, eg: "),Ia=a(ao,"CODE",{class:!0});var wu=r(Ia);Jd=l(wu,"schedule_update"),wu.forEach(t),Gd=l(ao,", "),Da=a(ao,"CODE",{class:!0});var Su=r(Da);Bd=l(Su,"flush"),Su.forEach(t),ao.forEach(t),Fd=p(Fe),je=a(Fe,"LI",{});var ro=r(je);$d=l(ro,"lifecycle utils, eg: "),La=a(ro,"CODE",{class:!0});var xu=r(La);zd=l(xu,"onMount"),xu.forEach(t),Yd=l(ro,", "),Ra=a(ro,"CODE",{class:!0});var Cu=r(Ra);Vd=l(Cu,"beforeUpdate"),Cu.forEach(t),ro.forEach(t),qd=p(Fe),Pa=a(Fe,"LI",{});var dh=r(Pa);Xd=l(dh,"animation utils, eg: "),ja=a(dh,"CODE",{class:!0});var Tu=r(ja);Zd=l(Tu,"create_animation"),Tu.forEach(t),dh.forEach(t),Fe.forEach(t),Xa.forEach(t),this.h()},h(){n(A,"href","#who-is-this-for"),n(A,"id","who-is-this-for"),n(Ye,"href","#overview"),n(Ye,"id","overview"),n(tr,"type","image/webp"),n(tr,"srcset",E2+", "+b2+" 2x"),oo(R.src,vh=Pu)||n(R,"src",vh),n(R,"srcset",Pu+", "+y2+" 2x"),n(R,"loading","lazy"),h(R,"position","absolute"),h(R,"top","0"),h(R,"width","100%"),h(R,"height","100%"),n(R,"alt","Overview"),h(ne,"display","block"),h(ne,"position","relative"),h(ne,"padding-top","17.512%"),h(ne,"width","100%"),n(fs,"class","code-section"),n(Ve,"href","#1-parsing-source-code-into-ast"),n(Ve,"id","1-parsing-source-code-into-ast"),n(pr,"type","image/webp"),n(pr,"srcset",_2+", "+m2+" 2x"),oo(P.src,fh=Ru)||n(P,"src",fh),n(P,"srcset",Ru+", "+k2+" 2x"),n(P,"loading","lazy"),h(P,"position","absolute"),h(P,"top","0"),h(P,"width","100%"),h(P,"height","100%"),n(P,"alt","Step 1"),h(ce,"display","block"),h(ce,"position","relative"),h(ce,"padding-top","45.065%"),h(ce,"width","100%"),n(ms,"class","code-section"),n(ks,"class","inline"),n(Es,"class","inline"),n(gs,"class","inline"),n(ws,"class","inline"),n(Ss,"class","inline"),n(xs,"class","inline"),n(qe,"href","https://www.npmjs.com/package/acorn"),n(qe,"rel","nofollow"),n(Cs,"class","inline"),n(Xe,"href","https://www.npmjs.com/package/css-tree"),n(Xe,"rel","nofollow"),n(Ts,"class","inline"),n(As,"class","inline"),n(Os,"class","code-section"),n(Ze,"href","https://astexplorer.net/#/gist/828907dd1600c208a4e315962c635b4a/e1c895d49e8899a3be849a137fc557ba66eb2423"),n(Ze,"rel","nofollow"),n(Ke,"href","#where-can-i-find-the-parser-in-the-source-code"),n(Ke,"id","where-can-i-find-the-parser-in-the-source-code"),n(Qe,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/index.ts#L79"),n(Qe,"rel","nofollow"),n(et,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/parse/index.ts"),n(et,"rel","nofollow"),n(tt,"href","#where-can-i-learn-about-parsing-in-javascript"),n(tt,"id","where-can-i-learn-about-parsing-in-javascript"),n(Is,"href","/json-parser-with-javascript"),n(at,"href","#2-tracking-references-and-dependencies"),n(at,"id","2-tracking-references-and-dependencies"),n(br,"type","image/webp"),n(br,"srcset",f2+", "+v2+" 2x"),oo(M.src,uh=Lu)||n(M,"src",uh),n(M,"srcset",Lu+", "+u2+" 2x"),n(M,"loading","lazy"),h(M,"position","absolute"),h(M,"top","0"),h(M,"width","100%"),h(M,"height","100%"),n(M,"alt","Step 2"),h(fe,"display","block"),h(fe,"position","relative"),h(fe,"padding-top","42.219%"),h(fe,"width","100%"),n(Ls,"class","code-section"),n(Rs,"class","inline"),n(ue,"href","#a-svelte-creates-a-component-instance"),n(ue,"id","a-svelte-creates-a-component-instance"),n(Ps,"class","inline"),n(Ms,"class","inline"),n(ot,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/Component.ts#L52"),n(ot,"rel","nofollow"),n(Hs,"class","inline"),n(lt,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/Component.ts#L54"),n(lt,"rel","nofollow"),n(Ns,"class","inline"),n(nt,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/Component.ts#L53"),n(nt,"rel","nofollow"),n(Us,"class","inline"),n(ct,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/Component.ts#L62"),n(ct,"rel","nofollow"),n(Gs,"class","inline"),n(it,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/Component.ts#L71"),n(it,"rel","nofollow"),n(Fs,"class","inline"),n(pt,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/Component.ts#L94"),n(pt,"rel","nofollow"),n(dt,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/Component.ts#L351"),n(dt,"rel","nofollow"),n(vt,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/Component.ts#L43"),n(vt,"rel","nofollow"),n(ft,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/Component.ts#L396"),n(ft,"rel","nofollow"),n(mt,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/Component.ts#L51"),n(mt,"rel","nofollow"),n(_t,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/Component.ts#L44"),n(_t,"rel","nofollow"),n(kt,"href","#b-traverse-the-instance-script-and-module-script-ast"),n(kt,"id","b-traverse-the-instance-script-and-module-script-ast"),n(zs,"class","inline"),n(Ys,"class","inline"),n(Et,"href","#c-traverse-the-template"),n(Et,"id","c-traverse-the-template"),n(gt,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/nodes/Fragment.ts"),n(gt,"rel","nofollow"),n(Vs,"class","inline"),n(qs,"class","inline"),n(Xs,"class","inline"),n(Zs,"class","inline"),n(Ks,"class","inline"),n(wt,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/nodes/Element.ts"),n(wt,"rel","nofollow"),n(St,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/nodes/Element.ts#L280"),n(St,"rel","nofollow"),n(xt,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/nodes/Element.ts#L461"),n(xt,"rel","nofollow"),n(Ct,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/nodes/Element.ts#L647"),n(Ct,"rel","nofollow"),n(Tt,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/nodes/Element.ts#L658"),n(Tt,"rel","nofollow"),n(At,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/nodes/Slot.ts"),n(At,"rel","nofollow"),n(Qs,"class","inline"),n(Ot,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/nodes/EachBlock.ts"),n(Ot,"rel","nofollow"),n(ea,"class","inline"),n(ta,"class","inline"),n(It,"href","#d-traverse-the-instance-script-ast"),n(It,"id","d-traverse-the-instance-script-ast"),n(sa,"class","inline"),n(Rt,"href","#e-update-css-selectors-to-make-style-declarations-component-scope"),n(Rt,"id","e-update-css-selectors-to-make-style-declarations-component-scope"),n(aa,"class","inline"),n(jt,"href","#where-can-i-find-this-in-the-source-code"),n(jt,"id","where-can-i-find-this-in-the-source-code"),n(Mt,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/index.ts#L83-L90"),n(Mt,"rel","nofollow"),n(ra,"class","inline"),n(Ht,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/Component.ts"),n(Ht,"rel","nofollow"),n(Nt,"href","#where-can-i-learn-about-traversing-in-javascript"),n(Nt,"id","where-can-i-learn-about-traversing-in-javascript"),n(oa,"href","/manipulating-ast-with-javascript#traversing-an-ast"),n(Ut,"href","#3-creating-code-blocks-and-fragments"),n(Ut,"id","3-creating-code-blocks-and-fragments"),n(Gr,"type","image/webp"),n(Gr,"srcset",d2+", "+p2+" 2x"),oo(W.src,mh=Du)||n(W,"src",mh),n(W,"srcset",Du+", "+h2+" 2x"),n(W,"loading","lazy"),h(W,"position","absolute"),h(W,"top","0"),h(W,"width","100%"),h(W,"height","100%"),n(W,"alt","Step 3"),h(_e,"display","block"),h(_e,"position","relative"),h(_e,"padding-top","44.490%"),h(_e,"width","100%"),n(na,"class","code-section"),n(ca,"class","inline"),n(ia,"class","inline"),n(ke,"href","https://svelte.dev/docs#svelte_compile"),n(ke,"rel","nofollow"),n(pa,"class","inline"),n(Gt,"href","#dom-renderer"),n(Gt,"id","dom-renderer"),n(Bt,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/render_dom/Renderer.ts#L31"),n(Bt,"rel","nofollow"),n(Ft,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/render_dom/Renderer.ts#L28"),n(Ft,"rel","nofollow"),n($t,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/render_dom/Block.ts"),n($t,"rel","nofollow"),n(ha,"class","inline"),n(da,"href","/compile-svelte-in-your-head-part-1/#create_fragment"),n(va,"href","/compile-svelte-in-your-head-part-2/#ctx"),n(fa,"class","inline"),n(Yt,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/render_dom/wrappers/Fragment.ts"),n(Yt,"rel","nofollow"),n(ua,"class","inline"),n(qt,"href","#ssr-renderer"),n(qt,"id","ssr-renderer"),n(Xt,"href","https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals"),n(Xt,"rel","nofollow"),n(ma,"class","inline"),n(Zt,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/render_ssr/Renderer.ts#L63"),n(Zt,"rel","nofollow"),n(_a,"class","inline"),n(Kt,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/render_ssr/Renderer.ts#L67"),n(Kt,"rel","nofollow"),n(ka,"class","inline"),n(ge,"href","#where-can-i-find-the-renderer-in-the-source-code"),n(ge,"id","where-can-i-find-the-renderer-in-the-source-code"),n(Qt,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/render_dom/Renderer.ts"),n(Qt,"rel","nofollow"),n(es,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/render_ssr/Renderer.ts"),n(es,"rel","nofollow"),n(ts,"href","#4-generate-code"),n(ts,"id","4-generate-code"),n(Vr,"type","image/webp"),n(Vr,"srcset",c2+", "+n2+" 2x"),oo(U.src,_h=Iu)||n(U,"src",_h),n(U,"srcset",Iu+", "+i2+" 2x"),n(U,"loading","lazy"),h(U,"position","absolute"),h(U,"top","0"),h(U,"width","100%"),h(U,"height","100%"),n(U,"alt","Step 4"),h(Se,"display","block"),h(Se,"position","relative"),h(Se,"padding-top","46.890%"),h(Se,"width","100%"),n(Ea,"class","code-section"),n(ya,"class","inline"),n(ga,"class","inline"),n(wa,"class","inline"),n(Sa,"class","inline"),n(ss,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/render_ssr/Renderer.ts#L23-L40"),n(ss,"rel","nofollow"),n(xa,"class","inline"),n(Ca,"class","inline"),n(as,"href","https://github.com/sveltejs/rollup-plugin-svelte"),n(as,"rel","nofollow"),n(rs,"href","https://github.com/sveltejs/svelte-loader"),n(rs,"rel","nofollow"),n(os,"href","#svelte-runtime"),n(os,"id","svelte-runtime"),n(ns,"href","https://github.com/sveltejs/svelte/tree/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/runtime/internal"),n(ns,"rel","nofollow"),n(Ta,"class","inline"),n(Aa,"class","inline"),n(Oa,"class","inline"),n(Ia,"class","inline"),n(Da,"class","inline"),n(La,"class","inline"),n(Ra,"class","inline"),n(ja,"class","inline")},m(c,d){v(c,f,d),e(f,L),e(L,A),e(A,$e),e(f,k),e(f,O),e(O,hs),e(f,Vo),e(f,ze),e(ze,Za),e(Za,qo),e(ze,Xo),e(ze,Ka),e(Ka,Zo),v(c,lo,d),v(c,g,d),e(g,Qa),e(Qa,Ye),e(Ye,Ko),e(g,Qo),e(g,er),e(er,ne),e(ne,vs),e(vs,tr),e(vs,R),e(g,el),e(g,sr),e(sr,tl),e(g,sl),e(g,B),e(B,ar),e(ar,al),e(B,rl),e(B,rr),e(rr,ol),e(B,ll),e(B,or),e(or,nl),e(B,cl),e(B,lr),e(lr,il),e(g,pl),e(g,nr),e(nr,dl),e(g,hl),e(g,fs),fs.innerHTML=Mu,v(c,no,d),v(c,u,d),e(u,cr),e(cr,Ve),e(Ve,vl),e(u,fl),e(u,ir),e(ir,ce),e(ce,us),e(us,pr),e(us,P),e(u,ul),e(u,ms),ms.innerHTML=Hu,e(u,ml),e(u,dr),e(dr,_l),e(u,kl),e(u,ie),e(ie,_s),e(_s,bl),e(_s,ks),e(ks,El),e(ie,yl),e(ie,bs),e(bs,gl),e(bs,Es),e(Es,wl),e(ie,Sl),e(ie,ys),e(ys,xl),e(ys,gs),e(gs,Cl),e(u,Tl),e(u,pe),e(pe,Al),e(pe,ws),e(ws,Ol),e(pe,Il),e(pe,Ss),e(Ss,Dl),e(pe,Ll),e(u,Rl),e(u,I),e(I,Pl),e(I,xs),e(xs,jl),e(I,Ml),e(I,qe),e(qe,Hl),e(I,Nl),e(I,Cs),e(Cs,Wl),e(I,Ul),e(I,Xe),e(Xe,Jl),e(I,Gl),e(u,Bl),e(u,de),e(de,Fl),e(de,Ts),e(Ts,$l),e(de,zl),e(de,As),e(As,Yl),e(de,Vl),e(u,ql),e(u,hr),e(hr,Xl),e(u,Zl),e(u,Os),Os.innerHTML=Nu,e(u,Kl),e(u,he),e(he,Ql),e(he,Ze),e(Ze,en),e(he,tn),e(he,vr),e(vr,sn),e(he,an),v(c,co,d),v(c,xe,d),e(xe,fr),e(fr,Ke),e(Ke,rn),e(xe,on),e(xe,ve),e(ve,ln),e(ve,Qe),e(Qe,nn),e(ve,cn),e(ve,et),e(et,pn),e(ve,dn),v(c,io,d),v(c,Z,d),e(Z,ur),e(ur,tt),e(tt,hn),e(Z,vn),e(Z,st),e(st,fn),e(st,Is),e(Is,un),e(st,mn),e(Z,_n),e(Z,mr),e(mr,kn),v(c,po,d),v(c,j,d),e(j,_r),e(_r,at),e(at,bn),e(j,En),e(j,kr),e(kr,fe),e(fe,Ds),e(Ds,br),e(Ds,M),e(j,yn),e(j,Ls),Ls.innerHTML=Wu,e(j,gn),e(j,Er),e(Er,wn),v(c,ho,d),v(c,K,d),e(K,yr),e(yr,ue),e(ue,Sn),e(ue,Rs),e(Rs,xn),e(ue,Cn),e(K,Tn),e(K,rt),e(rt,An),e(rt,Ps),e(Ps,On),e(rt,In),e(K,Dn),e(K,b),e(b,js),e(js,Ln),e(js,ot),e(ot,Ms),e(Ms,Rn),e(b,Pn),e(b,Ce),e(Ce,jn),e(Ce,lt),e(lt,Hs),e(Hs,Mn),e(Ce,Hn),e(Ce,nt),e(nt,Ns),e(Ns,Nn),e(b,Wn),e(b,Ws),e(Ws,Un),e(Ws,ct),e(ct,Us),e(Us,Jn),e(b,Gn),e(b,Js),e(Js,Bn),e(Js,it),e(it,Gs),e(Gs,Fn),e(b,$n),e(b,Bs),e(Bs,zn),e(Bs,pt),e(pt,Fs),e(Fs,Yn),e(b,Vn),e(b,$s),e($s,dt),e(dt,qn),e($s,Xn),e(b,Zn),e(b,ht),e(ht,vt),e(vt,Kn),e(ht,Qn),e(ht,ft),e(ft,ec),e(b,tc),e(b,ut),e(ut,mt),e(mt,sc),e(ut,ac),e(ut,_t),e(_t,rc),v(c,vo,d),v(c,Q,d),e(Q,gr),e(gr,kt),e(kt,oc),e(Q,lc),e(Q,Te),e(Te,zs),e(zs,nc),e(Te,cc),e(Te,wr),e(wr,ic),e(Te,pc),e(Q,dc),e(Q,bt),e(bt,hc),e(bt,Ys),e(Ys,vc),e(bt,fc),v(c,fo,d),v(c,m,d),e(m,Sr),e(Sr,Et),e(Et,uc),e(m,mc),e(m,yt),e(yt,_c),e(yt,gt),e(gt,kc),e(yt,bc),e(m,Ec),e(m,xr),e(xr,yc),e(m,gc),e(m,Cr),e(Cr,Tr),e(Tr,wc),e(m,Sc),e(m,me),e(me,xc),e(me,Vs),e(Vs,Cc),e(me,Tc),e(me,qs),e(qs,Ac),e(me,Oc),e(m,Ic),e(m,Ar),e(Ar,Or),e(Or,Dc),e(m,Lc),e(m,ee),e(ee,Xs),e(Xs,Rc),e(ee,Pc),e(ee,Zs),e(Zs,jc),e(ee,Mc),e(ee,Ks),e(Ks,Hc),e(ee,Nc),e(m,Wc),e(m,Ir),e(Ir,Uc),e(m,Jc),e(m,F),e(F,x),e(x,wt),e(wt,Gc),e(x,Bc),e(x,St),e(St,Fc),e(x,$c),e(x,xt),e(xt,zc),e(x,Yc),e(x,Ct),e(Ct,Vc),e(x,qc),e(x,Tt),e(Tt,Xc),e(x,Zc),e(F,Kc),e(F,Ae),e(Ae,At),e(At,Qc),e(Ae,ei),e(Ae,Qs),e(Qs,ti),e(Ae,si),e(F,ai),e(F,te),e(te,Ot),e(Ot,ri),e(te,oi),e(te,ea),e(ea,li),e(te,ni),e(te,ta),e(ta,ci),e(te,ii),e(F,pi),e(F,Dr),e(Dr,di),v(c,uo,d),v(c,H,d),e(H,Lr),e(Lr,It),e(It,hi),e(H,vi),e(H,Rr),e(Rr,fi),e(H,ui),e(H,Pr),e(Pr,mi),e(H,_i),e(H,Dt),e(Dt,Lt),e(Lt,ki),e(Lt,sa),e(sa,bi),e(Lt,Ei),e(Dt,yi),e(Dt,jr),e(jr,gi),v(c,mo,d),v(c,se,d),e(se,Mr),e(Mr,Rt),e(Rt,wi),e(se,Si),e(se,Pt),e(Pt,xi),e(Pt,aa),e(aa,Ci),e(Pt,Ti),e(se,Ai),e(se,Hr),e(Hr,Oi),v(c,_o,d),v(c,Oe,d),e(Oe,Nr),e(Nr,jt),e(jt,Ii),e(Oe,Di),e(Oe,$),e($,Li),e($,Mt),e(Mt,Ri),e($,Pi),e($,ra),e(ra,ji),e($,Mi),e($,Ht),e(Ht,Hi),e($,Ni),v(c,ko,d),v(c,Ie,d),e(Ie,Wr),e(Wr,Nt),e(Nt,Wi),e(Ie,Ui),e(Ie,Wt),e(Wt,Ji),e(Wt,oa),e(oa,Gi),e(Wt,Bi),v(c,bo,d),v(c,N,d),e(N,Ur),e(Ur,Ut),e(Ut,Fi),e(N,$i),e(N,Jr),e(Jr,_e),e(_e,la),e(la,Gr),e(la,W),e(N,zi),e(N,na),na.innerHTML=Uu,e(N,Yi),e(N,z),e(z,Vi),e(z,ca),e(ca,qi),e(z,Xi),e(z,Jt),e(Jt,Zi),e(Jt,ke),e(ke,Ki),e(ke,ia),e(ia,Qi),e(ke,ep),e(Jt,tp),e(z,sp),e(z,pa),e(pa,ap),e(z,rp),v(c,Eo,d),v(c,w,d),e(w,Br),e(Br,Gt),e(Gt,op),e(w,lp),e(w,be),e(be,np),e(be,Bt),e(Bt,cp),e(be,ip),e(be,Ft),e(Ft,pp),e(be,dp),e(w,hp),e(w,Ee),e(Ee,vp),e(Ee,$t),e($t,fp),e(Ee,up),e(Ee,da),e(da,ha),e(ha,mp),e(Ee,_p),e(w,kp),e(w,ye),e(ye,bp),e(ye,va),e(va,Ep),e(ye,yp),e(ye,fa),e(fa,gp),e(ye,wp),e(w,Sp),e(w,zt),e(zt,xp),e(zt,Yt),e(Yt,Cp),e(zt,Tp),e(w,Ap),e(w,Vt),e(Vt,Op),e(Vt,ua),e(ua,Ip),e(Vt,Dp),v(c,yo,d),v(c,De,d),e(De,Fr),e(Fr,qt),e(qt,Lp),e(De,Rp),e(De,Y),e(Y,Pp),e(Y,Xt),e(Xt,jp),e(Y,Mp),e(Y,Zt),e(Zt,ma),e(ma,Hp),e(Y,Np),e(Y,Kt),e(Kt,_a),e(_a,Wp),e(Y,Up),v(c,go,d),v(c,Le,d),e(Le,$r),e($r,ge),e(ge,Jp),e(ge,ka),e(ka,Gp),e(ge,Bp),e(Le,Fp),e(Le,we),e(we,$p),e(we,Qt),e(Qt,zp),e(we,Yp),e(we,es),e(es,Vp),e(we,qp),v(c,wo,d),v(c,E,d),e(E,zr),e(zr,ts),e(ts,Xp),e(E,Zp),e(E,Yr),e(Yr,Se),e(Se,ba),e(ba,Vr),e(ba,U),e(E,Kp),e(E,Ea),Ea.innerHTML=Ju,e(E,Qp),e(E,qr),e(qr,ed),e(E,td),e(E,C),e(C,Xr),e(Xr,sd),e(C,ad),e(C,ya),e(ya,rd),e(C,od),e(C,ga),e(ga,ld),e(C,nd),e(C,wa),e(wa,cd),e(C,id),e(C,Sa),e(Sa,pd),e(C,dd),e(E,hd),e(E,Re),e(Re,Zr),e(Zr,vd),e(Re,fd),e(Re,ss),e(ss,ud),e(Re,md),e(E,_d),e(E,D),e(D,kd),e(D,xa),e(xa,bd),e(D,Ed),e(D,Ca),e(Ca,yd),e(D,gd),e(D,as),e(as,wd),e(D,Sd),e(D,rs),e(rs,xd),e(D,Cd),v(c,So,d),v(c,ae,d),e(ae,Kr),e(Kr,os),e(os,Td),e(ae,Ad),e(ae,ls),e(ls,Od),e(ls,ns),e(ns,Id),e(ls,Dd),e(ae,Ld),e(ae,V),e(V,re),e(re,Rd),e(re,Ta),e(Ta,Pd),e(re,jd),e(re,Aa),e(Aa,Md),e(re,Hd),e(re,Oa),e(Oa,Nd),e(V,Wd),e(V,Pe),e(Pe,Ud),e(Pe,Ia),e(Ia,Jd),e(Pe,Gd),e(Pe,Da),e(Da,Bd),e(V,Fd),e(V,je),e(je,$d),e(je,La),e(La,zd),e(je,Yd),e(je,Ra),e(Ra,Vd),e(V,qd),e(V,Pa),e(Pa,Xd),e(Pa,ja),e(ja,Zd)},p:o2,d(c){c&&t(f),c&&t(lo),c&&t(g),c&&t(no),c&&t(u),c&&t(co),c&&t(xe),c&&t(io),c&&t(Z),c&&t(po),c&&t(j),c&&t(ho),c&&t(K),c&&t(vo),c&&t(Q),c&&t(fo),c&&t(m),c&&t(uo),c&&t(H),c&&t(mo),c&&t(se),c&&t(_o),c&&t(Oe),c&&t(ko),c&&t(Ie),c&&t(bo),c&&t(N),c&&t(Eo),c&&t(w),c&&t(yo),c&&t(De),c&&t(go),c&&t(Le),c&&t(wo),c&&t(E),c&&t(So),c&&t(ae)}}}function S2(ds){let f,L;const A=[ds[0],ju];let $e={$$slots:{default:[w2]},$$scope:{ctx:ds}};for(let k=0;k<A.length;k+=1)$e=hh($e,A[k]);return f=new l2({props:$e}),{c(){Zu(f.$$.fragment)},l(k){Ku(f.$$.fragment,k)},m(k,O){Qu(f,k,O),L=!0},p(k,[O]){const hs=O&1?e2(A,[O&1&&Au(k[0]),O&0&&Au(ju)]):{};O&2&&(hs.$$scope={dirty:O,ctx:k}),f.$set(hs)},i(k){L||(t2(f.$$.fragment,k),L=!0)},o(k){s2(f.$$.fragment,k),L=!1},d(k){a2(f,k)}}}const ju={title:"The Svelte Compiler Handbook",date:"2020-04-05T08:00:00Z",tags:["Svelte","JavaScript","compiler"],description:"The Svelte compilation process can be broken down into 4-steps, 1) parsing source code into AST, 2) tracking references and dependencies, 3) creating code blocks and fragments, and 4) generate code.",label:"blog",tableOfContents:[{link:"who-is-this-for",title:"Who is this for?"},{link:"overview",title:"Overview"},{link:"1-parsing-source-code-into-ast",title:"1. Parsing source code into AST",nested:[{link:"where-can-i-find-the-parser-in-the-source-code",title:"Where can I find the parser in the source code?"},{link:"where-can-i-learn-about-parsing-in-javascript",title:"Where can I learn about parsing in JavaScript?"}]},{link:"2-tracking-references-and-dependencies",title:"2. Tracking references and dependencies",nested:[{link:"a-svelte-creates-a-component-instance",title:"a. Svelte creates a  `Component`  instance."},{link:"b-traverse-the-instance-script-and-module-script-ast",title:"b. Traverse the instance script and module script AST"},{link:"c-traverse-the-template",title:"c. Traverse the template"},{link:"d-traverse-the-instance-script-ast",title:"d. Traverse the instance script AST"},{link:"e-update-css-selectors-to-make-style-declarations-component-scope",title:"e. Update CSS selectors to make style declarations component scope"},{link:"where-can-i-find-this-in-the-source-code",title:"Where can I find this in the source code?"},{link:"where-can-i-learn-about-traversing-in-javascript",title:"Where can I learn about traversing in JavaScript?"}]},{link:"3-creating-code-blocks-and-fragments",title:"3. Creating code blocks and fragments",nested:[{link:"dom-renderer",title:"DOM Renderer"},{link:"ssr-renderer",title:"SSR Renderer"},{link:"where-can-i-find-the-renderer-in-the-source-code",title:"Where can I find the  `Renderer`  in the source code?"}]},{link:"4-generate-code",title:"4. Generate code"},{link:"svelte-runtime",title:"Svelte runtime"}]};function x2(ds,f,L){return r2("blog",{image:g2}),ds.$$set=A=>{L(0,f=hh(hh({},f),Ou(A)))},f=Ou(f),[f]}class D2 extends Vu{constructor(f){super();qu(this,f,x2,S2,Xu,{})}}export{D2 as default,ju as metadata};
