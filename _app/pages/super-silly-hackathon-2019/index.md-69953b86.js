import{S as py,i as cy,s as ky,C as xc,w as hy,x as vy,y as yy,z as dy,A as ov,q as uy,o as xy,B as fy,r as my,Y as tv,e as t,t as n,k as p,c as a,a as e,h as l,d as o,m as c,b as r,X as ys,f as k,g as y,H as s,J as _y}from"../../chunks/vendor-da4388d4.js";import{B as wy}from"../../chunks/BlogLayout-14cfab6f.js";import{_ as gy}from"../../chunks/twitter-card-image-a57df29d.js";import"../../chunks/stores-1fad7c36.js";import"../../chunks/ldjson-b0805387.js";/* empty css                                */var by="https://lihautan.com/_app/assets/refresh-ffb22e75.webp",Ey="https://lihautan.com/_app/assets/refresh-e4c3db8e.webp",Iy="https://lihautan.com/_app/assets/refresh-5b7fb572.png",av="https://lihautan.com/_app/assets/refresh-1fef66a8.png",Sy="https://lihautan.com/_app/assets/hate-c64ff38c.webp",Ty="https://lihautan.com/_app/assets/hate-7cdd16bc.webp",Cy="https://lihautan.com/_app/assets/hate-99d94570.png",ev="https://lihautan.com/_app/assets/hate-1ca7c6ad.png",Py="https://lihautan.com/_app/assets/eat-sprite-c89cd866.webp",qy="https://lihautan.com/_app/assets/eat-sprite-4786f77b.webp",Dy="https://lihautan.com/_app/assets/eat-sprite-7ec5cea2.png",nv="https://lihautan.com/_app/assets/eat-sprite-8b5fd122.png",Ay="https://lihautan.com/_app/assets/shift-left-496782a2.gif",lv="https://lihautan.com/_app/assets/shift-left-8ec24bd2.gif",Oy="https://lihautan.com/_app/assets/rest-sprite-3eb61bb5.webp",Hy="https://lihautan.com/_app/assets/rest-sprite-1308274b.webp",My="https://lihautan.com/_app/assets/rest-sprite-286e59e0.png",rv="https://lihautan.com/_app/assets/rest-sprite-81836e69.png",Ly="https://lihautan.com/_app/assets/annihilate-1824cba4.gif",iv="https://lihautan.com/_app/assets/annihilate-06f9fae6.gif",Ny="https://lihautan.com/_app/assets/eat-ac559795.gif",pv="https://lihautan.com/_app/assets/eat-3f80164a.gif",Vy="https://lihautan.com/_app/assets/evade-4286c505.gif",cv="https://lihautan.com/_app/assets/evade-b00633db.gif",Ry="https://lihautan.com/_app/assets/rest-52101f8d.gif",kv="https://lihautan.com/_app/assets/rest-f9f39938.gif";function Gy(To){let _,$,D,Ss,b,M,L,ds,kn,Co,hn,vn,Po,yn,re,us,dn,Ts,un,xn,ie,qo,K,N,fc,pe,xs,Jt,Cs,fn,mn,Ps,_n,qs,wn,gn,ce,Do,Yt,Ds,bn,ke,fs,Kt,As,En,In,Zt,Z,V,mc,he,ms,sa,Os,Sn,Tn,oa,ss,R,_c,ve,_s,ta,Hs,Cn,Pn,aa,os,G,wc,ye,Ao,ea,Ms,qn,de,E,na,Ls,Dn,An,Ns,On,Vs,Hn,Mn,Ln,Rs,Nn,Oo,Vn,Rn,Gn,Ho,vv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">&quot;manifest_version&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">2</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">&quot;name&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;Super Silly Hackathon&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">&quot;description&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;Super Silly Hackathon&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">&quot;version&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;1.0.0&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">&quot;content_scripts&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> [</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-keyword)">&quot;matches&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> [</span><span style="color: var(--shiki-token-string-expression)">&quot;&lt;all_urls&gt;&quot;</span><span style="color: var(--shiki-color-text)">]</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-keyword)">&quot;js&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> [</span><span style="color: var(--shiki-token-string-expression)">&quot;content.js&quot;</span><span style="color: var(--shiki-color-text)">]</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-keyword)">&quot;css&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> [</span><span style="color: var(--shiki-token-string-expression)">&quot;content-ext.css&quot;</span><span style="color: var(--shiki-color-text)">]</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-keyword)">&quot;run_at&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;document_start&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-keyword)">&quot;all_frames&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">true</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  ]</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Un,Gs,jn,Mo,Bn,zn,Xn,Lo,yv=`<div class="filename">content.js</div><pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">onload</span><span style="color: var(--shiki-color-text)">() &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">document</span><span style="color: var(--shiki-token-function)">.createElement</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;div&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">updatePosition</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">100</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">100</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">classList</span><span style="color: var(--shiki-token-function)">.add</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;ssh-pet&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">document</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">body</span><span style="color: var(--shiki-token-function)">.appendChild</span><span style="color: var(--shiki-color-text)">(pet);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">window</span><span style="color: var(--shiki-token-function)">.addEventListener</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;load&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> onload);</span></span></code></pre>`,$n,No,dv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-comment)">/* filename: content.css */</span></span>
<span class="line"><span style="color: var(--shiki-token-function)">.ssh-pet</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">height</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">30</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">width</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">30</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">position</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">fixed</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">z-index</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1000</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">background-image</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">url</span><span style="color: var(--shiki-token-constant)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;/images/rest.png&#39;</span><span style="color: var(--shiki-token-constant)">)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">background-size</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">30</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-token-constant)"> 30</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">background-position</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0 0</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Fn,Us,Qn,Vo,Wn,Jn,ue,ws,la,F,Yn,Ro,Kn,Zn,Go,sl,ol,Uo,uv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">// ...</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">&quot;web_accessible_resources&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> [</span><span style="color: var(--shiki-token-string-expression)">&quot;images/*&quot;</span><span style="color: var(--shiki-color-text)">]</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,xe,gs,ra,ts,tl,jo,al,el,nl,Bo,xv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-function)">.ssh-pet</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">/* ... */</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">background-image</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">url</span><span style="color: var(--shiki-token-constant)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;chrome-extension://__MSG_@@extension_id__/images/rest.png&#39;</span><span style="color: var(--shiki-token-constant)">)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,fe,x,ia,js,ll,rl,pa,il,pl,Bs,cl,ca,kl,hl,vl,ka,ha,yl,dl,zs,ul,Xs,xl,fl,ml,va,as,zo,ya,A,gc,_l,Xo,fv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">@keyframes</span><span style="color: var(--shiki-color-text)"> ssh-pet-rest &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  0% &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">background-position-x</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  100% &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">background-position-x</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">-90</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-function)">.ssh-pet.rest</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">background-image</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">url</span><span style="color: var(--shiki-token-constant)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;chrome-extension://__MSG_@@extension_id__/images/rest-sprite.png&#39;</span><span style="color: var(--shiki-token-constant)">)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">background-repeat</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">repeat-x</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">background-size</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">90</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-token-constant)"> 30</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">background-position</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0 0</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">animation</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ssh-pet-rest 0.2</span><span style="color: var(--shiki-token-keyword)">s</span><span style="color: var(--shiki-token-constant)"> </span><span style="color: var(--shiki-token-function)">steps</span><span style="color: var(--shiki-token-constant)">(3)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,wl,$s,gl,$o,bl,El,Il,Fo,mv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">classList</span><span style="color: var(--shiki-token-function)">.add</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;rest&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-token-comment)">// when the animation finished, remove the class</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">onanimationend</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> () </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-token-function)">.removeEventListener</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;animationend&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> onanimationend);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">classList</span><span style="color: var(--shiki-token-function)">.remove</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;rest&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;;</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-token-function)">.addEventListener</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;animationend&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> onanimationend);</span></span></code></pre>`,Sl,da,Tl,Cl,Qo,_v=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">doSomething</span><span style="color: var(--shiki-color-text)">(random) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">switch</span><span style="color: var(--shiki-color-text)"> (random) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">case</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)">:</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// ...</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">default</span><span style="color: var(--shiki-color-text)">:</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">animateRest</span><span style="color: var(--shiki-color-text)">();</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">scheduleSomething</span><span style="color: var(--shiki-color-text)">() &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">setTimeout</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> () </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">choices</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">10</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// cheat to do Math.floor</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">random</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">~~</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">Math</span><span style="color: var(--shiki-token-function)">.random</span><span style="color: var(--shiki-color-text)">() </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> choices);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">doSomething</span><span style="color: var(--shiki-color-text)">(random);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">scheduleSomething</span><span style="color: var(--shiki-color-text)">();</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">800</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">+</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">Math</span><span style="color: var(--shiki-token-function)">.random</span><span style="color: var(--shiki-color-text)">() </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1000</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-comment)">// make animation promise based</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">animateRest</span><span style="color: var(--shiki-color-text)">() &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">animateClass</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;rest&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">animateClass</span><span style="color: var(--shiki-color-text)">(cls) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-color-text)">(resolve </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">classList</span><span style="color: var(--shiki-token-function)">.add</span><span style="color: var(--shiki-color-text)">(cls);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">onanimationend</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> () </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-token-function)">.removeEventListener</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;animationend&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> onanimationend);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">classList</span><span style="color: var(--shiki-token-function)">.remove</span><span style="color: var(--shiki-color-text)">(cls);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &#125;;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-token-function)">.addEventListener</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;animationend&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> onanimationend);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Pl,Fs,ql,Wo,Dl,Al,me,u,ua,Qs,Ol,Hl,xa,Ml,Ll,fa,es,U,bc,Nl,Ws,Vl,Jo,Rl,Gl,Ul,Yo,wv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line dim"><span style="color: var(--shiki-token-keyword)">@keyframes</span><span style="color: var(--shiki-color-text)"> ssh-pet-shift-left &#123;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">  0% &#123;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">background-position-x</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line highlight"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">transform</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">translateX</span><span style="color: var(--shiki-token-constant)">(0)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">  100% &#123;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">background-position-x</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">-240</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line highlight"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">transform</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">translateX</span><span style="color: var(--shiki-token-constant)">(-30</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-token-constant)">)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line dim"></span>
<span class="line dim"><span style="color: var(--shiki-token-function)">.ssh-pet.shift-left</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">background-image</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">url</span><span style="color: var(--shiki-token-constant)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;/images/shift-left-sprite.png&#39;</span><span style="color: var(--shiki-token-constant)">)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">background-repeat</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">repeat-x</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">background-size</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">240</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-token-constant)"> 30</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">background-position</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0 0</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">animation</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ssh-pet-shift-left 0.8</span><span style="color: var(--shiki-token-keyword)">s</span><span style="color: var(--shiki-token-constant)"> </span><span style="color: var(--shiki-token-function)">steps</span><span style="color: var(--shiki-token-constant)">(8)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,jl,ma,Bl,zl,Ko,gv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">position</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> &#123; x</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> y; </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> &#125;;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">offsetPosition</span><span style="color: var(--shiki-color-text)">(x</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> y) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">updatePosition</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">position</span><span style="color: var(--shiki-color-text)">.x </span><span style="color: var(--shiki-token-keyword)">+</span><span style="color: var(--shiki-color-text)"> x</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">position</span><span style="color: var(--shiki-color-text)">.y </span><span style="color: var(--shiki-token-keyword)">+</span><span style="color: var(--shiki-color-text)"> y);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">updatePosition</span><span style="color: var(--shiki-color-text)">(x</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> y) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">style</span><span style="color: var(--shiki-color-text)">.left </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> (</span><span style="color: var(--shiki-token-constant)">position</span><span style="color: var(--shiki-color-text)">.x </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> x) </span><span style="color: var(--shiki-token-keyword)">+</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;px&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">style</span><span style="color: var(--shiki-color-text)">.top </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> (</span><span style="color: var(--shiki-token-constant)">position</span><span style="color: var(--shiki-color-text)">.y </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> y) </span><span style="color: var(--shiki-token-keyword)">+</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;px&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Xl,_a,$l,Fl,Zo,bv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">animateShiftLeft</span><span style="color: var(--shiki-color-text)">() &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">animateClass</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#96;shift-left&#96;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">offsetPosition</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-keyword)">-</span><span style="color: var(--shiki-token-constant)">30</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Ql,O,Wl,st,Jl,Yl,ot,Kl,Zl,tt,sr,or,at,tr,ar,er,Js,nr,et,lr,rr,ir,nt,Ev=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-token-function)">.addEventListener</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;mousemove&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> event </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> (</span><span style="color: var(--shiki-token-keyword)">!</span><span style="color: var(--shiki-color-text)">animating) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    animating </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">shiftAway</span><span style="color: var(--shiki-color-text)">();</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    animating </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">false</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;);</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-comment)">// edge avoidance shifting</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">shiftAway</span><span style="color: var(--shiki-color-text)">() &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> (</span><span style="color: var(--shiki-token-constant)">position</span><span style="color: var(--shiki-color-text)">.x </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">40</span><span style="color: var(--shiki-color-text)">) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">animateShiftRight</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125; </span><span style="color: var(--shiki-token-keyword)">else</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> (</span><span style="color: var(--shiki-token-constant)">position</span><span style="color: var(--shiki-color-text)">.x </span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">window</span><span style="color: var(--shiki-color-text)">.innerWidth </span><span style="color: var(--shiki-token-keyword)">-</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">40</span><span style="color: var(--shiki-color-text)">) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">animateShiftLeft</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125; </span><span style="color: var(--shiki-token-keyword)">else</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> (</span><span style="color: var(--shiki-token-constant)">Math</span><span style="color: var(--shiki-token-function)">.random</span><span style="color: var(--shiki-color-text)">() </span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0.5</span><span style="color: var(--shiki-color-text)">) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">animateShiftLeft</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125; </span><span style="color: var(--shiki-token-keyword)">else</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">animateShiftRight</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,pr,Ys,cr,lt,kr,hr,vr,wa,yr,_e,v,ga,Ks,dr,ur,ns,xr,rt,fr,mr,it,_r,wr,gr,pt,Iv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-constant)">document</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">body</span><span style="color: var(--shiki-token-function)">.addEventListener</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;input&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> event </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">debounceByElement</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">event</span><span style="color: var(--shiki-color-text)">.target</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> eatInputValue</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1000</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;);</span></span></code></pre>`,br,ls,Er,ct,Ir,Sr,kt,Tr,Cr,Pr,ba,qr,Dr,ht,Sv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">eatInputValue</span><span style="color: var(--shiki-color-text)">(elem) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">elem</span><span style="color: var(--shiki-color-text)">.value </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">elem</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">value</span><span style="color: var(--shiki-token-function)">.slice</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">debounceByElement</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">event</span><span style="color: var(--shiki-color-text)">.target</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> eatInputValue</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1000</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Ar,Ea,Or,Hr,vt,Tv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line dim"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">eatInputValue</span><span style="color: var(--shiki-color-text)">(elem) &#123;</span></span>
<span class="line highlight"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">// remember selection position</span></span>
<span class="line highlight"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">start</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">elem</span><span style="color: var(--shiki-color-text)">.selectionStart</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line highlight"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">end</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">elem</span><span style="color: var(--shiki-color-text)">.selectionEnd;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">elem</span><span style="color: var(--shiki-color-text)">.value </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">elem</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">value</span><span style="color: var(--shiki-token-function)">.slice</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line highlight"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">// restore selection position</span></span>
<span class="line highlight"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">elem</span><span style="color: var(--shiki-token-function)">.setSelectionRange</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">Math</span><span style="color: var(--shiki-token-function)">.max</span><span style="color: var(--shiki-color-text)">(start </span><span style="color: var(--shiki-token-keyword)">-</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">Math</span><span style="color: var(--shiki-token-function)">.max</span><span style="color: var(--shiki-color-text)">(end </span><span style="color: var(--shiki-token-keyword)">-</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)">));</span></span>
<span class="line dim"></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">debounceByElement</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">event</span><span style="color: var(--shiki-color-text)">.target</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> eatInputValue</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1000</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Mr,Ia,Lr,Nr,Sa,rs,yt,Ta,H,Ec,Vr,X,Rr,Ca,Gr,Ur,Pa,jr,Br,qa,zr,Xr,$r,dt,Cv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line dim"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">eatInputValue</span><span style="color: var(--shiki-color-text)">(elem) &#123;</span></span>
<span class="line highlight"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">animateClass</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;eat&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line dim"></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">start</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">elem</span><span style="color: var(--shiki-color-text)">.selectionStart</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">end</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">elem</span><span style="color: var(--shiki-color-text)">.selectionEnd;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">elem</span><span style="color: var(--shiki-color-text)">.value </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">elem</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">value</span><span style="color: var(--shiki-token-function)">.slice</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">elem</span><span style="color: var(--shiki-token-function)">.setSelectionRange</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">Math</span><span style="color: var(--shiki-token-function)">.max</span><span style="color: var(--shiki-color-text)">(start </span><span style="color: var(--shiki-token-keyword)">-</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">Math</span><span style="color: var(--shiki-token-function)">.max</span><span style="color: var(--shiki-color-text)">(end </span><span style="color: var(--shiki-token-keyword)">-</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)">));</span></span>
<span class="line highlight"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">animateClass</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;digest&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line dim"></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">debounceByElement</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">event</span><span style="color: var(--shiki-color-text)">.target</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> eatInputValue</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1000</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Fr,Da,Qr,Wr,ut,Pv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">@keyframes</span><span style="color: var(--shiki-color-text)"> ssh-pet-eat-move &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  0%,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  30% &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">transform</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">translateX</span><span style="color: var(--shiki-token-constant)">(0)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  50% &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">transform</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">translateX</span><span style="color: var(--shiki-token-constant)">(4</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-token-constant)">)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  100% &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">transform</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">translateX</span><span style="color: var(--shiki-token-constant)">(0)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Jr,Aa,Yr,Kr,Oa,Zr,si,Zs,oi,Ha,ti,ai,ei,xt,qv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">animateTeleport</span><span style="color: var(--shiki-color-text)">(x</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> y) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">animateClass</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;disappear&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">style</span><span style="color: var(--shiki-color-text)">.opacity </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">updatePosition</span><span style="color: var(--shiki-color-text)">(x</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> y);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">style</span><span style="color: var(--shiki-color-text)">.opacity </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">100</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">animateClass</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;reappear&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,ni,so,li,oo,ri,ii,pi,ft,Dv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">leftSideOf</span><span style="color: var(--shiki-color-text)">(elem) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> &#123; </span><span style="color: var(--shiki-token-constant)">x</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">y</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">height</span><span style="color: var(--shiki-color-text)"> &#125; </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">elem</span><span style="color: var(--shiki-token-function)">.getBoundingClientRect</span><span style="color: var(--shiki-color-text)">();</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">to_x</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> x </span><span style="color: var(--shiki-token-keyword)">-</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">size</span><span style="color: var(--shiki-color-text)">.width </span><span style="color: var(--shiki-token-keyword)">+</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">paddingLeft</span><span style="color: var(--shiki-color-text)">(elem);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">to_y</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> y </span><span style="color: var(--shiki-token-keyword)">+</span><span style="color: var(--shiki-color-text)"> height </span><span style="color: var(--shiki-token-keyword)">/</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">2</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">-</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">size</span><span style="color: var(--shiki-color-text)">.height </span><span style="color: var(--shiki-token-keyword)">/</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">2</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> [to_x</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> to_y];</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">paddingLeft</span><span style="color: var(--shiki-color-text)">(elem) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> (</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">Number</span><span style="color: var(--shiki-color-text)">(</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      window</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-function)">.getComputedStyle</span><span style="color: var(--shiki-color-text)">(elem)</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-function)">.getPropertyValue</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;padding-left&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-function)">.replace</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">/px</span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-token-string-expression)">r</span><span style="color: var(--shiki-token-keyword)">?</span><span style="color: var(--shiki-token-string-expression)">em/</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    ) </span><span style="color: var(--shiki-token-keyword)">||</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  );</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,ci,Ma,ki,we,f,La,to,hi,vi,Na,yi,di,Va,is,mt,Ra,j,Ic,ui,ao,xi,eo,fi,mi,_i,_t,Av=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">buttons</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">document</span><span style="color: var(--shiki-token-function)">.querySelectorAll</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;button, input[type=&quot;submit&quot;], [role=&quot;button&quot;]&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">buttons</span><span style="color: var(--shiki-token-function)">.forEach</span><span style="color: var(--shiki-color-text)">(button </span><span style="color: var(--shiki-token-keyword)">=&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">button</span><span style="color: var(--shiki-token-function)">.addEventListener</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;mousemove&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> mouseMove)</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">);</span></span></code></pre>`,wi,Ga,gi,bi,wt,Ov=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">removeTheElement</span><span style="color: var(--shiki-color-text)">(elem) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> (animating) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">  animating </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">classList</span><span style="color: var(--shiki-token-function)">.add</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;hate&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">timeout</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">400</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">elem</span><span style="color: var(--shiki-token-function)">.removeEventListener</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;mousemove&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> mouseMove);</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">animateClass</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;item-disappearing&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> elem);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">elem</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">style</span><span style="color: var(--shiki-color-text)">.visibility </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;hidden&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">classList</span><span style="color: var(--shiki-token-function)">.remove</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;hate&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  animating </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">false</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Ei,ps,Ii,gt,Si,Ti,bt,Ci,Pi,qi,Ua,Di,Ai,Et,Hv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">@keyframes</span><span style="color: var(--shiki-color-text)"> hating &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  0% &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">transform</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">scale</span><span style="color: var(--shiki-token-constant)">(1.1) </span><span style="color: var(--shiki-token-function)">translateX</span><span style="color: var(--shiki-token-constant)">(-2</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-token-constant)">)</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  50% &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">transform</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">scale</span><span style="color: var(--shiki-token-constant)">(1.1) </span><span style="color: var(--shiki-token-function)">translateX</span><span style="color: var(--shiki-token-constant)">(2</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-token-constant)">)</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  100% &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">transform</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">scale</span><span style="color: var(--shiki-token-constant)">(1.1) </span><span style="color: var(--shiki-token-function)">translateX</span><span style="color: var(--shiki-token-constant)">(-2</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-token-constant)">)</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Oi,no,Hi,It,Mi,Li,Ni,St,Mv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">@keyframes</span><span style="color: var(--shiki-color-text)"> item-disappearing &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  0% &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">filter</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">blur</span><span style="color: var(--shiki-token-constant)">(0</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-token-constant)">)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  80% &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">opacity</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  100% &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">filter</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">blur</span><span style="color: var(--shiki-token-constant)">(8</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-token-constant)">)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">transform</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">scale</span><span style="color: var(--shiki-token-constant)">(1.5)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">opacity</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,ge,Tt,ja,lo,Vi,be,Q,Ba,ro,Ri,Gi,cs,Ui,Ct,ji,Bi,Pt,zi,Xi,$i,io,za,Fi,Qi,Xa,Wi,Ee,C,$a,po,Ji,Yi,co,Ki,qt,Zi,sp,op,Fa,ks,Dt,Qa,B,Sc,tp,Wa,ap,ep,At,Lv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">html</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">link</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">rel</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;stylesheet&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">type</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;text/css&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">href</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;content.css&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">body</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &lt;</span><span style="color: var(--shiki-token-string-expression)">script</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">src</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;content.js&quot;</span><span style="color: var(--shiki-color-text)">&gt;&lt;/</span><span style="color: var(--shiki-token-string-expression)">script</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;/</span><span style="color: var(--shiki-token-string-expression)">body</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">html</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,Ie,I,Ja,ko,np,lp,ho,rp,Ot,ip,pp,cp,vo,kp,Ht,hp,vp,yp,hs,dp,Mt,up,xp,Lt,fp,mp,_p,yo,wp,uo,gp,bp,Ep,Nt,Nv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">fs</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;fs&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">path</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;path&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">postcss</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;postcss&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">input</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">path</span><span style="color: var(--shiki-token-function)">.join</span><span style="color: var(--shiki-color-text)">(__dirname</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;../content.css&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">output</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">path</span><span style="color: var(--shiki-token-function)">.join</span><span style="color: var(--shiki-color-text)">(__dirname</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;../content-ext.css&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-comment)">// watch when file change</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">fs</span><span style="color: var(--shiki-token-function)">.watchFile</span><span style="color: var(--shiki-color-text)">(input</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> () </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">css</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">fs</span><span style="color: var(--shiki-token-function)">.readFileSync</span><span style="color: var(--shiki-color-text)">(input</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;utf-8&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">// NOTE: &#96;from: undefined&#96; to stop PostCSS complain about sourcemap</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">postcss</span><span style="color: var(--shiki-color-text)">([replaceUrl])</span><span style="color: var(--shiki-token-function)">.process</span><span style="color: var(--shiki-color-text)">(css</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> &#123; from</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">undefined</span><span style="color: var(--shiki-color-text)"> &#125;)</span><span style="color: var(--shiki-token-function)">.then</span><span style="color: var(--shiki-color-text)">((result) </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">fs</span><span style="color: var(--shiki-token-function)">.writeFileSync</span><span style="color: var(--shiki-color-text)">(output</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">result</span><span style="color: var(--shiki-color-text)">.css</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;utf-8&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;);</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">replaceUrl</span><span style="color: var(--shiki-color-text)">(root) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">root</span><span style="color: var(--shiki-token-function)">.walkDecls</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;background-image&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> decl </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">decl</span><span style="color: var(--shiki-color-text)">.value </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">decl</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">value</span><span style="color: var(--shiki-token-function)">.replace</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">/url(&#39;(.</span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-token-string-expression)">)&#39;)/</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;url(&#39;chrome-extension://__MSG_@@extension_id__$1&#39;)&quot;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Ip,vs,Sp,Vt,Tp,Cp,Rt,Pp,qp,Se,z,Ya,xo,Dp,Ap,fo,Op,Ka,Hp,Mp,Lp,mo,Np,_o,Vp,Rp,Gp,wo,Up,go,jp,Bp,Te,S,Za,bo,zp,Xp,se,$p,Fp,bs,W,Qp,Gt,Wp,Jp,Ut,Yp,Kp,jt,Zp,sc,oe,oc,tc,te,ac,ec,Eo,ae,nc,lc,ee,rc,ic,Io,pc,So,cc,kc;return{c(){_=t("p"),$=n("I just came back from the "),D=t("a"),Ss=n("Super Silly Hackathon 2019"),b=n(". It was my second time to participate in this Super Silly Hackathon."),M=p(),L=t("blockquote"),ds=t("p"),kn=n("Hello everybody we are ready for this year, are you?? "),Co=t("a"),hn=n("pic.twitter.com/lem52qHO6Q"),vn=n("\u2014 Super Silly Hackathon \u2014 14 Dec 2019 (@supersillyhack) "),Po=t("a"),yn=n("December 14, 2019"),re=p(),us=t("p"),dn=n("This year, my silly hackathon idea is to build "),Ts=t("a"),un=n("a little pet in the browser"),xn=n("!"),ie=p(),qo=t("p"),K=t("span"),N=t("img"),pe=p(),xs=t("section"),Jt=t("h2"),Cs=t("a"),fn=n("Inspiration?"),mn=p(),Ps=t("p"),_n=n("I saw the "),qs=t("a"),wn=n("tamagotchi"),gn=n(" on touchbar a while ago, I don't have a touchbar, but I have a browser. So why not create a pet in the browser through Chrome Extension?"),ce=p(),Do=t("section"),Yt=t("h2"),Ds=t("a"),bn=n("What can it do?"),ke=p(),fs=t("section"),Kt=t("h3"),As=t("a"),En=n("1. It runs away from mouse cursor"),In=p(),Zt=t("p"),Z=t("span"),V=t("img"),he=p(),ms=t("section"),sa=t("h3"),Os=t("a"),Sn=n("2. It eats whatever you try to type into an input"),Tn=p(),oa=t("p"),ss=t("span"),R=t("img"),ve=p(),_s=t("section"),ta=t("h3"),Hs=t("a"),Cn=n("3. It annihilates the buttons you hover onto"),Pn=p(),aa=t("p"),os=t("span"),G=t("img"),ye=p(),Ao=t("section"),ea=t("h2"),Ms=t("a"),qn=n("Implementation"),de=p(),E=t("section"),na=t("h3"),Ls=t("a"),Dn=n("Chrome Extension"),An=p(),Ns=t("p"),On=n("Firstly, it is a Chrome Extension. I used "),Vs=t("a"),Hn=n("Content Scripts"),Mn=n(", so that I have access to the DOM of the pages I am visiting."),Ln=p(),Rs=t("p"),Nn=n("Here is my "),Oo=t("code"),Vn=n("manifest.json"),Rn=n(" for my extension:"),Gn=p(),Ho=t("div"),Un=p(),Gs=t("p"),jn=n("To start, I added an "),Mo=t("code"),Bn=n("onload"),zn=n(" event, to add my pet into the browser:"),Xn=p(),Lo=t("div"),$n=p(),No=t("div"),Fn=p(),Us=t("p"),Qn=n("The first problem I encountered, is that I couldn't access the "),Vo=t("code"),Wn=n("/images/rest.png"),Jn=n(". After some googling, I need to:"),ue=p(),ws=t("section"),la=t("h4"),F=t("a"),Yn=n("1. Add "),Ro=t("code"),Kn=n("web_accessible_resources"),Zn=n(" into the "),Go=t("code"),sl=n("manifest.json"),ol=p(),Uo=t("div"),xe=p(),gs=t("section"),ra=t("h4"),ts=t("a"),tl=n("2. Prepend "),jo=t("code"),al=n("chrome-extension://__MSG_@@extension_id__/"),el=n(" for the URL"),nl=p(),Bo=t("div"),fe=p(),x=t("section"),ia=t("h3"),js=t("a"),ll=n("Make it look alive"),rl=p(),pa=t("p"),il=n("A static image will look fake."),pl=p(),Bs=t("p"),cl=n("As the quote says, "),ca=t("strong"),kl=n('"eyes is the window to the soul"'),hl=n(", to make the pet look real, we need to make the eye blink."),vl=p(),ka=t("p"),ha=t("em"),yl=n("(That's how you judge a person is dead or alive in movies right? Dead body will just stare blankly to nowhere)"),dl=p(),zs=t("p"),ul=n("To make the pet blink, I found some "),Xs=t("a"),xl=n("useful tutorials"),fl=n(" on how to create CSS sprite sheet animations."),ml=p(),va=t("p"),as=t("span"),zo=t("picture"),ya=t("source"),A=t("img"),_l=p(),Xo=t("div"),wl=p(),$s=t("p"),gl=n("To animate it, I added the "),$o=t("code"),bl=n("rest"),El=n(" class to the pet, and removed it when it's done animating."),Il=p(),Fo=t("div"),Sl=p(),da=t("p"),Tl=n("At the beginning, I thought I would add more other micro expressions to the pet, so I wrote a scheduler, to schedule expressions randomly:"),Cl=p(),Qo=t("div"),Pl=p(),Fs=t("p"),ql=n("I used "),Wo=t("code"),Dl=n("await"),Al=n(" to wait for animation to finish, before schedule the next action again, so that it will not have 2 actions running in parallel."),me=p(),u=t("section"),ua=t("h3"),Qs=t("a"),Ol=n("Avoid the cursor"),Hl=p(),xa=t("p"),Ml=n("I drew a sprite sheet that make the pet looks like it is squiggling away,"),Ll=p(),fa=t("p"),es=t("span"),U=t("img"),Nl=p(),Ws=t("p"),Vl=n("while at the same time set the "),Jo=t("code"),Rl=n("transform: translateX()"),Gl=n(" to actually move it:"),Ul=p(),Yo=t("div"),jl=p(),ma=t("p"),Bl=n("In JavaScript, I tried to keep the position state inside an object:"),zl=p(),Ko=t("div"),Xl=p(),_a=t("p"),$l=n("So, to shift away from the cursor would be:"),Fl=p(),Zo=t("div"),Ql=p(),O=t("p"),Wl=n("So, when the animation ends, the "),st=t("code"),Jl=n("transform: translateX()"),Yl=n(" will go from "),ot=t("code"),Kl=n("-30px"),Zl=n(" back to "),tt=t("code"),sr=n("0"),or=n(", and at the same time, I moved the position of the pet "),at=t("code"),tr=n("-30px"),ar=n(" in x-axis."),er=p(),Js=t("p"),nr=n("To know when the cursor is on top of the pet, I used "),et=t("code"),lr=n("mousemove"),rr=n(" event:"),ir=p(),nt=t("div"),pr=p(),Ys=t("p"),cr=n("To avoid reanimate while still animate, I added a "),lt=t("code"),kr=n("animating"),hr=n(" flag, as an mutex."),vr=p(),wa=t("p"),yr=n("Besides, it would be weird to see the pet shifting pass through the browser window, because that way, you would never be able to interact with it anymore \u{1F622}"),_e=p(),v=t("section"),ga=t("h3"),Ks=t("a"),dr=n("Eating the characters"),ur=p(),ns=t("p"),xr=n("To know when someone is typing into any of the input box, I attach an "),rt=t("code"),fr=n("input"),mr=n(" event listener on to the "),it=t("code"),_r=n("document.body"),wr=n(":"),gr=p(),pt=t("div"),br=p(),ls=t("p"),Er=n("There maybe multiple "),ct=t("code"),Ir=n("<input />"),Sr=n(" on the page, so I created a debounce function for each "),kt=t("code"),Tr=n("<input />"),Cr=n("."),Pr=p(),ba=t("p"),qr=n("To make the eating simple, I will always eat from the left, consuming characters from left to right:"),Dr=p(),ht=t("div"),Ar=p(),Ea=t("p"),Or=n(`However naively eating the characters this way, will screw up your cursor position / selection.
So I googled and pasted the code snippet to improve it:`),Hr=p(),vt=t("div"),Mr=p(),Ia=t("p"),Lr=n('After able to "eat" the characters, I need to animate the pet eating the characters'),Nr=p(),Sa=t("p"),rs=t("span"),yt=t("picture"),Ta=t("source"),H=t("img"),Vr=p(),X=t("p"),Rr=n("To align the eating with the removing of a character, I split the animation into 2 parts, "),Ca=t("strong"),Gr=n("the eating"),Ur=n(" and "),Pa=t("strong"),jr=n("the chewing"),Br=p(),qa=t("em"),zr=n("(I named it digesting during the hackathon)"),Xr=n("."),$r=p(),dt=t("div"),Fr=p(),Da=t("p"),Qr=n("To make it more realistic, I tried to make the pet tilt forward, while consuming the character:"),Wr=p(),ut=t("div"),Jr=p(),Aa=t("p"),Yr=n("The pixel values had been tuned to make the movement subtle, yet natural."),Kr=p(),Oa=t("p"),Zr=n("Now, how do I place my pet to the left of the input?"),si=p(),Zs=t("p"),oi=n("Instead of squiggle to the right position, I made the pet "),Ha=t("strong"),ti=n("teleport"),ai=n("!"),ei=p(),xt=t("div"),ni=p(),so=t("p"),li=n("To calculate the teleport destination, I used "),oo=t("a"),ri=n("getBoundingClientRect()"),ii=n(":"),pi=p(),ft=t("div"),ci=p(),Ma=t("p"),ki=n("The padding of the input is important. It brings the pet closer to the character it is going to eat. \u{1F924}"),we=p(),f=t("section"),La=t("h3"),to=t("a"),hi=n("Annihilate the buttons"),vi=p(),Na=t("p"),yi=n("Pet don't like buttons because buttons take away your concentration from your pet."),di=p(),Va=t("p"),is=t("span"),mt=t("picture"),Ra=t("source"),j=t("img"),ui=p(),ao=t("p"),xi=n("To get a list of buttons, I use "),eo=t("a"),fi=n("document.querySelectorAll()"),mi=n(":"),_i=p(),_t=t("div"),wi=p(),Ga=t("p"),gi=n("To annihilate the buttons, I animated the pet with a pair of dead red eyes, and shake it for 400 milli-seconds, before annihilating the elements into vapor:"),bi=p(),wt=t("div"),Ei=p(),ps=t("p"),Ii=n("I used "),gt=t("code"),Si=n("visibility: hidden"),Ti=n(", so that I dont disrupt the DOM structure, yet making it disappear and unclickable, unlike "),bt=t("code"),Ci=n("opacity: none"),Pi=n("."),qi=p(),Ua=t("p"),Di=n("The pet with hatred is slightly bigger and agitated than the normal pet:"),Ai=p(),Et=t("div"),Oi=p(),no=t("p"),Hi=n("To turn the button annihilated into vapor, I used "),It=t("code"),Mi=n("filter: blur()"),Li=n(":"),Ni=p(),St=t("div"),ge=p(),Tt=t("section"),ja=t("h2"),lo=t("a"),Vi=n("Difficulties"),be=p(),Q=t("section"),Ba=t("h3"),ro=t("a"),Ri=n("Synchronising interactions"),Gi=p(),cs=t("p"),Ui=n("A lot edge cases has been found and fixed by using the "),Ct=t("code"),ji=n("animating"),Bi=n(", or "),Pt=t("code"),zi=n("eating"),Xi=n(" flag:"),$i=p(),io=t("ul"),za=t("li"),Fi=n("where to avoid cursor, while eating the characters"),Qi=p(),Xa=t("li"),Wi=n(`to annihilate or to eat?
There's an heuristic to choose which one to do, when both get scheduled at the same time.`),Ee=p(),C=t("section"),$a=t("h3"),po=t("a"),Ji=n("Developing locally"),Yi=p(),co=t("p"),Ki=n("Everytime when the content script is updated, I need to click refresh in the "),qt=t("code"),Zi=n("chrome://extensions"),sp=n(" page:"),op=p(),Fa=t("p"),ks=t("span"),Dt=t("picture"),Qa=t("source"),B=t("img"),tp=p(),Wa=t("p"),ap=n("In order to developed faster, I created a simple HTML, and test it locally."),ep=p(),At=t("div"),Ie=p(),I=t("section"),Ja=t("h4"),ko=t("a"),np=n("PostCSS script"),lp=p(),ho=t("p"),rp=n("Remember I mentioned that, for resource to be accessible from the Chrome Extension, I would have to prepend the url with "),Ot=t("code"),ip=n("chrome-extension://__MSG_@@extension_id__/"),pp=n("?"),cp=p(),vo=t("p"),kp=n("But that does not work if I developed in standalone HTML, because I can't access the assets from "),Ht=t("code"),hp=n("chrome-extension://"),vp=n(" protocol in my localhost."),yp=p(),hs=t("p"),dp=n("I would have to write "),Mt=t("code"),up=n("/images/rest.png"),xp=n(", and replaced it to "),Lt=t("code"),fp=n("chrome-extension://__MSG_@@extension_id__/images/rest.png"),mp=n(" when I test it on my extension."),_p=p(),yo=t("p"),wp=n("So, I wrote a simple script with "),uo=t("a"),gp=n("PostCSS"),bp=n(" to automatically do it:"),Ep=p(),Nt=t("div"),Ip=p(),vs=t("p"),Sp=n("I used "),Vt=t("code"),Tp=n("content.css"),Cp=n(" for my local development, and automatically built "),Rt=t("code"),Pp=n("content-ext.css"),qp=n(" for the extension with all the URL replaced."),Se=p(),z=t("section"),Ya=t("h2"),xo=t("a"),Dp=n("Demo"),Ap=p(),fo=t("p"),Op=n("I did a super quick demo, which went quite well, "),Ka=t("em"),Hp=n("I think."),Mp=n(" \u{1F914}"),Lp=p(),mo=t("p"),Np=n("For those who are curious, and want to try out, you can visit "),_o=t("a"),Vp=n("here for the demo"),Rp=n("."),Gp=p(),wo=t("p"),Up=n("For those who are curious about the source code, can visit "),go=t("a"),jp=n("the Github repo"),Bp=n("."),Te=p(),S=t("section"),Za=t("h2"),bo=t("a"),zp=n("Summary"),Xp=p(),se=t("p"),$p=n("It has been a fruitful event."),Fp=p(),bs=t("blockquote"),W=t("p"),Qp=n("And "),Gt=t("a"),Wp=n("@lihautan"),Jp=n(" wins a bag of tropical fruits "),Ut=t("a"),Yp=n("pic.twitter.com/CtQUBGOI7h"),Kp=n("\u2014 Yishu See (@yishusee) "),jt=t("a"),Zp=n("December 14, 2019"),sc=p(),oe=t("p"),oc=n("Appreciate the organisers time and effort to make the Hackathon goes as smoothly as possible."),tc=p(),te=t("p"),ac=n("I managed to do something that I never really done before:"),ec=p(),Eo=t("ul"),ae=t("li"),nc=n("CSS sprite sheet animation"),lc=p(),ee=t("li"),rc=n("Chrome Extension that interacts with the user and manipulates the DOM"),ic=p(),Io=t("p"),pc=n("Hopefully I will partcipate the "),So=t("a"),cc=n("Super Silly Hackathon"),kc=n(" again next year."),this.h()},l(i){_=a(i,"P",{});var h=e(_);$=l(h,"I just came back from the "),D=a(h,"A",{href:!0,rel:!0});var Tc=e(D);Ss=l(Tc,"Super Silly Hackathon 2019"),Tc.forEach(o),b=l(h,". It was my second time to participate in this Super Silly Hackathon."),h.forEach(o),M=c(i),L=a(i,"BLOCKQUOTE",{class:!0});var Ce=e(L);ds=a(Ce,"P",{lang:!0,dir:!0});var hc=e(ds);kn=l(hc,"Hello everybody we are ready for this year, are you?? "),Co=a(hc,"A",{href:!0});var Cc=e(Co);hn=l(Cc,"pic.twitter.com/lem52qHO6Q"),Cc.forEach(o),hc.forEach(o),vn=l(Ce,"\u2014 Super Silly Hackathon \u2014 14 Dec 2019 (@supersillyhack) "),Po=a(Ce,"A",{href:!0});var Pc=e(Po);yn=l(Pc,"December 14, 2019"),Pc.forEach(o),Ce.forEach(o),re=c(i),us=a(i,"P",{});var Pe=e(us);dn=l(Pe,"This year, my silly hackathon idea is to build "),Ts=a(Pe,"A",{href:!0,rel:!0});var qc=e(Ts);un=l(qc,"a little pet in the browser"),qc.forEach(o),xn=l(Pe,"!"),Pe.forEach(o),ie=c(i),qo=a(i,"P",{});var Dc=e(qo);K=a(Dc,"SPAN",{style:!0});var Ac=e(K);N=a(Ac,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),Ac.forEach(o),Dc.forEach(o),pe=c(i),xs=a(i,"SECTION",{});var qe=e(xs);Jt=a(qe,"H2",{});var Oc=e(Jt);Cs=a(Oc,"A",{href:!0,id:!0});var Hc=e(Cs);fn=l(Hc,"Inspiration?"),Hc.forEach(o),Oc.forEach(o),mn=c(qe),Ps=a(qe,"P",{});var De=e(Ps);_n=l(De,"I saw the "),qs=a(De,"A",{href:!0,rel:!0});var Mc=e(qs);wn=l(Mc,"tamagotchi"),Mc.forEach(o),gn=l(De," on touchbar a while ago, I don't have a touchbar, but I have a browser. So why not create a pet in the browser through Chrome Extension?"),De.forEach(o),qe.forEach(o),ce=c(i),Do=a(i,"SECTION",{});var Lc=e(Do);Yt=a(Lc,"H2",{});var Nc=e(Yt);Ds=a(Nc,"A",{href:!0,id:!0});var Vc=e(Ds);bn=l(Vc,"What can it do?"),Vc.forEach(o),Nc.forEach(o),Lc.forEach(o),ke=c(i),fs=a(i,"SECTION",{});var Ae=e(fs);Kt=a(Ae,"H3",{});var Rc=e(Kt);As=a(Rc,"A",{href:!0,id:!0});var Gc=e(As);En=l(Gc,"1. It runs away from mouse cursor"),Gc.forEach(o),Rc.forEach(o),In=c(Ae),Zt=a(Ae,"P",{});var Uc=e(Zt);Z=a(Uc,"SPAN",{style:!0});var jc=e(Z);V=a(jc,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),jc.forEach(o),Uc.forEach(o),Ae.forEach(o),he=c(i),ms=a(i,"SECTION",{});var Oe=e(ms);sa=a(Oe,"H3",{});var Bc=e(sa);Os=a(Bc,"A",{href:!0,id:!0});var zc=e(Os);Sn=l(zc,"2. It eats whatever you try to type into an input"),zc.forEach(o),Bc.forEach(o),Tn=c(Oe),oa=a(Oe,"P",{});var Xc=e(oa);ss=a(Xc,"SPAN",{style:!0});var $c=e(ss);R=a($c,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),$c.forEach(o),Xc.forEach(o),Oe.forEach(o),ve=c(i),_s=a(i,"SECTION",{});var He=e(_s);ta=a(He,"H3",{});var Fc=e(ta);Hs=a(Fc,"A",{href:!0,id:!0});var Qc=e(Hs);Cn=l(Qc,"3. It annihilates the buttons you hover onto"),Qc.forEach(o),Fc.forEach(o),Pn=c(He),aa=a(He,"P",{});var Wc=e(aa);os=a(Wc,"SPAN",{style:!0});var Jc=e(os);G=a(Jc,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),Jc.forEach(o),Wc.forEach(o),He.forEach(o),ye=c(i),Ao=a(i,"SECTION",{});var Yc=e(Ao);ea=a(Yc,"H2",{});var Kc=e(ea);Ms=a(Kc,"A",{href:!0,id:!0});var Zc=e(Ms);qn=l(Zc,"Implementation"),Zc.forEach(o),Kc.forEach(o),Yc.forEach(o),de=c(i),E=a(i,"SECTION",{});var T=e(E);na=a(T,"H3",{});var sk=e(na);Ls=a(sk,"A",{href:!0,id:!0});var ok=e(Ls);Dn=l(ok,"Chrome Extension"),ok.forEach(o),sk.forEach(o),An=c(T),Ns=a(T,"P",{});var Me=e(Ns);On=l(Me,"Firstly, it is a Chrome Extension. I used "),Vs=a(Me,"A",{href:!0,rel:!0});var tk=e(Vs);Hn=l(tk,"Content Scripts"),tk.forEach(o),Mn=l(Me,", so that I have access to the DOM of the pages I am visiting."),Me.forEach(o),Ln=c(T),Rs=a(T,"P",{});var Le=e(Rs);Nn=l(Le,"Here is my "),Oo=a(Le,"CODE",{class:!0});var ak=e(Oo);Vn=l(ak,"manifest.json"),ak.forEach(o),Rn=l(Le," for my extension:"),Le.forEach(o),Gn=c(T),Ho=a(T,"DIV",{class:!0});var Vv=e(Ho);Vv.forEach(o),Un=c(T),Gs=a(T,"P",{});var Ne=e(Gs);jn=l(Ne,"To start, I added an "),Mo=a(Ne,"CODE",{class:!0});var ek=e(Mo);Bn=l(ek,"onload"),ek.forEach(o),zn=l(Ne," event, to add my pet into the browser:"),Ne.forEach(o),Xn=c(T),Lo=a(T,"DIV",{class:!0});var Rv=e(Lo);Rv.forEach(o),$n=c(T),No=a(T,"DIV",{class:!0});var Gv=e(No);Gv.forEach(o),Fn=c(T),Us=a(T,"P",{});var Ve=e(Us);Qn=l(Ve,"The first problem I encountered, is that I couldn't access the "),Vo=a(Ve,"CODE",{class:!0});var nk=e(Vo);Wn=l(nk,"/images/rest.png"),nk.forEach(o),Jn=l(Ve,". After some googling, I need to:"),Ve.forEach(o),T.forEach(o),ue=c(i),ws=a(i,"SECTION",{});var Re=e(ws);la=a(Re,"H4",{});var lk=e(la);F=a(lk,"A",{href:!0,id:!0});var ne=e(F);Yn=l(ne,"1. Add "),Ro=a(ne,"CODE",{class:!0});var rk=e(Ro);Kn=l(rk,"web_accessible_resources"),rk.forEach(o),Zn=l(ne," into the "),Go=a(ne,"CODE",{class:!0});var ik=e(Go);sl=l(ik,"manifest.json"),ik.forEach(o),ne.forEach(o),lk.forEach(o),ol=c(Re),Uo=a(Re,"DIV",{class:!0});var Uv=e(Uo);Uv.forEach(o),Re.forEach(o),xe=c(i),gs=a(i,"SECTION",{});var Ge=e(gs);ra=a(Ge,"H4",{});var pk=e(ra);ts=a(pk,"A",{href:!0,id:!0});var Ue=e(ts);tl=l(Ue,"2. Prepend "),jo=a(Ue,"CODE",{class:!0});var ck=e(jo);al=l(ck,"chrome-extension://__MSG_@@extension_id__/"),ck.forEach(o),el=l(Ue," for the URL"),Ue.forEach(o),pk.forEach(o),nl=c(Ge),Bo=a(Ge,"DIV",{class:!0});var jv=e(Bo);jv.forEach(o),Ge.forEach(o),fe=c(i),x=a(i,"SECTION",{});var w=e(x);ia=a(w,"H3",{});var kk=e(ia);js=a(kk,"A",{href:!0,id:!0});var hk=e(js);ll=l(hk,"Make it look alive"),hk.forEach(o),kk.forEach(o),rl=c(w),pa=a(w,"P",{});var vk=e(pa);il=l(vk,"A static image will look fake."),vk.forEach(o),pl=c(w),Bs=a(w,"P",{});var je=e(Bs);cl=l(je,"As the quote says, "),ca=a(je,"STRONG",{});var yk=e(ca);kl=l(yk,'"eyes is the window to the soul"'),yk.forEach(o),hl=l(je,", to make the pet look real, we need to make the eye blink."),je.forEach(o),vl=c(w),ka=a(w,"P",{});var dk=e(ka);ha=a(dk,"EM",{});var uk=e(ha);yl=l(uk,"(That's how you judge a person is dead or alive in movies right? Dead body will just stare blankly to nowhere)"),uk.forEach(o),dk.forEach(o),dl=c(w),zs=a(w,"P",{});var Be=e(zs);ul=l(Be,"To make the pet blink, I found some "),Xs=a(Be,"A",{href:!0,rel:!0});var xk=e(Xs);xl=l(xk,"useful tutorials"),xk.forEach(o),fl=l(Be," on how to create CSS sprite sheet animations."),Be.forEach(o),ml=c(w),va=a(w,"P",{});var fk=e(va);as=a(fk,"SPAN",{style:!0});var mk=e(as);zo=a(mk,"PICTURE",{});var vc=e(zo);ya=a(vc,"SOURCE",{type:!0,srcset:!0}),A=a(vc,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0,title:!0}),vc.forEach(o),mk.forEach(o),fk.forEach(o),_l=c(w),Xo=a(w,"DIV",{class:!0});var Bv=e(Xo);Bv.forEach(o),wl=c(w),$s=a(w,"P",{});var ze=e($s);gl=l(ze,"To animate it, I added the "),$o=a(ze,"CODE",{class:!0});var _k=e($o);bl=l(_k,"rest"),_k.forEach(o),El=l(ze," class to the pet, and removed it when it's done animating."),ze.forEach(o),Il=c(w),Fo=a(w,"DIV",{class:!0});var zv=e(Fo);zv.forEach(o),Sl=c(w),da=a(w,"P",{});var wk=e(da);Tl=l(wk,"At the beginning, I thought I would add more other micro expressions to the pet, so I wrote a scheduler, to schedule expressions randomly:"),wk.forEach(o),Cl=c(w),Qo=a(w,"DIV",{class:!0});var Xv=e(Qo);Xv.forEach(o),Pl=c(w),Fs=a(w,"P",{});var Xe=e(Fs);ql=l(Xe,"I used "),Wo=a(Xe,"CODE",{class:!0});var gk=e(Wo);Dl=l(gk,"await"),gk.forEach(o),Al=l(Xe," to wait for animation to finish, before schedule the next action again, so that it will not have 2 actions running in parallel."),Xe.forEach(o),w.forEach(o),me=c(i),u=a(i,"SECTION",{});var m=e(u);ua=a(m,"H3",{});var bk=e(ua);Qs=a(bk,"A",{href:!0,id:!0});var Ek=e(Qs);Ol=l(Ek,"Avoid the cursor"),Ek.forEach(o),bk.forEach(o),Hl=c(m),xa=a(m,"P",{});var Ik=e(xa);Ml=l(Ik,"I drew a sprite sheet that make the pet looks like it is squiggling away,"),Ik.forEach(o),Ll=c(m),fa=a(m,"P",{});var Sk=e(fa);es=a(Sk,"SPAN",{style:!0});var Tk=e(es);U=a(Tk,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),Tk.forEach(o),Sk.forEach(o),Nl=c(m),Ws=a(m,"P",{});var $e=e(Ws);Vl=l($e,"while at the same time set the "),Jo=a($e,"CODE",{class:!0});var Ck=e(Jo);Rl=l(Ck,"transform: translateX()"),Ck.forEach(o),Gl=l($e," to actually move it:"),$e.forEach(o),Ul=c(m),Yo=a(m,"DIV",{class:!0});var $v=e(Yo);$v.forEach(o),jl=c(m),ma=a(m,"P",{});var Pk=e(ma);Bl=l(Pk,"In JavaScript, I tried to keep the position state inside an object:"),Pk.forEach(o),zl=c(m),Ko=a(m,"DIV",{class:!0});var Fv=e(Ko);Fv.forEach(o),Xl=c(m),_a=a(m,"P",{});var qk=e(_a);$l=l(qk,"So, to shift away from the cursor would be:"),qk.forEach(o),Fl=c(m),Zo=a(m,"DIV",{class:!0});var Qv=e(Zo);Qv.forEach(o),Ql=c(m),O=a(m,"P",{});var J=e(O);Wl=l(J,"So, when the animation ends, the "),st=a(J,"CODE",{class:!0});var Dk=e(st);Jl=l(Dk,"transform: translateX()"),Dk.forEach(o),Yl=l(J," will go from "),ot=a(J,"CODE",{class:!0});var Ak=e(ot);Kl=l(Ak,"-30px"),Ak.forEach(o),Zl=l(J," back to "),tt=a(J,"CODE",{class:!0});var Ok=e(tt);sr=l(Ok,"0"),Ok.forEach(o),or=l(J,", and at the same time, I moved the position of the pet "),at=a(J,"CODE",{class:!0});var Hk=e(at);tr=l(Hk,"-30px"),Hk.forEach(o),ar=l(J," in x-axis."),J.forEach(o),er=c(m),Js=a(m,"P",{});var Fe=e(Js);nr=l(Fe,"To know when the cursor is on top of the pet, I used "),et=a(Fe,"CODE",{class:!0});var Mk=e(et);lr=l(Mk,"mousemove"),Mk.forEach(o),rr=l(Fe," event:"),Fe.forEach(o),ir=c(m),nt=a(m,"DIV",{class:!0});var Wv=e(nt);Wv.forEach(o),pr=c(m),Ys=a(m,"P",{});var Qe=e(Ys);cr=l(Qe,"To avoid reanimate while still animate, I added a "),lt=a(Qe,"CODE",{class:!0});var Lk=e(lt);kr=l(Lk,"animating"),Lk.forEach(o),hr=l(Qe," flag, as an mutex."),Qe.forEach(o),vr=c(m),wa=a(m,"P",{});var Nk=e(wa);yr=l(Nk,"Besides, it would be weird to see the pet shifting pass through the browser window, because that way, you would never be able to interact with it anymore \u{1F622}"),Nk.forEach(o),m.forEach(o),_e=c(i),v=a(i,"SECTION",{});var d=e(v);ga=a(d,"H3",{});var Vk=e(ga);Ks=a(Vk,"A",{href:!0,id:!0});var Rk=e(Ks);dr=l(Rk,"Eating the characters"),Rk.forEach(o),Vk.forEach(o),ur=c(d),ns=a(d,"P",{});var Bt=e(ns);xr=l(Bt,"To know when someone is typing into any of the input box, I attach an "),rt=a(Bt,"CODE",{class:!0});var Gk=e(rt);fr=l(Gk,"input"),Gk.forEach(o),mr=l(Bt," event listener on to the "),it=a(Bt,"CODE",{class:!0});var Uk=e(it);_r=l(Uk,"document.body"),Uk.forEach(o),wr=l(Bt,":"),Bt.forEach(o),gr=c(d),pt=a(d,"DIV",{class:!0});var Jv=e(pt);Jv.forEach(o),br=c(d),ls=a(d,"P",{});var zt=e(ls);Er=l(zt,"There maybe multiple "),ct=a(zt,"CODE",{class:!0});var jk=e(ct);Ir=l(jk,"<input />"),jk.forEach(o),Sr=l(zt," on the page, so I created a debounce function for each "),kt=a(zt,"CODE",{class:!0});var Bk=e(kt);Tr=l(Bk,"<input />"),Bk.forEach(o),Cr=l(zt,"."),zt.forEach(o),Pr=c(d),ba=a(d,"P",{});var zk=e(ba);qr=l(zk,"To make the eating simple, I will always eat from the left, consuming characters from left to right:"),zk.forEach(o),Dr=c(d),ht=a(d,"DIV",{class:!0});var Yv=e(ht);Yv.forEach(o),Ar=c(d),Ea=a(d,"P",{});var Xk=e(Ea);Or=l(Xk,`However naively eating the characters this way, will screw up your cursor position / selection.
So I googled and pasted the code snippet to improve it:`),Xk.forEach(o),Hr=c(d),vt=a(d,"DIV",{class:!0});var Kv=e(vt);Kv.forEach(o),Mr=c(d),Ia=a(d,"P",{});var $k=e(Ia);Lr=l($k,'After able to "eat" the characters, I need to animate the pet eating the characters'),$k.forEach(o),Nr=c(d),Sa=a(d,"P",{});var Fk=e(Sa);rs=a(Fk,"SPAN",{style:!0});var Qk=e(rs);yt=a(Qk,"PICTURE",{});var yc=e(yt);Ta=a(yc,"SOURCE",{type:!0,srcset:!0}),H=a(yc,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0,title:!0}),yc.forEach(o),Qk.forEach(o),Fk.forEach(o),Vr=c(d),X=a(d,"P",{});var Es=e(X);Rr=l(Es,"To align the eating with the removing of a character, I split the animation into 2 parts, "),Ca=a(Es,"STRONG",{});var Wk=e(Ca);Gr=l(Wk,"the eating"),Wk.forEach(o),Ur=l(Es," and "),Pa=a(Es,"STRONG",{});var Jk=e(Pa);jr=l(Jk,"the chewing"),Jk.forEach(o),Br=c(Es),qa=a(Es,"EM",{});var Yk=e(qa);zr=l(Yk,"(I named it digesting during the hackathon)"),Yk.forEach(o),Xr=l(Es,"."),Es.forEach(o),$r=c(d),dt=a(d,"DIV",{class:!0});var Zv=e(dt);Zv.forEach(o),Fr=c(d),Da=a(d,"P",{});var Kk=e(Da);Qr=l(Kk,"To make it more realistic, I tried to make the pet tilt forward, while consuming the character:"),Kk.forEach(o),Wr=c(d),ut=a(d,"DIV",{class:!0});var sy=e(ut);sy.forEach(o),Jr=c(d),Aa=a(d,"P",{});var Zk=e(Aa);Yr=l(Zk,"The pixel values had been tuned to make the movement subtle, yet natural."),Zk.forEach(o),Kr=c(d),Oa=a(d,"P",{});var sh=e(Oa);Zr=l(sh,"Now, how do I place my pet to the left of the input?"),sh.forEach(o),si=c(d),Zs=a(d,"P",{});var We=e(Zs);oi=l(We,"Instead of squiggle to the right position, I made the pet "),Ha=a(We,"STRONG",{});var oh=e(Ha);ti=l(oh,"teleport"),oh.forEach(o),ai=l(We,"!"),We.forEach(o),ei=c(d),xt=a(d,"DIV",{class:!0});var oy=e(xt);oy.forEach(o),ni=c(d),so=a(d,"P",{});var Je=e(so);li=l(Je,"To calculate the teleport destination, I used "),oo=a(Je,"A",{href:!0,rel:!0});var th=e(oo);ri=l(th,"getBoundingClientRect()"),th.forEach(o),ii=l(Je,":"),Je.forEach(o),pi=c(d),ft=a(d,"DIV",{class:!0});var ty=e(ft);ty.forEach(o),ci=c(d),Ma=a(d,"P",{});var ah=e(Ma);ki=l(ah,"The padding of the input is important. It brings the pet closer to the character it is going to eat. \u{1F924}"),ah.forEach(o),d.forEach(o),we=c(i),f=a(i,"SECTION",{});var g=e(f);La=a(g,"H3",{});var eh=e(La);to=a(eh,"A",{href:!0,id:!0});var nh=e(to);hi=l(nh,"Annihilate the buttons"),nh.forEach(o),eh.forEach(o),vi=c(g),Na=a(g,"P",{});var lh=e(Na);yi=l(lh,"Pet don't like buttons because buttons take away your concentration from your pet."),lh.forEach(o),di=c(g),Va=a(g,"P",{});var rh=e(Va);is=a(rh,"SPAN",{style:!0});var ih=e(is);mt=a(ih,"PICTURE",{});var dc=e(mt);Ra=a(dc,"SOURCE",{type:!0,srcset:!0}),j=a(dc,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),dc.forEach(o),ih.forEach(o),rh.forEach(o),ui=c(g),ao=a(g,"P",{});var Ye=e(ao);xi=l(Ye,"To get a list of buttons, I use "),eo=a(Ye,"A",{href:!0,rel:!0});var ph=e(eo);fi=l(ph,"document.querySelectorAll()"),ph.forEach(o),mi=l(Ye,":"),Ye.forEach(o),_i=c(g),_t=a(g,"DIV",{class:!0});var ay=e(_t);ay.forEach(o),wi=c(g),Ga=a(g,"P",{});var ch=e(Ga);gi=l(ch,"To annihilate the buttons, I animated the pet with a pair of dead red eyes, and shake it for 400 milli-seconds, before annihilating the elements into vapor:"),ch.forEach(o),bi=c(g),wt=a(g,"DIV",{class:!0});var ey=e(wt);ey.forEach(o),Ei=c(g),ps=a(g,"P",{});var Xt=e(ps);Ii=l(Xt,"I used "),gt=a(Xt,"CODE",{class:!0});var kh=e(gt);Si=l(kh,"visibility: hidden"),kh.forEach(o),Ti=l(Xt,", so that I dont disrupt the DOM structure, yet making it disappear and unclickable, unlike "),bt=a(Xt,"CODE",{class:!0});var hh=e(bt);Ci=l(hh,"opacity: none"),hh.forEach(o),Pi=l(Xt,"."),Xt.forEach(o),qi=c(g),Ua=a(g,"P",{});var vh=e(Ua);Di=l(vh,"The pet with hatred is slightly bigger and agitated than the normal pet:"),vh.forEach(o),Ai=c(g),Et=a(g,"DIV",{class:!0});var ny=e(Et);ny.forEach(o),Oi=c(g),no=a(g,"P",{});var Ke=e(no);Hi=l(Ke,"To turn the button annihilated into vapor, I used "),It=a(Ke,"CODE",{class:!0});var yh=e(It);Mi=l(yh,"filter: blur()"),yh.forEach(o),Li=l(Ke,":"),Ke.forEach(o),Ni=c(g),St=a(g,"DIV",{class:!0});var ly=e(St);ly.forEach(o),g.forEach(o),ge=c(i),Tt=a(i,"SECTION",{});var dh=e(Tt);ja=a(dh,"H2",{});var uh=e(ja);lo=a(uh,"A",{href:!0,id:!0});var xh=e(lo);Vi=l(xh,"Difficulties"),xh.forEach(o),uh.forEach(o),dh.forEach(o),be=c(i),Q=a(i,"SECTION",{});var $t=e(Q);Ba=a($t,"H3",{});var fh=e(Ba);ro=a(fh,"A",{href:!0,id:!0});var mh=e(ro);Ri=l(mh,"Synchronising interactions"),mh.forEach(o),fh.forEach(o),Gi=c($t),cs=a($t,"P",{});var Ft=e(cs);Ui=l(Ft,"A lot edge cases has been found and fixed by using the "),Ct=a(Ft,"CODE",{class:!0});var _h=e(Ct);ji=l(_h,"animating"),_h.forEach(o),Bi=l(Ft,", or "),Pt=a(Ft,"CODE",{class:!0});var wh=e(Pt);zi=l(wh,"eating"),wh.forEach(o),Xi=l(Ft," flag:"),Ft.forEach(o),$i=c($t),io=a($t,"UL",{});var Ze=e(io);za=a(Ze,"LI",{});var gh=e(za);Fi=l(gh,"where to avoid cursor, while eating the characters"),gh.forEach(o),Qi=c(Ze),Xa=a(Ze,"LI",{});var bh=e(Xa);Wi=l(bh,`to annihilate or to eat?
There's an heuristic to choose which one to do, when both get scheduled at the same time.`),bh.forEach(o),Ze.forEach(o),$t.forEach(o),Ee=c(i),C=a(i,"SECTION",{});var Y=e(C);$a=a(Y,"H3",{});var Eh=e($a);po=a(Eh,"A",{href:!0,id:!0});var Ih=e(po);Ji=l(Ih,"Developing locally"),Ih.forEach(o),Eh.forEach(o),Yi=c(Y),co=a(Y,"P",{});var sn=e(co);Ki=l(sn,"Everytime when the content script is updated, I need to click refresh in the "),qt=a(sn,"CODE",{class:!0});var Sh=e(qt);Zi=l(Sh,"chrome://extensions"),Sh.forEach(o),sp=l(sn," page:"),sn.forEach(o),op=c(Y),Fa=a(Y,"P",{});var Th=e(Fa);ks=a(Th,"SPAN",{style:!0});var Ch=e(ks);Dt=a(Ch,"PICTURE",{});var uc=e(Dt);Qa=a(uc,"SOURCE",{type:!0,srcset:!0}),B=a(uc,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),uc.forEach(o),Ch.forEach(o),Th.forEach(o),tp=c(Y),Wa=a(Y,"P",{});var Ph=e(Wa);ap=l(Ph,"In order to developed faster, I created a simple HTML, and test it locally."),Ph.forEach(o),ep=c(Y),At=a(Y,"DIV",{class:!0});var ry=e(At);ry.forEach(o),Y.forEach(o),Ie=c(i),I=a(i,"SECTION",{});var P=e(I);Ja=a(P,"H4",{});var qh=e(Ja);ko=a(qh,"A",{href:!0,id:!0});var Dh=e(ko);np=l(Dh,"PostCSS script"),Dh.forEach(o),qh.forEach(o),lp=c(P),ho=a(P,"P",{});var on=e(ho);rp=l(on,"Remember I mentioned that, for resource to be accessible from the Chrome Extension, I would have to prepend the url with "),Ot=a(on,"CODE",{class:!0});var Ah=e(Ot);ip=l(Ah,"chrome-extension://__MSG_@@extension_id__/"),Ah.forEach(o),pp=l(on,"?"),on.forEach(o),cp=c(P),vo=a(P,"P",{});var tn=e(vo);kp=l(tn,"But that does not work if I developed in standalone HTML, because I can't access the assets from "),Ht=a(tn,"CODE",{class:!0});var Oh=e(Ht);hp=l(Oh,"chrome-extension://"),Oh.forEach(o),vp=l(tn," protocol in my localhost."),tn.forEach(o),yp=c(P),hs=a(P,"P",{});var Qt=e(hs);dp=l(Qt,"I would have to write "),Mt=a(Qt,"CODE",{class:!0});var Hh=e(Mt);up=l(Hh,"/images/rest.png"),Hh.forEach(o),xp=l(Qt,", and replaced it to "),Lt=a(Qt,"CODE",{class:!0});var Mh=e(Lt);fp=l(Mh,"chrome-extension://__MSG_@@extension_id__/images/rest.png"),Mh.forEach(o),mp=l(Qt," when I test it on my extension."),Qt.forEach(o),_p=c(P),yo=a(P,"P",{});var an=e(yo);wp=l(an,"So, I wrote a simple script with "),uo=a(an,"A",{href:!0,rel:!0});var Lh=e(uo);gp=l(Lh,"PostCSS"),Lh.forEach(o),bp=l(an," to automatically do it:"),an.forEach(o),Ep=c(P),Nt=a(P,"DIV",{class:!0});var iy=e(Nt);iy.forEach(o),Ip=c(P),vs=a(P,"P",{});var Wt=e(vs);Sp=l(Wt,"I used "),Vt=a(Wt,"CODE",{class:!0});var Nh=e(Vt);Tp=l(Nh,"content.css"),Nh.forEach(o),Cp=l(Wt," for my local development, and automatically built "),Rt=a(Wt,"CODE",{class:!0});var Vh=e(Rt);Pp=l(Vh,"content-ext.css"),Vh.forEach(o),qp=l(Wt," for the extension with all the URL replaced."),Wt.forEach(o),P.forEach(o),Se=c(i),z=a(i,"SECTION",{});var Is=e(z);Ya=a(Is,"H2",{});var Rh=e(Ya);xo=a(Rh,"A",{href:!0,id:!0});var Gh=e(xo);Dp=l(Gh,"Demo"),Gh.forEach(o),Rh.forEach(o),Ap=c(Is),fo=a(Is,"P",{});var en=e(fo);Op=l(en,"I did a super quick demo, which went quite well, "),Ka=a(en,"EM",{});var Uh=e(Ka);Hp=l(Uh,"I think."),Uh.forEach(o),Mp=l(en," \u{1F914}"),en.forEach(o),Lp=c(Is),mo=a(Is,"P",{});var nn=e(mo);Np=l(nn,"For those who are curious, and want to try out, you can visit "),_o=a(nn,"A",{href:!0,rel:!0});var jh=e(_o);Vp=l(jh,"here for the demo"),jh.forEach(o),Rp=l(nn,"."),nn.forEach(o),Gp=c(Is),wo=a(Is,"P",{});var ln=e(wo);Up=l(ln,"For those who are curious about the source code, can visit "),go=a(ln,"A",{href:!0,rel:!0});var Bh=e(go);jp=l(Bh,"the Github repo"),Bh.forEach(o),Bp=l(ln,"."),ln.forEach(o),Is.forEach(o),Te=c(i),S=a(i,"SECTION",{});var q=e(S);Za=a(q,"H2",{});var zh=e(Za);bo=a(zh,"A",{href:!0,id:!0});var Xh=e(bo);zp=l(Xh,"Summary"),Xh.forEach(o),zh.forEach(o),Xp=c(q),se=a(q,"P",{});var $h=e(se);$p=l($h,"It has been a fruitful event."),$h.forEach(o),Fp=c(q),bs=a(q,"BLOCKQUOTE",{class:!0});var rn=e(bs);W=a(rn,"P",{lang:!0,dir:!0});var le=e(W);Qp=l(le,"And "),Gt=a(le,"A",{href:!0});var Fh=e(Gt);Wp=l(Fh,"@lihautan"),Fh.forEach(o),Jp=l(le," wins a bag of tropical fruits "),Ut=a(le,"A",{href:!0});var Qh=e(Ut);Yp=l(Qh,"pic.twitter.com/CtQUBGOI7h"),Qh.forEach(o),le.forEach(o),Kp=l(rn,"\u2014 Yishu See (@yishusee) "),jt=a(rn,"A",{href:!0});var Wh=e(jt);Zp=l(Wh,"December 14, 2019"),Wh.forEach(o),rn.forEach(o),sc=c(q),oe=a(q,"P",{});var Jh=e(oe);oc=l(Jh,"Appreciate the organisers time and effort to make the Hackathon goes as smoothly as possible."),Jh.forEach(o),tc=c(q),te=a(q,"P",{});var Yh=e(te);ac=l(Yh,"I managed to do something that I never really done before:"),Yh.forEach(o),ec=c(q),Eo=a(q,"UL",{});var pn=e(Eo);ae=a(pn,"LI",{});var Kh=e(ae);nc=l(Kh,"CSS sprite sheet animation"),Kh.forEach(o),lc=c(pn),ee=a(pn,"LI",{});var Zh=e(ee);rc=l(Zh,"Chrome Extension that interacts with the user and manipulates the DOM"),Zh.forEach(o),pn.forEach(o),ic=c(q),Io=a(q,"P",{});var cn=e(Io);pc=l(cn,"Hopefully I will partcipate the "),So=a(cn,"A",{href:!0,rel:!0});var sv=e(So);cc=l(sv,"Super Silly Hackathon"),sv.forEach(o),kc=l(cn," again next year."),cn.forEach(o),q.forEach(o),this.h()},h(){r(D,"href","https://supersillyhackathon.sg/"),r(D,"rel","nofollow"),r(Co,"href","https://t.co/lem52qHO6Q"),r(ds,"lang","en"),r(ds,"dir","ltr"),r(Po,"href","https://twitter.com/supersillyhack/status/1205671402432450563?ref_src=twsrc%5Etfw"),r(L,"class","twitter-tweet"),r(Ts,"href","https://github.com/tanhauhau/browser-pet"),r(Ts,"rel","nofollow"),ys(N.src,fc=kv)||r(N,"src",fc),r(N,"srcset",kv+", "+Ry+" 2x"),r(N,"loading","lazy"),k(N,"position","absolute"),k(N,"top","0"),k(N,"width","100%"),k(N,"height","100%"),r(N,"alt","rest"),k(K,"display","block"),k(K,"position","relative"),k(K,"padding-top","58.357%"),k(K,"width","100%"),r(Cs,"href","#inspiration"),r(Cs,"id","inspiration"),r(qs,"href","https://github.com/graceavery/tamagotchiTemp"),r(qs,"rel","nofollow"),r(Ds,"href","#what-can-it-do"),r(Ds,"id","what-can-it-do"),r(As,"href","#1-it-runs-away-from-mouse-cursor"),r(As,"id","1-it-runs-away-from-mouse-cursor"),ys(V.src,mc=cv)||r(V,"src",mc),r(V,"srcset",cv+", "+Vy+" 2x"),r(V,"loading","lazy"),k(V,"position","absolute"),k(V,"top","0"),k(V,"width","100%"),k(V,"height","100%"),r(V,"alt","evade"),k(Z,"display","block"),k(Z,"position","relative"),k(Z,"padding-top","56.857%"),k(Z,"width","100%"),r(Os,"href","#2-it-eats-whatever-you-try-to-type-into-an-input"),r(Os,"id","2-it-eats-whatever-you-try-to-type-into-an-input"),ys(R.src,_c=pv)||r(R,"src",_c),r(R,"srcset",pv+", "+Ny+" 2x"),r(R,"loading","lazy"),k(R,"position","absolute"),k(R,"top","0"),k(R,"width","100%"),k(R,"height","100%"),r(R,"alt","eat"),k(ss,"display","block"),k(ss,"position","relative"),k(ss,"padding-top","44.929%"),k(ss,"width","100%"),r(Hs,"href","#3-it-annihilates-the-buttons-you-hover-onto"),r(Hs,"id","3-it-annihilates-the-buttons-you-hover-onto"),ys(G.src,wc=iv)||r(G,"src",wc),r(G,"srcset",iv+", "+Ly+" 2x"),r(G,"loading","lazy"),k(G,"position","absolute"),k(G,"top","0"),k(G,"width","100%"),k(G,"height","100%"),r(G,"alt","annihilate"),k(os,"display","block"),k(os,"position","relative"),k(os,"padding-top","57.000%"),k(os,"width","100%"),r(Ms,"href","#implementation"),r(Ms,"id","implementation"),r(Ls,"href","#chrome-extension"),r(Ls,"id","chrome-extension"),r(Vs,"href","https://developer.chrome.com/extensions/content_scripts"),r(Vs,"rel","nofollow"),r(Oo,"class","inline"),r(Ho,"class","code-section"),r(Mo,"class","inline"),r(Lo,"class","code-section"),r(No,"class","code-section"),r(Vo,"class","inline"),r(Ro,"class","inline"),r(Go,"class","inline"),r(F,"href","#1-add-web-accessible-resources-into-the-manifest-json"),r(F,"id","1-add-web-accessible-resources-into-the-manifest-json"),r(Uo,"class","code-section"),r(jo,"class","inline"),r(ts,"href","#2-prepend-chrome-extension-msg-extension-id-for-the-url"),r(ts,"id","2-prepend-chrome-extension-msg-extension-id-for-the-url"),r(Bo,"class","code-section"),r(js,"href","#make-it-look-alive"),r(js,"id","make-it-look-alive"),r(Xs,"href","https://blog.teamtreehouse.com/css-sprite-sheet-animations-steps"),r(Xs,"rel","nofollow"),r(ya,"type","image/webp"),r(ya,"srcset",Hy+", "+Oy+" 2x"),ys(A.src,gc=rv)||r(A,"src",gc),r(A,"srcset",rv+", "+My+" 2x"),r(A,"loading","lazy"),k(A,"position","absolute"),k(A,"top","0"),k(A,"width","100%"),k(A,"height","100%"),r(A,"alt","spritesheet for resting"),r(A,"title","Sprite Sheet for Resting"),k(as,"display","block"),k(as,"position","relative"),k(as,"padding-top","33.333%"),k(as,"width","100%"),r(Xo,"class","code-section"),r($o,"class","inline"),r(Fo,"class","code-section"),r(Qo,"class","code-section"),r(Wo,"class","inline"),r(Qs,"href","#avoid-the-cursor"),r(Qs,"id","avoid-the-cursor"),ys(U.src,bc=lv)||r(U,"src",bc),r(U,"srcset",lv+", "+Ay+" 2x"),r(U,"loading","lazy"),k(U,"position","absolute"),k(U,"top","0"),k(U,"width","100%"),k(U,"height","100%"),r(U,"alt","shift"),k(es,"display","block"),k(es,"position","relative"),k(es,"padding-top","84.643%"),k(es,"width","100%"),r(Jo,"class","inline"),r(Yo,"class","code-section"),r(Ko,"class","code-section"),r(Zo,"class","code-section"),r(st,"class","inline"),r(ot,"class","inline"),r(tt,"class","inline"),r(at,"class","inline"),r(et,"class","inline"),r(nt,"class","code-section"),r(lt,"class","inline"),r(Ks,"href","#eating-the-characters"),r(Ks,"id","eating-the-characters"),r(rt,"class","inline"),r(it,"class","inline"),r(pt,"class","code-section"),r(ct,"class","inline"),r(kt,"class","inline"),r(ht,"class","code-section"),r(vt,"class","code-section"),r(Ta,"type","image/webp"),r(Ta,"srcset",qy+", "+Py+" 2x"),ys(H.src,Ec=nv)||r(H,"src",Ec),r(H,"srcset",nv+", "+Dy+" 2x"),r(H,"loading","lazy"),k(H,"position","absolute"),k(H,"top","0"),k(H,"width","100%"),k(H,"height","100%"),r(H,"alt","spritesheet for eating"),r(H,"title","Sprite Sheet for Eating"),k(rs,"display","block"),k(rs,"position","relative"),k(rs,"padding-top","12.500%"),k(rs,"width","100%"),r(dt,"class","code-section"),r(ut,"class","code-section"),r(xt,"class","code-section"),r(oo,"href","https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect"),r(oo,"rel","nofollow"),r(ft,"class","code-section"),r(to,"href","#annihilate-the-buttons"),r(to,"id","annihilate-the-buttons"),r(Ra,"type","image/webp"),r(Ra,"srcset",Ty+", "+Sy+" 2x"),ys(j.src,Ic=ev)||r(j,"src",Ic),r(j,"srcset",ev+", "+Cy+" 2x"),r(j,"loading","lazy"),k(j,"position","absolute"),k(j,"top","0"),k(j,"width","100%"),k(j,"height","100%"),r(j,"alt","Eys full of hatred"),k(is,"display","block"),k(is,"position","relative"),k(is,"padding-top","100.000%"),k(is,"width","100%"),r(eo,"href","https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll"),r(eo,"rel","nofollow"),r(_t,"class","code-section"),r(wt,"class","code-section"),r(gt,"class","inline"),r(bt,"class","inline"),r(Et,"class","code-section"),r(It,"class","inline"),r(St,"class","code-section"),r(lo,"href","#difficulties"),r(lo,"id","difficulties"),r(ro,"href","#synchronising-interactions"),r(ro,"id","synchronising-interactions"),r(Ct,"class","inline"),r(Pt,"class","inline"),r(po,"href","#developing-locally"),r(po,"id","developing-locally"),r(qt,"class","inline"),r(Qa,"type","image/webp"),r(Qa,"srcset",Ey+", "+by+" 2x"),ys(B.src,Sc=av)||r(B,"src",Sc),r(B,"srcset",av+", "+Iy+" 2x"),r(B,"loading","lazy"),k(B,"position","absolute"),k(B,"top","0"),k(B,"width","100%"),k(B,"height","100%"),r(B,"alt","click refresh"),k(ks,"display","block"),k(ks,"position","relative"),k(ks,"padding-top","53.571%"),k(ks,"width","100%"),r(At,"class","code-section"),r(ko,"href","#postcss-script"),r(ko,"id","postcss-script"),r(Ot,"class","inline"),r(Ht,"class","inline"),r(Mt,"class","inline"),r(Lt,"class","inline"),r(uo,"href","https://postcss.org/"),r(uo,"rel","nofollow"),r(Nt,"class","code-section"),r(Vt,"class","inline"),r(Rt,"class","inline"),r(xo,"href","#demo"),r(xo,"id","demo"),r(_o,"href","https://lihautan.com/browser-pet/"),r(_o,"rel","nofollow"),r(go,"href","https://github.com/tanhauhau/browser-pet"),r(go,"rel","nofollow"),r(bo,"href","#summary"),r(bo,"id","summary"),r(Gt,"href","https://twitter.com/lihautan?ref_src=twsrc%5Etfw"),r(Ut,"href","https://t.co/CtQUBGOI7h"),r(W,"lang","en"),r(W,"dir","ltr"),r(jt,"href","https://twitter.com/yishusee/status/1205828141194727430?ref_src=twsrc%5Etfw"),r(bs,"class","twitter-tweet"),r(So,"href","https://twitter.com/supersillyhack"),r(So,"rel","nofollow")},m(i,h){y(i,_,h),s(_,$),s(_,D),s(D,Ss),s(_,b),y(i,M,h),y(i,L,h),s(L,ds),s(ds,kn),s(ds,Co),s(Co,hn),s(L,vn),s(L,Po),s(Po,yn),y(i,re,h),y(i,us,h),s(us,dn),s(us,Ts),s(Ts,un),s(us,xn),y(i,ie,h),y(i,qo,h),s(qo,K),s(K,N),y(i,pe,h),y(i,xs,h),s(xs,Jt),s(Jt,Cs),s(Cs,fn),s(xs,mn),s(xs,Ps),s(Ps,_n),s(Ps,qs),s(qs,wn),s(Ps,gn),y(i,ce,h),y(i,Do,h),s(Do,Yt),s(Yt,Ds),s(Ds,bn),y(i,ke,h),y(i,fs,h),s(fs,Kt),s(Kt,As),s(As,En),s(fs,In),s(fs,Zt),s(Zt,Z),s(Z,V),y(i,he,h),y(i,ms,h),s(ms,sa),s(sa,Os),s(Os,Sn),s(ms,Tn),s(ms,oa),s(oa,ss),s(ss,R),y(i,ve,h),y(i,_s,h),s(_s,ta),s(ta,Hs),s(Hs,Cn),s(_s,Pn),s(_s,aa),s(aa,os),s(os,G),y(i,ye,h),y(i,Ao,h),s(Ao,ea),s(ea,Ms),s(Ms,qn),y(i,de,h),y(i,E,h),s(E,na),s(na,Ls),s(Ls,Dn),s(E,An),s(E,Ns),s(Ns,On),s(Ns,Vs),s(Vs,Hn),s(Ns,Mn),s(E,Ln),s(E,Rs),s(Rs,Nn),s(Rs,Oo),s(Oo,Vn),s(Rs,Rn),s(E,Gn),s(E,Ho),Ho.innerHTML=vv,s(E,Un),s(E,Gs),s(Gs,jn),s(Gs,Mo),s(Mo,Bn),s(Gs,zn),s(E,Xn),s(E,Lo),Lo.innerHTML=yv,s(E,$n),s(E,No),No.innerHTML=dv,s(E,Fn),s(E,Us),s(Us,Qn),s(Us,Vo),s(Vo,Wn),s(Us,Jn),y(i,ue,h),y(i,ws,h),s(ws,la),s(la,F),s(F,Yn),s(F,Ro),s(Ro,Kn),s(F,Zn),s(F,Go),s(Go,sl),s(ws,ol),s(ws,Uo),Uo.innerHTML=uv,y(i,xe,h),y(i,gs,h),s(gs,ra),s(ra,ts),s(ts,tl),s(ts,jo),s(jo,al),s(ts,el),s(gs,nl),s(gs,Bo),Bo.innerHTML=xv,y(i,fe,h),y(i,x,h),s(x,ia),s(ia,js),s(js,ll),s(x,rl),s(x,pa),s(pa,il),s(x,pl),s(x,Bs),s(Bs,cl),s(Bs,ca),s(ca,kl),s(Bs,hl),s(x,vl),s(x,ka),s(ka,ha),s(ha,yl),s(x,dl),s(x,zs),s(zs,ul),s(zs,Xs),s(Xs,xl),s(zs,fl),s(x,ml),s(x,va),s(va,as),s(as,zo),s(zo,ya),s(zo,A),s(x,_l),s(x,Xo),Xo.innerHTML=fv,s(x,wl),s(x,$s),s($s,gl),s($s,$o),s($o,bl),s($s,El),s(x,Il),s(x,Fo),Fo.innerHTML=mv,s(x,Sl),s(x,da),s(da,Tl),s(x,Cl),s(x,Qo),Qo.innerHTML=_v,s(x,Pl),s(x,Fs),s(Fs,ql),s(Fs,Wo),s(Wo,Dl),s(Fs,Al),y(i,me,h),y(i,u,h),s(u,ua),s(ua,Qs),s(Qs,Ol),s(u,Hl),s(u,xa),s(xa,Ml),s(u,Ll),s(u,fa),s(fa,es),s(es,U),s(u,Nl),s(u,Ws),s(Ws,Vl),s(Ws,Jo),s(Jo,Rl),s(Ws,Gl),s(u,Ul),s(u,Yo),Yo.innerHTML=wv,s(u,jl),s(u,ma),s(ma,Bl),s(u,zl),s(u,Ko),Ko.innerHTML=gv,s(u,Xl),s(u,_a),s(_a,$l),s(u,Fl),s(u,Zo),Zo.innerHTML=bv,s(u,Ql),s(u,O),s(O,Wl),s(O,st),s(st,Jl),s(O,Yl),s(O,ot),s(ot,Kl),s(O,Zl),s(O,tt),s(tt,sr),s(O,or),s(O,at),s(at,tr),s(O,ar),s(u,er),s(u,Js),s(Js,nr),s(Js,et),s(et,lr),s(Js,rr),s(u,ir),s(u,nt),nt.innerHTML=Ev,s(u,pr),s(u,Ys),s(Ys,cr),s(Ys,lt),s(lt,kr),s(Ys,hr),s(u,vr),s(u,wa),s(wa,yr),y(i,_e,h),y(i,v,h),s(v,ga),s(ga,Ks),s(Ks,dr),s(v,ur),s(v,ns),s(ns,xr),s(ns,rt),s(rt,fr),s(ns,mr),s(ns,it),s(it,_r),s(ns,wr),s(v,gr),s(v,pt),pt.innerHTML=Iv,s(v,br),s(v,ls),s(ls,Er),s(ls,ct),s(ct,Ir),s(ls,Sr),s(ls,kt),s(kt,Tr),s(ls,Cr),s(v,Pr),s(v,ba),s(ba,qr),s(v,Dr),s(v,ht),ht.innerHTML=Sv,s(v,Ar),s(v,Ea),s(Ea,Or),s(v,Hr),s(v,vt),vt.innerHTML=Tv,s(v,Mr),s(v,Ia),s(Ia,Lr),s(v,Nr),s(v,Sa),s(Sa,rs),s(rs,yt),s(yt,Ta),s(yt,H),s(v,Vr),s(v,X),s(X,Rr),s(X,Ca),s(Ca,Gr),s(X,Ur),s(X,Pa),s(Pa,jr),s(X,Br),s(X,qa),s(qa,zr),s(X,Xr),s(v,$r),s(v,dt),dt.innerHTML=Cv,s(v,Fr),s(v,Da),s(Da,Qr),s(v,Wr),s(v,ut),ut.innerHTML=Pv,s(v,Jr),s(v,Aa),s(Aa,Yr),s(v,Kr),s(v,Oa),s(Oa,Zr),s(v,si),s(v,Zs),s(Zs,oi),s(Zs,Ha),s(Ha,ti),s(Zs,ai),s(v,ei),s(v,xt),xt.innerHTML=qv,s(v,ni),s(v,so),s(so,li),s(so,oo),s(oo,ri),s(so,ii),s(v,pi),s(v,ft),ft.innerHTML=Dv,s(v,ci),s(v,Ma),s(Ma,ki),y(i,we,h),y(i,f,h),s(f,La),s(La,to),s(to,hi),s(f,vi),s(f,Na),s(Na,yi),s(f,di),s(f,Va),s(Va,is),s(is,mt),s(mt,Ra),s(mt,j),s(f,ui),s(f,ao),s(ao,xi),s(ao,eo),s(eo,fi),s(ao,mi),s(f,_i),s(f,_t),_t.innerHTML=Av,s(f,wi),s(f,Ga),s(Ga,gi),s(f,bi),s(f,wt),wt.innerHTML=Ov,s(f,Ei),s(f,ps),s(ps,Ii),s(ps,gt),s(gt,Si),s(ps,Ti),s(ps,bt),s(bt,Ci),s(ps,Pi),s(f,qi),s(f,Ua),s(Ua,Di),s(f,Ai),s(f,Et),Et.innerHTML=Hv,s(f,Oi),s(f,no),s(no,Hi),s(no,It),s(It,Mi),s(no,Li),s(f,Ni),s(f,St),St.innerHTML=Mv,y(i,ge,h),y(i,Tt,h),s(Tt,ja),s(ja,lo),s(lo,Vi),y(i,be,h),y(i,Q,h),s(Q,Ba),s(Ba,ro),s(ro,Ri),s(Q,Gi),s(Q,cs),s(cs,Ui),s(cs,Ct),s(Ct,ji),s(cs,Bi),s(cs,Pt),s(Pt,zi),s(cs,Xi),s(Q,$i),s(Q,io),s(io,za),s(za,Fi),s(io,Qi),s(io,Xa),s(Xa,Wi),y(i,Ee,h),y(i,C,h),s(C,$a),s($a,po),s(po,Ji),s(C,Yi),s(C,co),s(co,Ki),s(co,qt),s(qt,Zi),s(co,sp),s(C,op),s(C,Fa),s(Fa,ks),s(ks,Dt),s(Dt,Qa),s(Dt,B),s(C,tp),s(C,Wa),s(Wa,ap),s(C,ep),s(C,At),At.innerHTML=Lv,y(i,Ie,h),y(i,I,h),s(I,Ja),s(Ja,ko),s(ko,np),s(I,lp),s(I,ho),s(ho,rp),s(ho,Ot),s(Ot,ip),s(ho,pp),s(I,cp),s(I,vo),s(vo,kp),s(vo,Ht),s(Ht,hp),s(vo,vp),s(I,yp),s(I,hs),s(hs,dp),s(hs,Mt),s(Mt,up),s(hs,xp),s(hs,Lt),s(Lt,fp),s(hs,mp),s(I,_p),s(I,yo),s(yo,wp),s(yo,uo),s(uo,gp),s(yo,bp),s(I,Ep),s(I,Nt),Nt.innerHTML=Nv,s(I,Ip),s(I,vs),s(vs,Sp),s(vs,Vt),s(Vt,Tp),s(vs,Cp),s(vs,Rt),s(Rt,Pp),s(vs,qp),y(i,Se,h),y(i,z,h),s(z,Ya),s(Ya,xo),s(xo,Dp),s(z,Ap),s(z,fo),s(fo,Op),s(fo,Ka),s(Ka,Hp),s(fo,Mp),s(z,Lp),s(z,mo),s(mo,Np),s(mo,_o),s(_o,Vp),s(mo,Rp),s(z,Gp),s(z,wo),s(wo,Up),s(wo,go),s(go,jp),s(wo,Bp),y(i,Te,h),y(i,S,h),s(S,Za),s(Za,bo),s(bo,zp),s(S,Xp),s(S,se),s(se,$p),s(S,Fp),s(S,bs),s(bs,W),s(W,Qp),s(W,Gt),s(Gt,Wp),s(W,Jp),s(W,Ut),s(Ut,Yp),s(bs,Kp),s(bs,jt),s(jt,Zp),s(S,sc),s(S,oe),s(oe,oc),s(S,tc),s(S,te),s(te,ac),s(S,ec),s(S,Eo),s(Eo,ae),s(ae,nc),s(Eo,lc),s(Eo,ee),s(ee,rc),s(S,ic),s(S,Io),s(Io,pc),s(Io,So),s(So,cc),s(Io,kc)},p:_y,d(i){i&&o(_),i&&o(M),i&&o(L),i&&o(re),i&&o(us),i&&o(ie),i&&o(qo),i&&o(pe),i&&o(xs),i&&o(ce),i&&o(Do),i&&o(ke),i&&o(fs),i&&o(he),i&&o(ms),i&&o(ve),i&&o(_s),i&&o(ye),i&&o(Ao),i&&o(de),i&&o(E),i&&o(ue),i&&o(ws),i&&o(xe),i&&o(gs),i&&o(fe),i&&o(x),i&&o(me),i&&o(u),i&&o(_e),i&&o(v),i&&o(we),i&&o(f),i&&o(ge),i&&o(Tt),i&&o(be),i&&o(Q),i&&o(Ee),i&&o(C),i&&o(Ie),i&&o(I),i&&o(Se),i&&o(z),i&&o(Te),i&&o(S)}}}function Uy(To){let _,$;const D=[To[0],hv];let Ss={$$slots:{default:[Gy]},$$scope:{ctx:To}};for(let b=0;b<D.length;b+=1)Ss=xc(Ss,D[b]);return _=new wy({props:Ss}),{c(){hy(_.$$.fragment)},l(b){vy(_.$$.fragment,b)},m(b,M){yy(_,b,M),$=!0},p(b,[M]){const L=M&1?dy(D,[M&1&&ov(b[0]),M&0&&ov(hv)]):{};M&2&&(L.$$scope={dirty:M,ctx:b}),_.$set(L)},i(b){$||(uy(_.$$.fragment,b),$=!0)},o(b){xy(_.$$.fragment,b),$=!1},d(b){fy(_,b)}}}const hv={title:"Super Silly Hackathon 2019",date:"2019-12-14T08:00:00Z",lastUpdated:"2019-12-15T15:19:00Z",description:"A quick walkthrough on how I created my pet in the browser for the Super Silly Hackathon 2019.",tags:["JavaScript","hackathon"],series:"Hackathon Projects",label:"blog",tableOfContents:[{link:"inspiration",title:"Inspiration?"},{link:"what-can-it-do",title:"What can it do?",nested:[{link:"1-it-runs-away-from-mouse-cursor",title:"1. It runs away from mouse cursor"},{link:"2-it-eats-whatever-you-try-to-type-into-an-input",title:"2. It eats whatever you try to type into an input"},{link:"3-it-annihilates-the-buttons-you-hover-onto",title:"3. It annihilates the buttons you hover onto"}]},{link:"implementation",title:"Implementation",nested:[{link:"chrome-extension",title:"Chrome Extension",nested:[{link:"1-add-web-accessible-resources-into-the-manifest-json",title:"1. Add  `web_accessible_resources`  into the  `manifest.json`"},{link:"2-prepend-chrome-extension-msg-extension-id-for-the-url",title:"2. Prepend  `chrome-extension://__MSG_@@extension_id__/`  for the URL"}]},{link:"make-it-look-alive",title:"Make it look alive"},{link:"avoid-the-cursor",title:"Avoid the cursor"},{link:"eating-the-characters",title:"Eating the characters"},{link:"annihilate-the-buttons",title:"Annihilate the buttons"}]},{link:"difficulties",title:"Difficulties",nested:[{link:"synchronising-interactions",title:"Synchronising interactions"},{link:"developing-locally",title:"Developing locally",nested:[{link:"postcss-script",title:"PostCSS script"}]}]},{link:"demo",title:"Demo"},{link:"summary",title:"Summary"}]};function jy(To,_,$){return my("blog",{image:gy}),To.$$set=D=>{$(0,_=xc(xc({},_),tv(D)))},_=tv(_),[_]}class Wy extends py{constructor(_){super();cy(this,_,jy,Uy,ky,{})}}export{Wy as default,hv as metadata};
