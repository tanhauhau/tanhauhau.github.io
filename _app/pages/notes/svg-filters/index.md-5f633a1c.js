import{S as _k,i as gk,s as fk,C as Bi,w as zi,x as $i,y as Fi,z as xk,A as wh,q as Vi,o as Wi,B as Ki,r as mk,Y as Eh,e as t,t as n,k as c,c as e,a,h as i,d as o,m as h,b as l,X as g,f as r,g as d,H as s,J as bk}from"../../../chunks/vendor-da4388d4.js";import{B as wk}from"../../../chunks/BlogLayout-14cfab6f.js";import Ek from"./components/Morphology.svelte-eaa57027.js";import qk from"./components/KnockoutText.svelte-f478e4a2.js";import"../../../chunks/stores-1fad7c36.js";import"../../../chunks/ldjson-b0805387.js";/* empty css                                   */var Ck="https://lihautan.com/_app/assets/morphology-knockout-text-80bc6d35.gif",qh="https://lihautan.com/_app/assets/morphology-knockout-text-103ed73e.gif",Ok="https://lihautan.com/_app/assets/morphology-text-cd8b383a.gif",Ch="https://lihautan.com/_app/assets/morphology-text-28b438f3.gif",Ik="https://lihautan.com/_app/assets/morphology-ad3bc3c3.gif",Oh="https://lihautan.com/_app/assets/morphology-10cd672f.gif",Lk="https://lihautan.com/_app/assets/grayscale-768327dd.webp",Sk="https://lihautan.com/_app/assets/grayscale-0dce859e.webp",Mk="https://lihautan.com/_app/assets/grayscale-33b2b9cf.png",Ih="https://lihautan.com/_app/assets/grayscale-29649c6a.png",Pk="https://lihautan.com/_app/assets/darken-e7407b8b.webp",Ak="https://lihautan.com/_app/assets/darken-17dacf86.webp",Rk="https://lihautan.com/_app/assets/darken-7cb5b876.png",Lh="https://lihautan.com/_app/assets/darken-fa35296c.png",Tk="https://lihautan.com/_app/assets/lighten-7beab715.webp",Dk="https://lihautan.com/_app/assets/lighten-82ea2978.webp",Uk="https://lihautan.com/_app/assets/lighten-d3c5b76f.png",Sh="https://lihautan.com/_app/assets/lighten-f877ce5b.png",Gk="https://lihautan.com/_app/assets/change-color-f2d0feb9.webp",Nk="https://lihautan.com/_app/assets/change-color-2044cbfe.webp",Hk="https://lihautan.com/_app/assets/change-color-a8240f3d.png",Mh="https://lihautan.com/_app/assets/change-color-1027cbd1.png",Bk="https://lihautan.com/_app/assets/blow-out-channel-b34ded9d.webp",zk="https://lihautan.com/_app/assets/blow-out-channel-bcacf82f.webp",$k="https://lihautan.com/_app/assets/blow-out-channel-acbf0f8f.png",Ph="https://lihautan.com/_app/assets/blow-out-channel-134f68f6.png",Fk="https://lihautan.com/_app/assets/negative-alpha-feed49ee.webp",Vk="https://lihautan.com/_app/assets/negative-alpha-b06426df.webp",Wk="https://lihautan.com/_app/assets/negative-alpha-17574cb0.png",Ah="https://lihautan.com/_app/assets/negative-alpha-e927d5d5.png",Kk="https://lihautan.com/_app/assets/yellow-filter-2-b8983785.webp",jk="https://lihautan.com/_app/assets/yellow-filter-2-9f27d0e4.webp",Jk="https://lihautan.com/_app/assets/yellow-filter-2-9394724b.png",Rh="https://lihautan.com/_app/assets/yellow-filter-2-ec94cd27.png",Xk="https://lihautan.com/_app/assets/yellow-filter-649a6936.webp",Yk="https://lihautan.com/_app/assets/yellow-filter-191e9d15.webp",Qk="https://lihautan.com/_app/assets/yellow-filter-d4ab9934.png",Th="https://lihautan.com/_app/assets/yellow-filter-83418d30.png",Zk="https://lihautan.com/_app/assets/red-filter-904ea535.webp",sv="https://lihautan.com/_app/assets/red-filter-2b2b2311.webp",tv="https://lihautan.com/_app/assets/red-filter-22f5fba6.png",Dh="https://lihautan.com/_app/assets/red-filter-d24c84a8.png",ev="https://lihautan.com/_app/assets/colorise-yellow-da100449.webp",ov="https://lihautan.com/_app/assets/colorise-yellow-d49b23ef.webp",av="https://lihautan.com/_app/assets/colorise-yellow-b95bc8a2.png",Uh="https://lihautan.com/_app/assets/colorise-yellow-4a79cc53.png",lv="https://lihautan.com/_app/assets/colorise-red-d5c17d52.webp",rv="https://lihautan.com/_app/assets/colorise-red-8acd3f2d.webp",nv="https://lihautan.com/_app/assets/colorise-red-6f1e0445.png",Gh="https://lihautan.com/_app/assets/colorise-red-804127f6.png",iv="https://lihautan.com/_app/assets/default-7bbd3d4d.webp",pv="https://lihautan.com/_app/assets/default-0df15f3a.webp",cv="https://lihautan.com/_app/assets/default-51e8df47.png",Nh="https://lihautan.com/_app/assets/default-9232d8ad.png",hv="https://lihautan.com/_app/assets/step-4-027229bd.webp",kv="https://lihautan.com/_app/assets/step-4-305b68e8.webp",vv="https://lihautan.com/_app/assets/step-4-a843351c.png",Hh="https://lihautan.com/_app/assets/step-4-fe3404cf.png",uv="https://lihautan.com/_app/assets/step-3-55fce715.webp",yv="https://lihautan.com/_app/assets/step-3-8b92aeeb.webp",dv="https://lihautan.com/_app/assets/step-3-90cac784.png",Bh="https://lihautan.com/_app/assets/step-3-69a333cf.png",_v="https://lihautan.com/_app/assets/step-2-85dc1c43.webp",gv="https://lihautan.com/_app/assets/step-2-550d2c6b.webp",fv="https://lihautan.com/_app/assets/step-2-7ff7d6dd.png",zh="https://lihautan.com/_app/assets/step-2-9f1b78c5.png",xv="https://lihautan.com/_app/assets/step-1-734672e5.webp",mv="https://lihautan.com/_app/assets/step-1-a14663a0.webp",bv="https://lihautan.com/_app/assets/step-1-8b202b41.png",$h="https://lihautan.com/_app/assets/step-1-b1f9eb0b.png",wv="https://lihautan.com/_app/assets/hero-twitter-11c7d8fb.jpg";function Ev(qt){let y,O,C,Ks,_,m,Ct,js,Fa,Va,Wa,ls,Js,Ka,Ot,ja,Ja,Xa,Je,Ya,Qa,rs,Za,Xe,sl,tl,Ye,el,ol,ua,Z,Qe,Xs,al,ll,J,Ys,rl,It,nl,il,pl,Ze,cl,hl,ss,Lt,kl,vl,St,ul,yl,Mt,dl,_l,gl,Ss,fl,Pt,xl,ml,At,bl,wl,Rt,Vh=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">svg</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">id</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;my-filter&quot;</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">&lt;!-- take in 1 input &#96;in&#96; --&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &lt;</span><span style="color: var(--shiki-token-string-expression)">feGaussianBlur</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;INPUT_NAME&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">&lt;!-- take in 2 inputs &#96;in&#96; and &#96;in2&#96; --&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &lt;</span><span style="color: var(--shiki-token-string-expression)">feComposite</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;INPUT_NAME_1&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in2</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;INPUT_NAME_2&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">&lt;!-- &#96;result&#96; defines the result name, </span></span>
<span class="line"><span style="color: var(--shiki-token-comment)">		which can be passed in as input for the next filter --&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &lt;</span><span style="color: var(--shiki-token-string-expression)">feGaussianBlur</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;OUTPUT_1&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &lt;</span><span style="color: var(--shiki-token-string-expression)">feGaussianBlur</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;OUTPUT_1&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">&lt;!-- use the source as input for the filter primitive --&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">&lt;!-- apply filter on the source element --&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	&lt;</span><span style="color: var(--shiki-token-string-expression)">feGaussianBlur</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SourceGraphic&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">&lt;!-- apply filter on the alpha channel of the source element,</span></span>
<span class="line"><span style="color: var(--shiki-token-comment)">		the silhouette of the source --&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	&lt;</span><span style="color: var(--shiki-token-string-expression)">feGaussianBlur</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SourceAlpha&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;/</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">svg</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,ya,b,so,Qs,El,ql,ns,to,Cl,Ol,eo,Il,Ll,oo,Sl,Ml,Tt,Wh=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-comment)">&lt;!-- x, y, width, height sets the filter region --&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">filter</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">x</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;-10%&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">y</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;-10%&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">width</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;120%&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">height</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;120%&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">filterUnits</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;objectBoundingBox&quot;</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">&lt;!-- filter primitives here --&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,Pl,ao,Zs,Al,Dt,Rl,Tl,Dl,Ut,Kh=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feFlood</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">flood-color</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;#EB0066&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">flood-opacity</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;0.5&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;flood&quot;</span><span style="color: var(--shiki-color-text)">&gt;&lt;/</span><span style="color: var(--shiki-token-string-expression)">feFlood</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feMerge</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &lt;</span><span style="color: var(--shiki-token-string-expression)">feMergeNode</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SourceGraphic&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &lt;</span><span style="color: var(--shiki-token-string-expression)">feMergeNode</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;flood&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;/</span><span style="color: var(--shiki-token-string-expression)">feMerge</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,da,k,lo,st,Ul,Gl,ro,no,Nl,Hl,Gt,jh=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">id</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;my-filter&quot;</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feGaussianBlur</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SourceAlpha&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">stdDeviation</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;10&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;DROP&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,Bl,io,is,Nt,po,I,ji,zl,Ht,co,$l,Fl,ho,Bt,Vl,tt,Wl,Kl,zt,Jh=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">id</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;my-filter&quot;</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feGaussianBlur</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SourceAlpha&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">stdDeviation</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;10&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;DROP&quot;</span><span style="color: var(--shiki-color-text)">&gt;&lt;/</span><span style="color: var(--shiki-token-string-expression)">feGaussianBlur</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feFlood</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">flood-color</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;#EB0066&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;COLOR&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feComposite</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;COLOR&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in2</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;DROP&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">operator</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;in&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SHADOW&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,jl,ko,ps,$t,vo,L,Ji,Jl,Ft,Vt,Xl,Wt,Yl,Ql,Kt,Xh=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">id</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;my-filter&quot;</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feGaussianBlur</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SourceAlpha&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">stdDeviation</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;10&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;DROP&quot;</span><span style="color: var(--shiki-color-text)">&gt;&lt;/</span><span style="color: var(--shiki-token-string-expression)">feGaussianBlur</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feFlood</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">flood-color</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;#EB0066&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;COLOR&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feComposite</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;COLOR&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in2</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;DROP&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">operator</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;in&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SHADOW&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feOffset</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SHADOW&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">dx</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;10&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">dy</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;10&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;DROPSHADOW&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,Zl,uo,cs,jt,yo,S,Xi,sr,Jt,_o,tr,er,go,fo,or,ar,Xt,Yh=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">id</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;my-filter&quot;</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feGaussianBlur</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SourceAlpha&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">stdDeviation</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;10&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;DROP&quot;</span><span style="color: var(--shiki-color-text)">&gt;&lt;/</span><span style="color: var(--shiki-token-string-expression)">feGaussianBlur</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feFlood</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">flood-color</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;#EB0066&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;COLOR&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feComposite</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;COLOR&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in2</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;DROP&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">operator</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;in&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SHADOW&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feOffset</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SHADOW&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">dx</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;10&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">dy</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;10&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;DROPSHADOW&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feMerge</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &lt;</span><span style="color: var(--shiki-token-string-expression)">feMergeNode</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;DROPSHADOW&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &lt;</span><span style="color: var(--shiki-token-string-expression)">feMergeNode</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SourceGraphic&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;/</span><span style="color: var(--shiki-token-string-expression)">feMerge</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,lr,xo,hs,Yt,mo,M,Yi,_a,w,bo,Ms,rr,Qt,nr,ir,et,pr,ot,cr,hr,kr,Zt,Qh=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">id</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;linear&quot;</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feColorMatrix</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">type</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;matrix&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">values</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;R 0 0 0 0</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">            0 G 0 0 0</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">            0 0 B 0 0</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">            0 0 0 A 0 &quot;</span><span style="color: var(--shiki-color-text)">/&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,vr,se,Zh=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-comment)">/* R G B A 1 */</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-comment)">// R = 1*R + 0*G + 0*B + 0*A + 0</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-comment)">// G = 0*R + 1*G + 0*B + 0*A + 0</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-comment)">// B = 0*R + 0*G + 1*B + 0*A + 0</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-comment)">// A = 0*R + 0*G + 0*B + 1*A + 0</span></span></code></pre>`,ur,wo,Eo,at,yr,ga,ts,qo,lt,dr,_r,Co,ks,te,Oo,P,Qi,gr,vs,Io,fr,xr,ee,mr,us,oe,Lo,A,Zi,br,ae,wr,ys,le,So,R,sp,fa,T,Mo,rt,Er,qr,ds,nt,Po,Cr,Or,_s,Ao,Ir,Lr,Ro,Sr,Mr,re,Pr,gs,ne,To,D,tp,Ar,Do,ie,Rr,fs,pe,Uo,U,ep,Tr,Go,ce,Dr,xs,he,No,G,op,Ur,Ho,it,Gr,ms,ke,Bo,N,ap,zo,$o,Nr,Hr,ve,sk=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feColorMatrix</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">type</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;matrix&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">values</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;1  0  0  0  0</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">            0  1  0  0  0</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">            0  0  1 -1  0</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">            0  0  0  1  0 &quot;</span><span style="color: var(--shiki-color-text)">/&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feColorMatrix</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">type</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;matrix&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">values</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;1  0  0  0  0</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">            0  1  0  0  0</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">            0  0  0  0  0</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">            0  0  0  1  0 &quot;</span><span style="color: var(--shiki-color-text)">/&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,xa,Ps,Fo,pt,Br,zr,ct,Vo,$r,Fr,As,Vr,ue,Wr,Kr,bs,ye,Wo,H,lp,ma,Rs,Ko,ht,jr,Jr,jo,de,Xr,ws,_e,Jo,B,rp,ba,Ts,Xo,kt,Yr,Qr,Yo,Ds,Zr,Es,ge,Qo,z,np,sn,qs,fe,Zo,$,ip,wa,Us,sa,vt,tn,en,ta,xe,on,Cs,me,ea,F,pp,Ea,f,oa,Gs,an,be,ln,rn,ut,nn,yt,pn,cn,hn,X,Ns,kn,we,vn,un,Ee,yn,dn,aa,_n,gn,dt,fn,qe,xn,mn,bn,_t,wn,Ce,En,qn,Cn,Oe,tk=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feMorphology</span><span style="color: var(--shiki-color-text)"> </span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;..&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;..&quot;</span><span style="color: var(--shiki-color-text)"> </span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">operator</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;dilate || erode&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">radius</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,On,la,Os,V,cp,In,gt,Ln,Ie,ft,Sn,Mn,qa,E,ra,Hs,Pn,Le,An,Rn,Y,Tn,Se,Dn,Un,Me,Gn,Nn,Pe,Hn,Bn,zn,Ae,ek=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">h1</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">style</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;filter: url(#outline)&quot;</span><span style="color: var(--shiki-color-text)">&gt;Hello World&lt;/</span><span style="color: var(--shiki-token-string-expression)">h1</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">svg</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	&lt;</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">id</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;outline&quot;</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">		&lt;</span><span style="color: var(--shiki-token-string-expression)">feMorphology</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;THICK&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">operator</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;dilate&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">radius</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;4&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">		&lt;</span><span style="color: var(--shiki-token-string-expression)">feFlood</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">flood-color</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;#32DFEC&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">flood-opacity</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;1&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;COLOR&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">		&lt;</span><span style="color: var(--shiki-token-string-expression)">feComposite</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;COLOR&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in2</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;THICK&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">operator</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;in&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;OUTLINE&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">		&lt;</span><span style="color: var(--shiki-token-string-expression)">feMerge</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">			&lt;</span><span style="color: var(--shiki-token-string-expression)">feMergeNode</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;OUTLINE&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">			&lt;</span><span style="color: var(--shiki-token-string-expression)">feMergeNode</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SourceGraphic&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">		&lt;/</span><span style="color: var(--shiki-token-string-expression)">feMerge</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	&lt;/</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">svg</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,$n,na,Is,W,hp,Fn,xt,mt,Vn,Wn,Re,Kn,Ca,x,ia,Bs,jn,Te,Jn,Xn,Q,Yn,De,Qn,Zn,Ue,si,ti,Ge,ei,oi,ai,Ne,ok=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">h1</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">style</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;filter: url(#outline)&quot;</span><span style="color: var(--shiki-color-text)">&gt;Hello World&lt;/</span><span style="color: var(--shiki-token-string-expression)">h1</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">svg</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	&lt;</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">id</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;outline&quot;</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">		&lt;</span><span style="color: var(--shiki-token-string-expression)">feMorphology</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;THICK&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">operator</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;dilate&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">radius</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;4&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">		&lt;</span><span style="color: var(--shiki-token-string-expression)">feComposite</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;THICK&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in2</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SourceGraphic&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">operator</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;out&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	&lt;/</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">svg</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,li,pa,Ls,K,kp,ri,bt,ni,He,wt,ii,pi,Oa;return gt=new Ek({}),bt=new qk({}),{c(){y=t("section"),O=t("h2"),C=t("a"),Ks=n("SVG Filters 101"),_=c(),m=t("p"),Ct=n("[ "),js=t("a"),Fa=n("Source"),Va=n(" ]"),Wa=c(),ls=t("ul"),Js=t("li"),Ka=n("defined in "),Ot=t("code"),ja=n("<filter>"),Ja=n(" element"),Xa=c(),Je=t("li"),Ya=n("define a series of one or more filter primitives"),Qa=c(),rs=t("li"),Za=n("1 filter primitive performs "),Xe=t("strong"),sl=n("1 single fundamental graphic operation"),tl=n(" on "),Ye=t("strong"),el=n("one or more"),ol=n(" inputs"),ua=c(),Z=t("section"),Qe=t("h3"),Xs=t("a"),al=n("filter primitives"),ll=c(),J=t("ul"),Ys=t("li"),rl=n("filter primitives named start with "),It=t("code"),nl=n("fe"),il=n(', short for "filter effect"'),pl=c(),Ze=t("li"),cl=n("filter primitives take 1-2 inputs and output 1 result"),hl=c(),ss=t("li"),Lt=t("code"),kl=n("in"),vl=n(" and "),St=t("code"),ul=n("in2"),yl=n(" attribute for input, "),Mt=t("code"),dl=n("result"),_l=n(" attribute for output"),gl=c(),Ss=t("li"),fl=n("input takes in result, "),Pt=t("code"),xl=n("SourceGraphic"),ml=n(" and "),At=t("code"),bl=n("SourceAlpha"),wl=c(),Rt=t("div"),ya=c(),b=t("section"),so=t("h3"),Qs=t("a"),El=n("Filter region"),ql=c(),ns=t("ul"),to=t("li"),Cl=n("filter region is based on the bounding box of the element"),Ol=c(),eo=t("li"),Il=n("filter result beyond filter region will be clipped off"),Ll=c(),oo=t("li"),Sl=n("default filter region extends 10% the width and height of bounding box in all 4 directions"),Ml=c(),Tt=t("div"),Pl=c(),ao=t("ul"),Zs=t("li"),Al=n("use "),Dt=t("code"),Rl=n("<feFlood>"),Tl=n(" to figure out the filter region"),Dl=c(),Ut=t("div"),da=c(),k=t("section"),lo=t("h3"),st=t("a"),Ul=n("Create a drop shadow"),Gl=c(),ro=t("ol"),no=t("li"),Nl=n("Blur the silhouette of the layer"),Hl=c(),Gt=t("div"),Bl=c(),io=t("p"),is=t("span"),Nt=t("picture"),po=t("source"),I=t("img"),zl=c(),Ht=t("ol"),co=t("li"),$l=n("Composite the blur layer with a solid color layer to create a colored blur"),Fl=c(),ho=t("ul"),Bt=t("li"),Vl=n("Learn compositing + blending in "),tt=t("a"),Wl=n("https://www.sarasoueidan.com/blog/compositing-and-blending-in-css/"),Kl=c(),zt=t("div"),jl=c(),ko=t("p"),ps=t("span"),$t=t("picture"),vo=t("source"),L=t("img"),Jl=c(),Ft=t("ol"),Vt=t("li"),Xl=n("Shift the shadow bottom-right with "),Wt=t("code"),Yl=n("<feOffset>"),Ql=c(),Kt=t("div"),Zl=c(),uo=t("p"),cs=t("span"),jt=t("picture"),yo=t("source"),S=t("img"),sr=c(),Jt=t("ol"),_o=t("li"),tr=n("Combine the shadow with the original image"),er=c(),go=t("ul"),fo=t("li"),or=n("layer merge in order of declaration, latter layer stacks on top of previous layer"),ar=c(),Xt=t("div"),lr=c(),xo=t("p"),hs=t("span"),Yt=t("picture"),mo=t("source"),M=t("img"),_a=c(),w=t("section"),bo=t("h2"),Ms=t("a"),rr=n("Finessing "),Qt=t("code"),nr=n("feColorMatrix"),ir=c(),et=t("p"),pr=n("[ "),ot=t("a"),cr=n("Source"),hr=n(" ]"),kr=c(),Zt=t("div"),vr=c(),se=t("div"),ur=c(),wo=t("ul"),Eo=t("li"),at=t("a"),yr=n("color matrix playground"),ga=c(),ts=t("section"),qo=t("h3"),lt=t("a"),dr=n("1. Colorizing"),_r=c(),Co=t("p"),ks=t("span"),te=t("picture"),Oo=t("source"),P=t("img"),gr=c(),vs=t("ul"),Io=t("li"),fr=n("Removing other color to colorise image into the remaining color"),xr=c(),ee=t("li"),mr=n(`colorise red -> remove blue & green
`),us=t("span"),oe=t("picture"),Lo=t("source"),A=t("img"),br=c(),ae=t("li"),wr=n(`colorise yellow -> remove blue (red + green = yellow)
`),ys=t("span"),le=t("picture"),So=t("source"),R=t("img"),fa=c(),T=t("section"),Mo=t("h3"),rt=t("a"),Er=n("2. Alpha values"),qr=c(),ds=t("ul"),nt=t("li"),Po=t("p"),Cr=n("add opacity level to the red channel"),Or=c(),_s=t("ul"),Ao=t("li"),Ir=n("any red remaining red"),Lr=c(),Ro=t("li"),Sr=n("green -> yellow (red + green = yellow)"),Mr=c(),re=t("li"),Pr=n(`blue -> magenta (red + blue = magenta)
`),gs=t("span"),ne=t("picture"),To=t("source"),D=t("img"),Ar=c(),Do=t("li"),ie=t("p"),Rr=n(`hard yellow filter
`),fs=t("span"),pe=t("picture"),Uo=t("source"),U=t("img"),Tr=c(),Go=t("li"),ce=t("p"),Dr=n(`have a value some where between 0-1 to see the mixture in the shadow
`),xs=t("span"),he=t("picture"),No=t("source"),G=t("img"),Ur=c(),Ho=t("ul"),it=t("li"),Gr=n(`negative value could offset the channel by the amount of opacity
`),ms=t("span"),ke=t("picture"),Bo=t("source"),N=t("img"),zo=t("ul"),$o=t("li"),Nr=n("the following 2 color matrix is identical"),Hr=c(),ve=t("div"),xa=c(),Ps=t("section"),Fo=t("h3"),pt=t("a"),Br=n("3. Blowing out channels"),zr=c(),ct=t("ul"),Vo=t("li"),$r=n("turn 1 color to white"),Fr=c(),As=t("li"),Vr=n("set the alpha channel to "),ue=t("code"),Wr=n("-2"),Kr=c(),bs=t("span"),ye=t("picture"),Wo=t("source"),H=t("img"),ma=c(),Rs=t("section"),Ko=t("h3"),ht=t("a"),jr=n("4. Change color"),Jr=c(),jo=t("ul"),de=t("li"),Xr=n(`No more green, any green looks like magenta now. (luminosity of green is lost)
`),ws=t("span"),_e=t("picture"),Jo=t("source"),B=t("img"),ba=c(),Ts=t("section"),Xo=t("h3"),kt=t("a"),Yr=n("5. Lighten or darken"),Qr=c(),Yo=t("ul"),Ds=t("li"),Zr=n(`increase intensity to lighten, decrease to darken
`),Es=t("span"),ge=t("picture"),Qo=t("source"),z=t("img"),sn=c(),qs=t("span"),fe=t("picture"),Zo=t("source"),$=t("img"),wa=c(),Us=t("section"),sa=t("h3"),vt=t("a"),tn=n("6. Grayscale"),en=c(),ta=t("ul"),xe=t("li"),on=n(`make sure red, green, blue have the same value
`),Cs=t("span"),me=t("picture"),ea=t("source"),F=t("img"),Ea=c(),f=t("section"),oa=t("h2"),Gs=t("a"),an=n("Outline Text with "),be=t("code"),ln=n("<feMorphology>"),rn=c(),ut=t("p"),nn=n("[ "),yt=t("a"),pn=n("Source"),cn=n(" ]"),hn=c(),X=t("ul"),Ns=t("li"),kn=n("\u{1F5BC} image size gets smaller when "),we=t("code"),vn=n("erode"),un=n(", larger when "),Ee=t("code"),yn=n("dilate"),dn=c(),aa=t("li"),_n=n("\u{1F5BC} image looks like painted with large brush \u{1F58C}"),gn=c(),dt=t("li"),fn=n("\u{1F4DD} "),qe=t("code"),xn=n("erode"),mn=n(" sets each pixel to the darkest / most transparent neighbor"),bn=c(),_t=t("li"),wn=n("\u{1F4DD} "),Ce=t("code"),En=n("dilate"),qn=n(" sets each pixel to the brightest / least transparent neighbor"),Cn=c(),Oe=t("div"),On=c(),la=t("p"),Os=t("span"),V=t("img"),In=c(),zi(gt.$$.fragment),Ln=c(),Ie=t("p"),ft=t("a"),Sn=n("REPL"),Mn=n(" to see effect with different radius."),qa=c(),E=t("section"),ra=t("h3"),Hs=t("a"),Pn=n("Adding Colored Outline to Text with "),Le=t("code"),An=n("<feMorphology />"),Rn=c(),Y=t("p"),Tn=n("1\uFE0F\u20E3 expand the text with "),Se=t("code"),Dn=n('<feMorphology operator="dilate" />'),Un=n(`
2\uFE0F\u20E3 colorize via `),Me=t("code"),Gn=n("<feFlood>"),Nn=n(" with solid color and "),Pe=t("code"),Hn=n("<feComposite />"),Bn=n(`
3\uFE0F\u20E3 merge the expanded colored text with the original text`),zn=c(),Ae=t("div"),$n=c(),na=t("p"),Is=t("span"),W=t("img"),Fn=c(),xt=t("p"),mt=t("a"),Vn=n("REPL"),Wn=n(" to visualise "),Re=t("code"),Kn=n("<feMorphology>"),Ca=c(),x=t("section"),ia=t("h3"),Bs=t("a"),jn=n("Knockout text with "),Te=t("code"),Jn=n("<feMorphology />"),Xn=c(),Q=t("p"),Yn=n("1\uFE0F\u20E3 expand the text with "),De=t("code"),Qn=n('<feMorphology operator="dilate" />'),Zn=n(`
2\uFE0F\u20E3 composite with the source with `),Ue=t("code"),si=n("<feComposite />"),ti=n(" using "),Ge=t("code"),ei=n("out"),oi=n(" operator"),ai=c(),Ne=t("div"),li=c(),pa=t("p"),Ls=t("span"),K=t("img"),ri=c(),zi(bt.$$.fragment),ni=c(),He=t("p"),wt=t("a"),ii=n("REPL"),pi=n(" to visualise the build up the knock-out text."),this.h()},l(p){y=e(p,"SECTION",{});var v=a(y);O=e(v,"H2",{});var vp=a(O);C=e(vp,"A",{href:!0,id:!0});var up=a(C);Ks=i(up,"SVG Filters 101"),up.forEach(o),vp.forEach(o),_=h(v),m=e(v,"P",{});var Ia=a(m);Ct=i(Ia,"[ "),js=e(Ia,"A",{href:!0,rel:!0});var yp=a(js);Fa=i(yp,"Source"),yp.forEach(o),Va=i(Ia," ]"),Ia.forEach(o),Wa=h(v),ls=e(v,"UL",{});var Be=a(ls);Js=e(Be,"LI",{});var La=a(Js);Ka=i(La,"defined in "),Ot=e(La,"CODE",{class:!0});var dp=a(Ot);ja=i(dp,"<filter>"),dp.forEach(o),Ja=i(La," element"),La.forEach(o),Xa=h(Be),Je=e(Be,"LI",{});var _p=a(Je);Ya=i(_p,"define a series of one or more filter primitives"),_p.forEach(o),Qa=h(Be),rs=e(Be,"LI",{});var ze=a(rs);Za=i(ze,"1 filter primitive performs "),Xe=e(ze,"STRONG",{});var gp=a(Xe);sl=i(gp,"1 single fundamental graphic operation"),gp.forEach(o),tl=i(ze," on "),Ye=e(ze,"STRONG",{});var fp=a(Ye);el=i(fp,"one or more"),fp.forEach(o),ol=i(ze," inputs"),ze.forEach(o),Be.forEach(o),v.forEach(o),ua=h(p),Z=e(p,"SECTION",{});var $e=a(Z);Qe=e($e,"H3",{});var xp=a(Qe);Xs=e(xp,"A",{href:!0,id:!0});var mp=a(Xs);al=i(mp,"filter primitives"),mp.forEach(o),xp.forEach(o),ll=h($e),J=e($e,"UL",{});var zs=a(J);Ys=e(zs,"LI",{});var Sa=a(Ys);rl=i(Sa,"filter primitives named start with "),It=e(Sa,"CODE",{class:!0});var bp=a(It);nl=i(bp,"fe"),bp.forEach(o),il=i(Sa,', short for "filter effect"'),Sa.forEach(o),pl=h(zs),Ze=e(zs,"LI",{});var wp=a(Ze);cl=i(wp,"filter primitives take 1-2 inputs and output 1 result"),wp.forEach(o),hl=h(zs),ss=e(zs,"LI",{});var Et=a(ss);Lt=e(Et,"CODE",{class:!0});var Ep=a(Lt);kl=i(Ep,"in"),Ep.forEach(o),vl=i(Et," and "),St=e(Et,"CODE",{class:!0});var qp=a(St);ul=i(qp,"in2"),qp.forEach(o),yl=i(Et," attribute for input, "),Mt=e(Et,"CODE",{class:!0});var Cp=a(Mt);dl=i(Cp,"result"),Cp.forEach(o),_l=i(Et," attribute for output"),Et.forEach(o),gl=h(zs),Ss=e(zs,"LI",{});var ca=a(Ss);fl=i(ca,"input takes in result, "),Pt=e(ca,"CODE",{class:!0});var Op=a(Pt);xl=i(Op,"SourceGraphic"),Op.forEach(o),ml=i(ca," and "),At=e(ca,"CODE",{class:!0});var Ip=a(At);bl=i(Ip,"SourceAlpha"),Ip.forEach(o),ca.forEach(o),zs.forEach(o),wl=h($e),Rt=e($e,"DIV",{class:!0});var ak=a(Rt);ak.forEach(o),$e.forEach(o),ya=h(p),b=e(p,"SECTION",{});var es=a(b);so=e(es,"H3",{});var Lp=a(so);Qs=e(Lp,"A",{href:!0,id:!0});var Sp=a(Qs);El=i(Sp,"Filter region"),Sp.forEach(o),Lp.forEach(o),ql=h(es),ns=e(es,"UL",{});var Fe=a(ns);to=e(Fe,"LI",{});var Mp=a(to);Cl=i(Mp,"filter region is based on the bounding box of the element"),Mp.forEach(o),Ol=h(Fe),eo=e(Fe,"LI",{});var Pp=a(eo);Il=i(Pp,"filter result beyond filter region will be clipped off"),Pp.forEach(o),Ll=h(Fe),oo=e(Fe,"LI",{});var Ap=a(oo);Sl=i(Ap,"default filter region extends 10% the width and height of bounding box in all 4 directions"),Ap.forEach(o),Fe.forEach(o),Ml=h(es),Tt=e(es,"DIV",{class:!0});var lk=a(Tt);lk.forEach(o),Pl=h(es),ao=e(es,"UL",{});var Rp=a(ao);Zs=e(Rp,"LI",{});var Ma=a(Zs);Al=i(Ma,"use "),Dt=e(Ma,"CODE",{class:!0});var Tp=a(Dt);Rl=i(Tp,"<feFlood>"),Tp.forEach(o),Tl=i(Ma," to figure out the filter region"),Ma.forEach(o),Rp.forEach(o),Dl=h(es),Ut=e(es,"DIV",{class:!0});var rk=a(Ut);rk.forEach(o),es.forEach(o),da=h(p),k=e(p,"SECTION",{});var u=a(k);lo=e(u,"H3",{});var Dp=a(lo);st=e(Dp,"A",{href:!0,id:!0});var Up=a(st);Ul=i(Up,"Create a drop shadow"),Up.forEach(o),Dp.forEach(o),Gl=h(u),ro=e(u,"OL",{});var Gp=a(ro);no=e(Gp,"LI",{});var Np=a(no);Nl=i(Np,"Blur the silhouette of the layer"),Np.forEach(o),Gp.forEach(o),Hl=h(u),Gt=e(u,"DIV",{class:!0});var nk=a(Gt);nk.forEach(o),Bl=h(u),io=e(u,"P",{});var Hp=a(io);is=e(Hp,"SPAN",{style:!0});var Bp=a(is);Nt=e(Bp,"PICTURE",{});var ci=a(Nt);po=e(ci,"SOURCE",{type:!0,srcset:!0}),I=e(ci,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),ci.forEach(o),Bp.forEach(o),Hp.forEach(o),zl=h(u),Ht=e(u,"OL",{start:!0});var zp=a(Ht);co=e(zp,"LI",{});var $p=a(co);$l=i($p,"Composite the blur layer with a solid color layer to create a colored blur"),$p.forEach(o),zp.forEach(o),Fl=h(u),ho=e(u,"UL",{});var Fp=a(ho);Bt=e(Fp,"LI",{});var hi=a(Bt);Vl=i(hi,"Learn compositing + blending in "),tt=e(hi,"A",{href:!0,rel:!0});var Vp=a(tt);Wl=i(Vp,"https://www.sarasoueidan.com/blog/compositing-and-blending-in-css/"),Vp.forEach(o),hi.forEach(o),Fp.forEach(o),Kl=h(u),zt=e(u,"DIV",{class:!0});var ik=a(zt);ik.forEach(o),jl=h(u),ko=e(u,"P",{});var Wp=a(ko);ps=e(Wp,"SPAN",{style:!0});var Kp=a(ps);$t=e(Kp,"PICTURE",{});var ki=a($t);vo=e(ki,"SOURCE",{type:!0,srcset:!0}),L=e(ki,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),ki.forEach(o),Kp.forEach(o),Wp.forEach(o),Jl=h(u),Ft=e(u,"OL",{start:!0});var jp=a(Ft);Vt=e(jp,"LI",{});var vi=a(Vt);Xl=i(vi,"Shift the shadow bottom-right with "),Wt=e(vi,"CODE",{class:!0});var Jp=a(Wt);Yl=i(Jp,"<feOffset>"),Jp.forEach(o),vi.forEach(o),jp.forEach(o),Ql=h(u),Kt=e(u,"DIV",{class:!0});var pk=a(Kt);pk.forEach(o),Zl=h(u),uo=e(u,"P",{});var Xp=a(uo);cs=e(Xp,"SPAN",{style:!0});var Yp=a(cs);jt=e(Yp,"PICTURE",{});var ui=a(jt);yo=e(ui,"SOURCE",{type:!0,srcset:!0}),S=e(ui,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),ui.forEach(o),Yp.forEach(o),Xp.forEach(o),sr=h(u),Jt=e(u,"OL",{start:!0});var Qp=a(Jt);_o=e(Qp,"LI",{});var Zp=a(_o);tr=i(Zp,"Combine the shadow with the original image"),Zp.forEach(o),Qp.forEach(o),er=h(u),go=e(u,"UL",{});var sc=a(go);fo=e(sc,"LI",{});var tc=a(fo);or=i(tc,"layer merge in order of declaration, latter layer stacks on top of previous layer"),tc.forEach(o),sc.forEach(o),ar=h(u),Xt=e(u,"DIV",{class:!0});var ck=a(Xt);ck.forEach(o),lr=h(u),xo=e(u,"P",{});var ec=a(xo);hs=e(ec,"SPAN",{style:!0});var oc=a(hs);Yt=e(oc,"PICTURE",{});var yi=a(Yt);mo=e(yi,"SOURCE",{type:!0,srcset:!0}),M=e(yi,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),yi.forEach(o),oc.forEach(o),ec.forEach(o),u.forEach(o),_a=h(p),w=e(p,"SECTION",{});var os=a(w);bo=e(os,"H2",{});var ac=a(bo);Ms=e(ac,"A",{href:!0,id:!0});var di=a(Ms);rr=i(di,"Finessing "),Qt=e(di,"CODE",{class:!0});var lc=a(Qt);nr=i(lc,"feColorMatrix"),lc.forEach(o),di.forEach(o),ac.forEach(o),ir=h(os),et=e(os,"P",{});var Pa=a(et);pr=i(Pa,"[ "),ot=e(Pa,"A",{href:!0,rel:!0});var rc=a(ot);cr=i(rc,"Source"),rc.forEach(o),hr=i(Pa," ]"),Pa.forEach(o),kr=h(os),Zt=e(os,"DIV",{class:!0});var hk=a(Zt);hk.forEach(o),vr=h(os),se=e(os,"DIV",{class:!0});var kk=a(se);kk.forEach(o),ur=h(os),wo=e(os,"UL",{});var nc=a(wo);Eo=e(nc,"LI",{});var ic=a(Eo);at=e(ic,"A",{href:!0,rel:!0});var pc=a(at);yr=i(pc,"color matrix playground"),pc.forEach(o),ic.forEach(o),nc.forEach(o),os.forEach(o),ga=h(p),ts=e(p,"SECTION",{});var Ve=a(ts);qo=e(Ve,"H3",{});var cc=a(qo);lt=e(cc,"A",{href:!0,id:!0});var hc=a(lt);dr=i(hc,"1. Colorizing"),hc.forEach(o),cc.forEach(o),_r=h(Ve),Co=e(Ve,"P",{});var kc=a(Co);ks=e(kc,"SPAN",{style:!0});var vc=a(ks);te=e(vc,"PICTURE",{});var _i=a(te);Oo=e(_i,"SOURCE",{type:!0,srcset:!0}),P=e(_i,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),_i.forEach(o),vc.forEach(o),kc.forEach(o),gr=h(Ve),vs=e(Ve,"UL",{});var We=a(vs);Io=e(We,"LI",{});var uc=a(Io);fr=i(uc,"Removing other color to colorise image into the remaining color"),uc.forEach(o),xr=h(We),ee=e(We,"LI",{});var gi=a(ee);mr=i(gi,`colorise red -> remove blue & green
`),us=e(gi,"SPAN",{style:!0});var yc=a(us);oe=e(yc,"PICTURE",{});var fi=a(oe);Lo=e(fi,"SOURCE",{type:!0,srcset:!0}),A=e(fi,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),fi.forEach(o),yc.forEach(o),gi.forEach(o),br=h(We),ae=e(We,"LI",{});var xi=a(ae);wr=i(xi,`colorise yellow -> remove blue (red + green = yellow)
`),ys=e(xi,"SPAN",{style:!0});var dc=a(ys);le=e(dc,"PICTURE",{});var mi=a(le);So=e(mi,"SOURCE",{type:!0,srcset:!0}),R=e(mi,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),mi.forEach(o),dc.forEach(o),xi.forEach(o),We.forEach(o),Ve.forEach(o),fa=h(p),T=e(p,"SECTION",{});var $s=a(T);Mo=e($s,"H3",{});var _c=a(Mo);rt=e(_c,"A",{href:!0,id:!0});var gc=a(rt);Er=i(gc,"2. Alpha values"),gc.forEach(o),_c.forEach(o),qr=h($s),ds=e($s,"UL",{});var Ke=a(ds);nt=e(Ke,"LI",{});var Aa=a(nt);Po=e(Aa,"P",{});var fc=a(Po);Cr=i(fc,"add opacity level to the red channel"),fc.forEach(o),Or=h(Aa),_s=e(Aa,"UL",{});var je=a(_s);Ao=e(je,"LI",{});var xc=a(Ao);Ir=i(xc,"any red remaining red"),xc.forEach(o),Lr=h(je),Ro=e(je,"LI",{});var mc=a(Ro);Sr=i(mc,"green -> yellow (red + green = yellow)"),mc.forEach(o),Mr=h(je),re=e(je,"LI",{});var bi=a(re);Pr=i(bi,`blue -> magenta (red + blue = magenta)
`),gs=e(bi,"SPAN",{style:!0});var bc=a(gs);ne=e(bc,"PICTURE",{});var wi=a(ne);To=e(wi,"SOURCE",{type:!0,srcset:!0}),D=e(wi,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),wi.forEach(o),bc.forEach(o),bi.forEach(o),je.forEach(o),Aa.forEach(o),Ar=h(Ke),Do=e(Ke,"LI",{});var wc=a(Do);ie=e(wc,"P",{});var Ei=a(ie);Rr=i(Ei,`hard yellow filter
`),fs=e(Ei,"SPAN",{style:!0});var Ec=a(fs);pe=e(Ec,"PICTURE",{});var qi=a(pe);Uo=e(qi,"SOURCE",{type:!0,srcset:!0}),U=e(qi,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),qi.forEach(o),Ec.forEach(o),Ei.forEach(o),wc.forEach(o),Tr=h(Ke),Go=e(Ke,"LI",{});var qc=a(Go);ce=e(qc,"P",{});var Ci=a(ce);Dr=i(Ci,`have a value some where between 0-1 to see the mixture in the shadow
`),xs=e(Ci,"SPAN",{style:!0});var Cc=a(xs);he=e(Cc,"PICTURE",{});var Oi=a(he);No=e(Oi,"SOURCE",{type:!0,srcset:!0}),G=e(Oi,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),Oi.forEach(o),Cc.forEach(o),Ci.forEach(o),qc.forEach(o),Ke.forEach(o),Ur=h($s),Ho=e($s,"UL",{});var Oc=a(Ho);it=e(Oc,"LI",{});var Ra=a(it);Gr=i(Ra,`negative value could offset the channel by the amount of opacity
`),ms=e(Ra,"SPAN",{style:!0});var Ic=a(ms);ke=e(Ic,"PICTURE",{});var Ii=a(ke);Bo=e(Ii,"SOURCE",{type:!0,srcset:!0}),N=e(Ii,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),Ii.forEach(o),Ic.forEach(o),zo=e(Ra,"UL",{});var Lc=a(zo);$o=e(Lc,"LI",{});var Sc=a($o);Nr=i(Sc,"the following 2 color matrix is identical"),Sc.forEach(o),Lc.forEach(o),Ra.forEach(o),Oc.forEach(o),Hr=h($s),ve=e($s,"DIV",{class:!0});var vk=a(ve);vk.forEach(o),$s.forEach(o),xa=h(p),Ps=e(p,"SECTION",{});var Ta=a(Ps);Fo=e(Ta,"H3",{});var Mc=a(Fo);pt=e(Mc,"A",{href:!0,id:!0});var Pc=a(pt);Br=i(Pc,"3. Blowing out channels"),Pc.forEach(o),Mc.forEach(o),zr=h(Ta),ct=e(Ta,"UL",{});var Da=a(ct);Vo=e(Da,"LI",{});var Ac=a(Vo);$r=i(Ac,"turn 1 color to white"),Ac.forEach(o),Fr=h(Da),As=e(Da,"LI",{});var ha=a(As);Vr=i(ha,"set the alpha channel to "),ue=e(ha,"CODE",{class:!0});var Rc=a(ue);Wr=i(Rc,"-2"),Rc.forEach(o),Kr=h(ha),bs=e(ha,"SPAN",{style:!0});var Tc=a(bs);ye=e(Tc,"PICTURE",{});var Li=a(ye);Wo=e(Li,"SOURCE",{type:!0,srcset:!0}),H=e(Li,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),Li.forEach(o),Tc.forEach(o),ha.forEach(o),Da.forEach(o),Ta.forEach(o),ma=h(p),Rs=e(p,"SECTION",{});var Ua=a(Rs);Ko=e(Ua,"H3",{});var Dc=a(Ko);ht=e(Dc,"A",{href:!0,id:!0});var Uc=a(ht);jr=i(Uc,"4. Change color"),Uc.forEach(o),Dc.forEach(o),Jr=h(Ua),jo=e(Ua,"UL",{});var Gc=a(jo);de=e(Gc,"LI",{});var Si=a(de);Xr=i(Si,`No more green, any green looks like magenta now. (luminosity of green is lost)
`),ws=e(Si,"SPAN",{style:!0});var Nc=a(ws);_e=e(Nc,"PICTURE",{});var Mi=a(_e);Jo=e(Mi,"SOURCE",{type:!0,srcset:!0}),B=e(Mi,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),Mi.forEach(o),Nc.forEach(o),Si.forEach(o),Gc.forEach(o),Ua.forEach(o),ba=h(p),Ts=e(p,"SECTION",{});var Ga=a(Ts);Xo=e(Ga,"H3",{});var Hc=a(Xo);kt=e(Hc,"A",{href:!0,id:!0});var Bc=a(kt);Yr=i(Bc,"5. Lighten or darken"),Bc.forEach(o),Hc.forEach(o),Qr=h(Ga),Yo=e(Ga,"UL",{});var zc=a(Yo);Ds=e(zc,"LI",{});var ka=a(Ds);Zr=i(ka,`increase intensity to lighten, decrease to darken
`),Es=e(ka,"SPAN",{style:!0});var $c=a(Es);ge=e($c,"PICTURE",{});var Pi=a(ge);Qo=e(Pi,"SOURCE",{type:!0,srcset:!0}),z=e(Pi,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),Pi.forEach(o),$c.forEach(o),sn=h(ka),qs=e(ka,"SPAN",{style:!0});var Fc=a(qs);fe=e(Fc,"PICTURE",{});var Ai=a(fe);Zo=e(Ai,"SOURCE",{type:!0,srcset:!0}),$=e(Ai,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),Ai.forEach(o),Fc.forEach(o),ka.forEach(o),zc.forEach(o),Ga.forEach(o),wa=h(p),Us=e(p,"SECTION",{});var Na=a(Us);sa=e(Na,"H3",{});var Vc=a(sa);vt=e(Vc,"A",{href:!0,id:!0});var Wc=a(vt);tn=i(Wc,"6. Grayscale"),Wc.forEach(o),Vc.forEach(o),en=h(Na),ta=e(Na,"UL",{});var Kc=a(ta);xe=e(Kc,"LI",{});var Ri=a(xe);on=i(Ri,`make sure red, green, blue have the same value
`),Cs=e(Ri,"SPAN",{style:!0});var jc=a(Cs);me=e(jc,"PICTURE",{});var Ti=a(me);ea=e(Ti,"SOURCE",{type:!0,srcset:!0}),F=e(Ti,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),Ti.forEach(o),jc.forEach(o),Ri.forEach(o),Kc.forEach(o),Na.forEach(o),Ea=h(p),f=e(p,"SECTION",{});var q=a(f);oa=e(q,"H2",{});var Jc=a(oa);Gs=e(Jc,"A",{href:!0,id:!0});var Di=a(Gs);an=i(Di,"Outline Text with "),be=e(Di,"CODE",{class:!0});var Xc=a(be);ln=i(Xc,"<feMorphology>"),Xc.forEach(o),Di.forEach(o),Jc.forEach(o),rn=h(q),ut=e(q,"P",{});var Ha=a(ut);nn=i(Ha,"[ "),yt=e(Ha,"A",{href:!0,rel:!0});var Yc=a(yt);pn=i(Yc,"Source"),Yc.forEach(o),cn=i(Ha," ]"),Ha.forEach(o),hn=h(q),X=e(q,"UL",{});var Fs=a(X);Ns=e(Fs,"LI",{});var va=a(Ns);kn=i(va,"\u{1F5BC} image size gets smaller when "),we=e(va,"CODE",{class:!0});var Qc=a(we);vn=i(Qc,"erode"),Qc.forEach(o),un=i(va,", larger when "),Ee=e(va,"CODE",{class:!0});var Zc=a(Ee);yn=i(Zc,"dilate"),Zc.forEach(o),va.forEach(o),dn=h(Fs),aa=e(Fs,"LI",{});var sh=a(aa);_n=i(sh,"\u{1F5BC} image looks like painted with large brush \u{1F58C}"),sh.forEach(o),gn=h(Fs),dt=e(Fs,"LI",{});var Ba=a(dt);fn=i(Ba,"\u{1F4DD} "),qe=e(Ba,"CODE",{class:!0});var th=a(qe);xn=i(th,"erode"),th.forEach(o),mn=i(Ba," sets each pixel to the darkest / most transparent neighbor"),Ba.forEach(o),bn=h(Fs),_t=e(Fs,"LI",{});var za=a(_t);wn=i(za,"\u{1F4DD} "),Ce=e(za,"CODE",{class:!0});var eh=a(Ce);En=i(eh,"dilate"),eh.forEach(o),qn=i(za," sets each pixel to the brightest / least transparent neighbor"),za.forEach(o),Fs.forEach(o),Cn=h(q),Oe=e(q,"DIV",{class:!0});var uk=a(Oe);uk.forEach(o),On=h(q),la=e(q,"P",{});var oh=a(la);Os=e(oh,"SPAN",{style:!0});var ah=a(Os);V=e(ah,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),ah.forEach(o),oh.forEach(o),In=h(q),$i(gt.$$.fragment,q),Ln=h(q),Ie=e(q,"P",{});var Ui=a(Ie);ft=e(Ui,"A",{href:!0,rel:!0});var lh=a(ft);Sn=i(lh,"REPL"),lh.forEach(o),Mn=i(Ui," to see effect with different radius."),Ui.forEach(o),q.forEach(o),qa=h(p),E=e(p,"SECTION",{});var as=a(E);ra=e(as,"H3",{});var rh=a(ra);Hs=e(rh,"A",{href:!0,id:!0});var Gi=a(Hs);Pn=i(Gi,"Adding Colored Outline to Text with "),Le=e(Gi,"CODE",{class:!0});var nh=a(Le);An=i(nh,"<feMorphology />"),nh.forEach(o),Gi.forEach(o),rh.forEach(o),Rn=h(as),Y=e(as,"P",{});var Vs=a(Y);Tn=i(Vs,"1\uFE0F\u20E3 expand the text with "),Se=e(Vs,"CODE",{class:!0});var ih=a(Se);Dn=i(ih,'<feMorphology operator="dilate" />'),ih.forEach(o),Un=i(Vs,`
2\uFE0F\u20E3 colorize via `),Me=e(Vs,"CODE",{class:!0});var ph=a(Me);Gn=i(ph,"<feFlood>"),ph.forEach(o),Nn=i(Vs," with solid color and "),Pe=e(Vs,"CODE",{class:!0});var ch=a(Pe);Hn=i(ch,"<feComposite />"),ch.forEach(o),Bn=i(Vs,`
3\uFE0F\u20E3 merge the expanded colored text with the original text`),Vs.forEach(o),zn=h(as),Ae=e(as,"DIV",{class:!0});var yk=a(Ae);yk.forEach(o),$n=h(as),na=e(as,"P",{});var hh=a(na);Is=e(hh,"SPAN",{style:!0});var kh=a(Is);W=e(kh,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),kh.forEach(o),hh.forEach(o),Fn=h(as),xt=e(as,"P",{});var $a=a(xt);mt=e($a,"A",{href:!0,rel:!0});var vh=a(mt);Vn=i(vh,"REPL"),vh.forEach(o),Wn=i($a," to visualise "),Re=e($a,"CODE",{class:!0});var uh=a(Re);Kn=i(uh,"<feMorphology>"),uh.forEach(o),$a.forEach(o),as.forEach(o),Ca=h(p),x=e(p,"SECTION",{});var j=a(x);ia=e(j,"H3",{});var yh=a(ia);Bs=e(yh,"A",{href:!0,id:!0});var Ni=a(Bs);jn=i(Ni,"Knockout text with "),Te=e(Ni,"CODE",{class:!0});var dh=a(Te);Jn=i(dh,"<feMorphology />"),dh.forEach(o),Ni.forEach(o),yh.forEach(o),Xn=h(j),Q=e(j,"P",{});var Ws=a(Q);Yn=i(Ws,"1\uFE0F\u20E3 expand the text with "),De=e(Ws,"CODE",{class:!0});var _h=a(De);Qn=i(_h,'<feMorphology operator="dilate" />'),_h.forEach(o),Zn=i(Ws,`
2\uFE0F\u20E3 composite with the source with `),Ue=e(Ws,"CODE",{class:!0});var gh=a(Ue);si=i(gh,"<feComposite />"),gh.forEach(o),ti=i(Ws," using "),Ge=e(Ws,"CODE",{class:!0});var fh=a(Ge);ei=i(fh,"out"),fh.forEach(o),oi=i(Ws," operator"),Ws.forEach(o),ai=h(j),Ne=e(j,"DIV",{class:!0});var dk=a(Ne);dk.forEach(o),li=h(j),pa=e(j,"P",{});var xh=a(pa);Ls=e(xh,"SPAN",{style:!0});var mh=a(Ls);K=e(mh,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),mh.forEach(o),xh.forEach(o),ri=h(j),$i(bt.$$.fragment,j),ni=h(j),He=e(j,"P",{});var Hi=a(He);wt=e(Hi,"A",{href:!0,rel:!0});var bh=a(wt);ii=i(bh,"REPL"),bh.forEach(o),pi=i(Hi," to visualise the build up the knock-out text."),Hi.forEach(o),j.forEach(o),this.h()},h(){l(C,"href","#svg-filters-101"),l(C,"id","svg-filters-101"),l(js,"href","https://tympanus.net/codrops/2019/01/15/svg-filters-101/"),l(js,"rel","nofollow"),l(Ot,"class","inline"),l(Xs,"href","#filter-primitives"),l(Xs,"id","filter-primitives"),l(It,"class","inline"),l(Lt,"class","inline"),l(St,"class","inline"),l(Mt,"class","inline"),l(Pt,"class","inline"),l(At,"class","inline"),l(Rt,"class","code-section"),l(Qs,"href","#filter-region"),l(Qs,"id","filter-region"),l(Tt,"class","code-section"),l(Dt,"class","inline"),l(Ut,"class","code-section"),l(st,"href","#create-a-drop-shadow"),l(st,"id","create-a-drop-shadow"),l(Gt,"class","code-section"),l(po,"type","image/webp"),l(po,"srcset",mv+", "+xv+" 2x"),g(I.src,ji=$h)||l(I,"src",ji),l(I,"srcset",$h+", "+bv+" 2x"),l(I,"loading","lazy"),r(I,"position","absolute"),r(I,"top","0"),r(I,"width","100%"),r(I,"height","100%"),l(I,"alt","step-1"),r(is,"display","block"),r(is,"position","relative"),r(is,"padding-top","97.450%"),r(is,"width","100%"),l(Ht,"start","2"),l(tt,"href","https://www.sarasoueidan.com/blog/compositing-and-blending-in-css/"),l(tt,"rel","nofollow"),l(zt,"class","code-section"),l(vo,"type","image/webp"),l(vo,"srcset",gv+", "+_v+" 2x"),g(L.src,Ji=zh)||l(L,"src",Ji),l(L,"srcset",zh+", "+fv+" 2x"),l(L,"loading","lazy"),r(L,"position","absolute"),r(L,"top","0"),r(L,"width","100%"),r(L,"height","100%"),l(L,"alt","step-2"),r(ps,"display","block"),r(ps,"position","relative"),r(ps,"padding-top","96.866%"),r(ps,"width","100%"),l(Wt,"class","inline"),l(Ft,"start","3"),l(Kt,"class","code-section"),l(yo,"type","image/webp"),l(yo,"srcset",yv+", "+uv+" 2x"),g(S.src,Xi=Bh)||l(S,"src",Xi),l(S,"srcset",Bh+", "+dv+" 2x"),l(S,"loading","lazy"),r(S,"position","absolute"),r(S,"top","0"),r(S,"width","100%"),r(S,"height","100%"),l(S,"alt","step-3"),r(cs,"display","block"),r(cs,"position","relative"),r(cs,"padding-top","96.023%"),r(cs,"width","100%"),l(Jt,"start","4"),l(Xt,"class","code-section"),l(mo,"type","image/webp"),l(mo,"srcset",kv+", "+hv+" 2x"),g(M.src,Yi=Hh)||l(M,"src",Yi),l(M,"srcset",Hh+", "+vv+" 2x"),l(M,"loading","lazy"),r(M,"position","absolute"),r(M,"top","0"),r(M,"width","100%"),r(M,"height","100%"),l(M,"alt","step-4"),r(hs,"display","block"),r(hs,"position","relative"),r(hs,"padding-top","97.443%"),r(hs,"width","100%"),l(Qt,"class","inline"),l(Ms,"href","#finessing-fecolormatrix"),l(Ms,"id","finessing-fecolormatrix"),l(ot,"href","https://alistapart.com/article/finessing-fecolormatrix/"),l(ot,"rel","nofollow"),l(Zt,"class","code-section"),l(se,"class","code-section"),l(at,"href","https://svelte.dev/repl/1fa3e758ef2442d1bcc1eba37a2bdd58"),l(at,"rel","nofollow"),l(lt,"href","#1-colorizing"),l(lt,"id","1-colorizing"),l(Oo,"type","image/webp"),l(Oo,"srcset",pv+", "+iv+" 2x"),g(P.src,Qi=Nh)||l(P,"src",Qi),l(P,"srcset",Nh+", "+cv+" 2x"),l(P,"loading","lazy"),r(P,"position","absolute"),r(P,"top","0"),r(P,"width","100%"),r(P,"height","100%"),l(P,"alt","colorise default"),r(ks,"display","block"),r(ks,"position","relative"),r(ks,"padding-top","92.081%"),r(ks,"width","100%"),l(Lo,"type","image/webp"),l(Lo,"srcset",rv+", "+lv+" 2x"),g(A.src,Zi=Gh)||l(A,"src",Zi),l(A,"srcset",Gh+", "+nv+" 2x"),l(A,"loading","lazy"),r(A,"position","absolute"),r(A,"top","0"),r(A,"width","100%"),r(A,"height","100%"),l(A,"alt","colorise red"),r(us,"display","block"),r(us,"position","relative"),r(us,"padding-top","91.403%"),r(us,"width","100%"),l(So,"type","image/webp"),l(So,"srcset",ov+", "+ev+" 2x"),g(R.src,sp=Uh)||l(R,"src",sp),l(R,"srcset",Uh+", "+av+" 2x"),l(R,"loading","lazy"),r(R,"position","absolute"),r(R,"top","0"),r(R,"width","100%"),r(R,"height","100%"),l(R,"alt","colorise yellow"),r(ys,"display","block"),r(ys,"position","relative"),r(ys,"padding-top","92.466%"),r(ys,"width","100%"),l(rt,"href","#2-alpha-values"),l(rt,"id","2-alpha-values"),l(To,"type","image/webp"),l(To,"srcset",sv+", "+Zk+" 2x"),g(D.src,tp=Dh)||l(D,"src",tp),l(D,"srcset",Dh+", "+tv+" 2x"),l(D,"loading","lazy"),r(D,"position","absolute"),r(D,"top","0"),r(D,"width","100%"),r(D,"height","100%"),l(D,"alt","red filter"),r(gs,"display","block"),r(gs,"position","relative"),r(gs,"padding-top","91.533%"),r(gs,"width","100%"),l(Uo,"type","image/webp"),l(Uo,"srcset",Yk+", "+Xk+" 2x"),g(U.src,ep=Th)||l(U,"src",ep),l(U,"srcset",Th+", "+Qk+" 2x"),l(U,"loading","lazy"),r(U,"position","absolute"),r(U,"top","0"),r(U,"width","100%"),r(U,"height","100%"),l(U,"alt","yellow filter"),r(fs,"display","block"),r(fs,"position","relative"),r(fs,"padding-top","90.639%"),r(fs,"width","100%"),l(No,"type","image/webp"),l(No,"srcset",jk+", "+Kk+" 2x"),g(G.src,op=Rh)||l(G,"src",op),l(G,"srcset",Rh+", "+Jk+" 2x"),l(G,"loading","lazy"),r(G,"position","absolute"),r(G,"top","0"),r(G,"width","100%"),r(G,"height","100%"),l(G,"alt","yellow filter 2"),r(xs,"display","block"),r(xs,"position","relative"),r(xs,"padding-top","91.324%"),r(xs,"width","100%"),l(Bo,"type","image/webp"),l(Bo,"srcset",Vk+", "+Fk+" 2x"),g(N.src,ap=Ah)||l(N,"src",ap),l(N,"srcset",Ah+", "+Wk+" 2x"),l(N,"loading","lazy"),r(N,"position","absolute"),r(N,"top","0"),r(N,"width","100%"),r(N,"height","100%"),l(N,"alt","negative alpha"),r(ms,"display","block"),r(ms,"position","relative"),r(ms,"padding-top","92.027%"),r(ms,"width","100%"),l(ve,"class","code-section"),l(pt,"href","#3-blowing-out-channels"),l(pt,"id","3-blowing-out-channels"),l(ue,"class","inline"),l(Wo,"type","image/webp"),l(Wo,"srcset",zk+", "+Bk+" 2x"),g(H.src,lp=Ph)||l(H,"src",lp),l(H,"srcset",Ph+", "+$k+" 2x"),l(H,"loading","lazy"),r(H,"position","absolute"),r(H,"top","0"),r(H,"width","100%"),r(H,"height","100%"),l(H,"alt","blow-out-green"),r(bs,"display","block"),r(bs,"position","relative"),r(bs,"padding-top","92.466%"),r(bs,"width","100%"),l(ht,"href","#4-change-color"),l(ht,"id","4-change-color"),l(Jo,"type","image/webp"),l(Jo,"srcset",Nk+", "+Gk+" 2x"),g(B.src,rp=Mh)||l(B,"src",rp),l(B,"srcset",Mh+", "+Hk+" 2x"),l(B,"loading","lazy"),r(B,"position","absolute"),r(B,"top","0"),r(B,"width","100%"),r(B,"height","100%"),l(B,"alt","change-color"),r(ws,"display","block"),r(ws,"position","relative"),r(ws,"padding-top","90.868%"),r(ws,"width","100%"),l(kt,"href","#5-lighten-or-darken"),l(kt,"id","5-lighten-or-darken"),l(Qo,"type","image/webp"),l(Qo,"srcset",Dk+", "+Tk+" 2x"),g(z.src,np=Sh)||l(z,"src",np),l(z,"srcset",Sh+", "+Uk+" 2x"),l(z,"loading","lazy"),r(z,"position","absolute"),r(z,"top","0"),r(z,"width","100%"),r(z,"height","100%"),l(z,"alt","lighten"),r(Es,"display","block"),r(Es,"position","relative"),r(Es,"padding-top","92.220%"),r(Es,"width","100%"),l(Zo,"type","image/webp"),l(Zo,"srcset",Ak+", "+Pk+" 2x"),g($.src,ip=Lh)||l($,"src",ip),l($,"srcset",Lh+", "+Rk+" 2x"),l($,"loading","lazy"),r($,"position","absolute"),r($,"top","0"),r($,"width","100%"),r($,"height","100%"),l($,"alt","darken"),r(qs,"display","block"),r(qs,"position","relative"),r(qs,"padding-top","92.184%"),r(qs,"width","100%"),l(vt,"href","#6-grayscale"),l(vt,"id","6-grayscale"),l(ea,"type","image/webp"),l(ea,"srcset",Sk+", "+Lk+" 2x"),g(F.src,pp=Ih)||l(F,"src",pp),l(F,"srcset",Ih+", "+Mk+" 2x"),l(F,"loading","lazy"),r(F,"position","absolute"),r(F,"top","0"),r(F,"width","100%"),r(F,"height","100%"),l(F,"alt","grayscale"),r(Cs,"display","block"),r(Cs,"position","relative"),r(Cs,"padding-top","91.264%"),r(Cs,"width","100%"),l(be,"class","inline"),l(Gs,"href","#outline-text-with-lt-femorphology-gt"),l(Gs,"id","outline-text-with-lt-femorphology-gt"),l(yt,"href","https://tympanus.net/codrops/2019/01/22/svg-filter-effects-outline-text-with-femorphology/"),l(yt,"rel","nofollow"),l(we,"class","inline"),l(Ee,"class","inline"),l(qe,"class","inline"),l(Ce,"class","inline"),l(Oe,"class","code-section"),g(V.src,cp=Oh)||l(V,"src",cp),l(V,"srcset",Oh+", "+Ik+" 2x"),l(V,"loading","lazy"),r(V,"position","absolute"),r(V,"top","0"),r(V,"width","100%"),r(V,"height","100%"),l(V,"alt","feMorphology"),r(Os,"display","block"),r(Os,"position","relative"),r(Os,"padding-top","56.786%"),r(Os,"width","100%"),l(ft,"href","https://svelte.dev/repl/1f0a2c16650541d082beeecc2a046c9f?version=3.29.0"),l(ft,"rel","nofollow"),l(Le,"class","inline"),l(Hs,"href","#adding-colored-outline-to-text-with-lt-femorphology-gt"),l(Hs,"id","adding-colored-outline-to-text-with-lt-femorphology-gt"),l(Se,"class","inline"),l(Me,"class","inline"),l(Pe,"class","inline"),l(Ae,"class","code-section"),g(W.src,hp=Ch)||l(W,"src",hp),l(W,"srcset",Ch+", "+Ok+" 2x"),l(W,"loading","lazy"),r(W,"position","absolute"),r(W,"top","0"),r(W,"width","100%"),r(W,"height","100%"),l(W,"alt","feMorphology outline text"),r(Is,"display","block"),r(Is,"position","relative"),r(Is,"padding-top","64.643%"),r(Is,"width","100%"),l(mt,"href","https://svelte.dev/repl/a1a3aa1cc844476b9ca96fec3f0164ed?version=3.29.0"),l(mt,"rel","nofollow"),l(Re,"class","inline"),l(Te,"class","inline"),l(Bs,"href","#knockout-text-with-lt-femorphology-gt"),l(Bs,"id","knockout-text-with-lt-femorphology-gt"),l(De,"class","inline"),l(Ue,"class","inline"),l(Ge,"class","inline"),l(Ne,"class","code-section"),g(K.src,kp=qh)||l(K,"src",kp),l(K,"srcset",qh+", "+Ck+" 2x"),l(K,"loading","lazy"),r(K,"position","absolute"),r(K,"top","0"),r(K,"width","100%"),r(K,"height","100%"),l(K,"alt","feMorphology knockout text"),r(Ls,"display","block"),r(Ls,"position","relative"),r(Ls,"padding-top","42.643%"),r(Ls,"width","100%"),l(wt,"href","https://svelte.dev/repl/30153d68324d475189d34afa26a3186f?version=3.29.0"),l(wt,"rel","nofollow")},m(p,v){d(p,y,v),s(y,O),s(O,C),s(C,Ks),s(y,_),s(y,m),s(m,Ct),s(m,js),s(js,Fa),s(m,Va),s(y,Wa),s(y,ls),s(ls,Js),s(Js,Ka),s(Js,Ot),s(Ot,ja),s(Js,Ja),s(ls,Xa),s(ls,Je),s(Je,Ya),s(ls,Qa),s(ls,rs),s(rs,Za),s(rs,Xe),s(Xe,sl),s(rs,tl),s(rs,Ye),s(Ye,el),s(rs,ol),d(p,ua,v),d(p,Z,v),s(Z,Qe),s(Qe,Xs),s(Xs,al),s(Z,ll),s(Z,J),s(J,Ys),s(Ys,rl),s(Ys,It),s(It,nl),s(Ys,il),s(J,pl),s(J,Ze),s(Ze,cl),s(J,hl),s(J,ss),s(ss,Lt),s(Lt,kl),s(ss,vl),s(ss,St),s(St,ul),s(ss,yl),s(ss,Mt),s(Mt,dl),s(ss,_l),s(J,gl),s(J,Ss),s(Ss,fl),s(Ss,Pt),s(Pt,xl),s(Ss,ml),s(Ss,At),s(At,bl),s(Z,wl),s(Z,Rt),Rt.innerHTML=Vh,d(p,ya,v),d(p,b,v),s(b,so),s(so,Qs),s(Qs,El),s(b,ql),s(b,ns),s(ns,to),s(to,Cl),s(ns,Ol),s(ns,eo),s(eo,Il),s(ns,Ll),s(ns,oo),s(oo,Sl),s(b,Ml),s(b,Tt),Tt.innerHTML=Wh,s(b,Pl),s(b,ao),s(ao,Zs),s(Zs,Al),s(Zs,Dt),s(Dt,Rl),s(Zs,Tl),s(b,Dl),s(b,Ut),Ut.innerHTML=Kh,d(p,da,v),d(p,k,v),s(k,lo),s(lo,st),s(st,Ul),s(k,Gl),s(k,ro),s(ro,no),s(no,Nl),s(k,Hl),s(k,Gt),Gt.innerHTML=jh,s(k,Bl),s(k,io),s(io,is),s(is,Nt),s(Nt,po),s(Nt,I),s(k,zl),s(k,Ht),s(Ht,co),s(co,$l),s(k,Fl),s(k,ho),s(ho,Bt),s(Bt,Vl),s(Bt,tt),s(tt,Wl),s(k,Kl),s(k,zt),zt.innerHTML=Jh,s(k,jl),s(k,ko),s(ko,ps),s(ps,$t),s($t,vo),s($t,L),s(k,Jl),s(k,Ft),s(Ft,Vt),s(Vt,Xl),s(Vt,Wt),s(Wt,Yl),s(k,Ql),s(k,Kt),Kt.innerHTML=Xh,s(k,Zl),s(k,uo),s(uo,cs),s(cs,jt),s(jt,yo),s(jt,S),s(k,sr),s(k,Jt),s(Jt,_o),s(_o,tr),s(k,er),s(k,go),s(go,fo),s(fo,or),s(k,ar),s(k,Xt),Xt.innerHTML=Yh,s(k,lr),s(k,xo),s(xo,hs),s(hs,Yt),s(Yt,mo),s(Yt,M),d(p,_a,v),d(p,w,v),s(w,bo),s(bo,Ms),s(Ms,rr),s(Ms,Qt),s(Qt,nr),s(w,ir),s(w,et),s(et,pr),s(et,ot),s(ot,cr),s(et,hr),s(w,kr),s(w,Zt),Zt.innerHTML=Qh,s(w,vr),s(w,se),se.innerHTML=Zh,s(w,ur),s(w,wo),s(wo,Eo),s(Eo,at),s(at,yr),d(p,ga,v),d(p,ts,v),s(ts,qo),s(qo,lt),s(lt,dr),s(ts,_r),s(ts,Co),s(Co,ks),s(ks,te),s(te,Oo),s(te,P),s(ts,gr),s(ts,vs),s(vs,Io),s(Io,fr),s(vs,xr),s(vs,ee),s(ee,mr),s(ee,us),s(us,oe),s(oe,Lo),s(oe,A),s(vs,br),s(vs,ae),s(ae,wr),s(ae,ys),s(ys,le),s(le,So),s(le,R),d(p,fa,v),d(p,T,v),s(T,Mo),s(Mo,rt),s(rt,Er),s(T,qr),s(T,ds),s(ds,nt),s(nt,Po),s(Po,Cr),s(nt,Or),s(nt,_s),s(_s,Ao),s(Ao,Ir),s(_s,Lr),s(_s,Ro),s(Ro,Sr),s(_s,Mr),s(_s,re),s(re,Pr),s(re,gs),s(gs,ne),s(ne,To),s(ne,D),s(ds,Ar),s(ds,Do),s(Do,ie),s(ie,Rr),s(ie,fs),s(fs,pe),s(pe,Uo),s(pe,U),s(ds,Tr),s(ds,Go),s(Go,ce),s(ce,Dr),s(ce,xs),s(xs,he),s(he,No),s(he,G),s(T,Ur),s(T,Ho),s(Ho,it),s(it,Gr),s(it,ms),s(ms,ke),s(ke,Bo),s(ke,N),s(it,zo),s(zo,$o),s($o,Nr),s(T,Hr),s(T,ve),ve.innerHTML=sk,d(p,xa,v),d(p,Ps,v),s(Ps,Fo),s(Fo,pt),s(pt,Br),s(Ps,zr),s(Ps,ct),s(ct,Vo),s(Vo,$r),s(ct,Fr),s(ct,As),s(As,Vr),s(As,ue),s(ue,Wr),s(As,Kr),s(As,bs),s(bs,ye),s(ye,Wo),s(ye,H),d(p,ma,v),d(p,Rs,v),s(Rs,Ko),s(Ko,ht),s(ht,jr),s(Rs,Jr),s(Rs,jo),s(jo,de),s(de,Xr),s(de,ws),s(ws,_e),s(_e,Jo),s(_e,B),d(p,ba,v),d(p,Ts,v),s(Ts,Xo),s(Xo,kt),s(kt,Yr),s(Ts,Qr),s(Ts,Yo),s(Yo,Ds),s(Ds,Zr),s(Ds,Es),s(Es,ge),s(ge,Qo),s(ge,z),s(Ds,sn),s(Ds,qs),s(qs,fe),s(fe,Zo),s(fe,$),d(p,wa,v),d(p,Us,v),s(Us,sa),s(sa,vt),s(vt,tn),s(Us,en),s(Us,ta),s(ta,xe),s(xe,on),s(xe,Cs),s(Cs,me),s(me,ea),s(me,F),d(p,Ea,v),d(p,f,v),s(f,oa),s(oa,Gs),s(Gs,an),s(Gs,be),s(be,ln),s(f,rn),s(f,ut),s(ut,nn),s(ut,yt),s(yt,pn),s(ut,cn),s(f,hn),s(f,X),s(X,Ns),s(Ns,kn),s(Ns,we),s(we,vn),s(Ns,un),s(Ns,Ee),s(Ee,yn),s(X,dn),s(X,aa),s(aa,_n),s(X,gn),s(X,dt),s(dt,fn),s(dt,qe),s(qe,xn),s(dt,mn),s(X,bn),s(X,_t),s(_t,wn),s(_t,Ce),s(Ce,En),s(_t,qn),s(f,Cn),s(f,Oe),Oe.innerHTML=tk,s(f,On),s(f,la),s(la,Os),s(Os,V),s(f,In),Fi(gt,f,null),s(f,Ln),s(f,Ie),s(Ie,ft),s(ft,Sn),s(Ie,Mn),d(p,qa,v),d(p,E,v),s(E,ra),s(ra,Hs),s(Hs,Pn),s(Hs,Le),s(Le,An),s(E,Rn),s(E,Y),s(Y,Tn),s(Y,Se),s(Se,Dn),s(Y,Un),s(Y,Me),s(Me,Gn),s(Y,Nn),s(Y,Pe),s(Pe,Hn),s(Y,Bn),s(E,zn),s(E,Ae),Ae.innerHTML=ek,s(E,$n),s(E,na),s(na,Is),s(Is,W),s(E,Fn),s(E,xt),s(xt,mt),s(mt,Vn),s(xt,Wn),s(xt,Re),s(Re,Kn),d(p,Ca,v),d(p,x,v),s(x,ia),s(ia,Bs),s(Bs,jn),s(Bs,Te),s(Te,Jn),s(x,Xn),s(x,Q),s(Q,Yn),s(Q,De),s(De,Qn),s(Q,Zn),s(Q,Ue),s(Ue,si),s(Q,ti),s(Q,Ge),s(Ge,ei),s(Q,oi),s(x,ai),s(x,Ne),Ne.innerHTML=ok,s(x,li),s(x,pa),s(pa,Ls),s(Ls,K),s(x,ri),Fi(bt,x,null),s(x,ni),s(x,He),s(He,wt),s(wt,ii),s(He,pi),Oa=!0},p:bk,i(p){Oa||(Vi(gt.$$.fragment,p),Vi(bt.$$.fragment,p),Oa=!0)},o(p){Wi(gt.$$.fragment,p),Wi(bt.$$.fragment,p),Oa=!1},d(p){p&&o(y),p&&o(ua),p&&o(Z),p&&o(ya),p&&o(b),p&&o(da),p&&o(k),p&&o(_a),p&&o(w),p&&o(ga),p&&o(ts),p&&o(fa),p&&o(T),p&&o(xa),p&&o(Ps),p&&o(ma),p&&o(Rs),p&&o(ba),p&&o(Ts),p&&o(wa),p&&o(Us),p&&o(Ea),p&&o(f),Ki(gt),p&&o(qa),p&&o(E),p&&o(Ca),p&&o(x),Ki(bt)}}}function qv(qt){let y,O;const C=[qt[0],Fh];let Ks={$$slots:{default:[Ev]},$$scope:{ctx:qt}};for(let _=0;_<C.length;_+=1)Ks=Bi(Ks,C[_]);return y=new wk({props:Ks}),{c(){zi(y.$$.fragment)},l(_){$i(y.$$.fragment,_)},m(_,m){Fi(y,_,m),O=!0},p(_,[m]){const Ct=m&1?xk(C,[m&1&&wh(_[0]),m&0&&wh(Fh)]):{};m&2&&(Ct.$$scope={dirty:m,ctx:_}),y.$set(Ct)},i(_){O||(Vi(y.$$.fragment,_),O=!0)},o(_){Wi(y.$$.fragment,_),O=!1},d(_){Ki(y,_)}}}const Fh={title:"SVG Filters",tags:["svg filters","filters","svg"],description:"SVG Filters 101[ Source ]defined in `&lt;filter&gt;` elementdefine a series of one or more filter primitives1 filter primitive performs 1 single fundamental graphic operation on one or more inputsfilter primitives...",tableOfContents:[{link:"svg-filters-101",title:"SVG Filters 101",nested:[{link:"filter-primitives",title:"filter primitives"},{link:"filter-region",title:"Filter region"},{link:"create-a-drop-shadow",title:"Create a drop shadow"}]},{link:"finessing-fecolormatrix",title:"Finessing  `feColorMatrix`",nested:[{link:"1-colorizing",title:"1. Colorizing"},{link:"2-alpha-values",title:"2. Alpha values"},{link:"3-blowing-out-channels",title:"3. Blowing out channels"},{link:"4-change-color",title:"4. Change color"},{link:"5-lighten-or-darken",title:"5. Lighten or darken"},{link:"6-grayscale",title:"6. Grayscale"}]},{link:"outline-text-with-lt-femorphology-gt",title:"Outline Text with  `&lt;feMorphology&gt;`",nested:[{link:"adding-colored-outline-to-text-with-lt-femorphology-gt",title:"Adding Colored Outline to Text with  `&lt;feMorphology /&gt;`"},{link:"knockout-text-with-lt-femorphology-gt",title:"Knockout text with  `&lt;feMorphology /&gt;`"}]}]};function Cv(qt,y,O){return mk("blog",{image:wv}),qt.$$set=C=>{O(0,y=Bi(Bi({},y),Eh(C)))},y=Eh(y),[y]}class Rv extends _k{constructor(y){super();gk(this,y,Cv,qv,fk,{})}}export{Rv as default,Fh as metadata};
