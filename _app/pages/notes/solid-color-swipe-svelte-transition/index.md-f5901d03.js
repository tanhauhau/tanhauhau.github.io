import{S as Bo,i as zo,s as Vo,C as Ta,w as Go,x as Ro,y as qo,z as Fo,A as fo,q as Uo,o as Jo,B as Xo,r as Yo,Y as wo,e as o,t as k,k as p,c as n,a as t,h,d as a,m as c,b as r,X as Ss,f as l,g as d,H as s,J as Ko}from"../../../chunks/vendor-da4388d4.js";import{B as Qo}from"../../../chunks/BlogLayout-14cfab6f.js";import{_ as Wo}from"../../../chunks/twitter-card-image-a57df29d.js";import"../../../chunks/stores-1fad7c36.js";import"../../../chunks/ldjson-b0805387.js";/* empty css                                   */var Zo="https://lihautan.com/_app/assets/reversible-a4be10be.gif",_o="https://lihautan.com/_app/assets/reversible-25a43b02.gif",sn="https://lihautan.com/_app/assets/breakdown-3-1e0a2979.gif",mo="https://lihautan.com/_app/assets/breakdown-3-c2c821c3.gif",an="https://lihautan.com/_app/assets/breakdown-2-44ce42e6.gif",bo="https://lihautan.com/_app/assets/breakdown-2-cc798dd4.gif",on="https://lihautan.com/_app/assets/breakdown-1-833eff88.gif",Eo="https://lihautan.com/_app/assets/breakdown-1-b0c85c04.gif",nn="https://lihautan.com/_app/assets/custom-solid-swipe-1acbc9ac.gif",Io="https://lihautan.com/_app/assets/custom-solid-swipe-2928e887.gif";function tn(W){let i,f,u,G,y,x,w,_,Sa,Hs,m,cs,R,qs,Fs,ks,H,b,Ha,Us,hs,Js,Xs,q,vs,Ys,Ks,ys,Qs,Ns,O,ds,F,Ws,Zs,Z,Co=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">swipeColor</span><span style="color: var(--shiki-color-text)">(node</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> params) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> &#123; </span><span style="color: var(--shiki-token-constant)">color</span><span style="color: var(--shiki-color-text)"> &#125; </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">window</span><span style="color: var(--shiki-token-function)">.getComputedStyle</span><span style="color: var(--shiki-color-text)">(node);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,As,E,us,U,sa,aa,xs,J,oa,ss,na,ta,ea,as,To=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-function)">css</span><span style="color: var(--shiki-color-text)">(t) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> (t </span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0.5</span><span style="color: var(--shiki-color-text)">) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// transform t from range [0.5, 1] into percentage [0, 100]</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// t: 0.5 -&gt; 1</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// u: 0 -&gt; 0.5</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">u</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> t </span><span style="color: var(--shiki-token-keyword)">-</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0.5</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// percentage: 0 -&gt; 100</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">percentage</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> u </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">200</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#96;background: linear-gradient(to right, transparent 0, </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">percentage</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">%, </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">color</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)"> </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">percentage</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">%);&#96;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125; </span><span style="color: var(--shiki-token-keyword)">else</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// transform t from range [0, 0.5] into percentage [0, 100]</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// t: 0 -&gt; 0.5</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// percentage: 0 -&gt; 100</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">percentage</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> t </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">200</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#96;background: linear-gradient(to right, </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">color</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)"> 0, </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">percentage</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">%, transparent </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">percentage</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">%);&#96;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span></code></pre>`,ra,gs,N,I,Na,Ls,$,fs,X,la,ia,ws,_s,pa,ca,os,So=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-function)">css</span><span style="color: var(--shiki-color-text)">(t) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> (t </span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0.5</span><span style="color: var(--shiki-color-text)">) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#96;color: </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">color</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">&#96;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125; </span><span style="color: var(--shiki-token-keyword)">else</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#96;color: transparent&#96;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,ka,ms,A,C,Aa,Os,P,bs,Y,ha,va,ns,Ho=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-function)">css</span><span style="color: var(--shiki-color-text)">(t) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> (t </span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0.5</span><span style="color: var(--shiki-color-text)">) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// transform t from range [0.5, 1] into percentage [0, 100]</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// t: 0.5 -&gt; 1</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// u: 0 -&gt; 0.5</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">u</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> t </span><span style="color: var(--shiki-token-keyword)">-</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0.5</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// percentage: 0 -&gt; 100</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">percentage</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> u </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">200</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#96;</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">      background: linear-gradient(to right, transparent 0, </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">percentage</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">%, </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">color</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)"> </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">percentage</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">%);</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">      color: </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">color</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">;</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">    &#96;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125; </span><span style="color: var(--shiki-token-keyword)">else</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// transform t from range [0, 0.5] into percentage [0, 100]</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// t: 0 -&gt; 0.5</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// percentage: 0 -&gt; 100</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">percentage</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> t </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">200</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#96;</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">      background: linear-gradient(to right, </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">color</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)"> 0, </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">percentage</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">%, transparent </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">percentage</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">%);</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">      color: transparent;</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">    &#96;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span></code></pre>`,Ps,j,Es,g,ya,ts,da,ua,es,xa,ga,rs,fa,wa,_a,ls,No='<pre class="prism language-svelte"><code><div class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"></div><div class="line">  <span class="token keyword">function</span> <span class="token function">swipeColor</span><span class="token punctuation">(</span><span class="token parameter">node<span class="token punctuation">,</span> params</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></div><div class="line">    <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> duration<span class="token punctuation">,</span> delay<span class="token punctuation">,</span> easing <span class="token punctuation">&#125;</span> <span class="token operator">=</span> params <span class="token operator">||</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span></div><div class="line">    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span></div><div class="line">      duration<span class="token punctuation">,</span></div><div class="line">      delay<span class="token punctuation">,</span></div><div class="line">      easing<span class="token punctuation">,</span></div><div class="line">      <span class="token function">css</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">/* ... */</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></div><div class="line">    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span></div><div class="line">  <span class="token punctuation">&#125;</span></div><div class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></div><div class="line"></div><div class="line"><span class="token language-javascript"><span class="token punctuation">&#123;</span>#<span class="token keyword">if</span> show<span class="token punctuation">&#125;</span></span></div><div class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">transition:</span>swipeColor</span><span class="token punctuation">></span></span>Hello world<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></div><div class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">transition:</span>swipeColor=</span><span class="token language-javascript"><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">delay</span><span class="token operator">:</span> <span class="token number">300</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span><span class="token punctuation">></span></span>Hello world<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></div><div class="line"><span class="token language-javascript"><span class="token punctuation">&#123;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token punctuation">&#125;</span></span></div></code></pre>',js,M,Is,K,ma,ba,is,Ao=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">swipeColor</span><span style="color: var(--shiki-color-text)">(node</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> params) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> &#123; </span><span style="color: var(--shiki-token-constant)">duration</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">delay</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">easing</span><span style="color: var(--shiki-color-text)"> &#125; </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> params </span><span style="color: var(--shiki-token-keyword)">||</span><span style="color: var(--shiki-color-text)"> &#123;&#125;;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> &#123; </span><span style="color: var(--shiki-token-constant)">color</span><span style="color: var(--shiki-color-text)"> &#125; </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">window</span><span style="color: var(--shiki-token-function)">.getComputedStyle</span><span style="color: var(--shiki-color-text)">(node);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    duration</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    delay</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    easing</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">css</span><span style="color: var(--shiki-color-text)">(t) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> (t </span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0.5</span><span style="color: var(--shiki-color-text)">) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-comment)">// transform t from range [0.5, 1] into percentage [0, 100]</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-comment)">// t: 0.5 -&gt; 1</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-comment)">// u: 0 -&gt; 0.5</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">u</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> t </span><span style="color: var(--shiki-token-keyword)">-</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0.5</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-comment)">// percentage: 0 -&gt; 100</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">percentage</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> u </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">200</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#96;</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">          background: linear-gradient(to right, transparent 0, </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">percentage</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">%, </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">color</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)"> </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">percentage</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">%);</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">          color: </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">color</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">;</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">        &#96;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      &#125; </span><span style="color: var(--shiki-token-keyword)">else</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-comment)">// transform t from range [0, 0.5] into percentage [0, 100]</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-comment)">// t: 0 -&gt; 0.5</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-comment)">// percentage: 0 -&gt; 100</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">percentage</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> t </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">200</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#96;</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">          background: linear-gradient(to right, </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">color</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)"> 0, </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">percentage</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">%, transparent </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">percentage</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">%);</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">          color: transparent;</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">        &#96;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Ms,S,$s,Q,Ea,Ia,Cs,$a,Ca,Ts,L,T,La;return{c(){i=o("section"),f=o("h2"),u=o("a"),G=k("The Result"),y=p(),x=o("p"),w=o("span"),_=o("img"),Hs=p(),m=o("section"),cs=o("h2"),R=o("a"),qs=k("Break it down slowly"),Fs=p(),ks=o("p"),H=o("span"),b=o("img"),Us=p(),hs=o("p"),Js=k("The transition can be broken down into 2 halves:"),Xs=p(),q=o("ul"),vs=o("li"),Ys=k("1\uFE0F\u20E3 a solid color growing from the left covering the whole text area"),Ks=p(),ys=o("li"),Qs=k("2\uFE0F\u20E3 as the solid color shrinks, it reveals the text"),Ns=p(),O=o("section"),ds=o("h3"),F=o("a"),Ws=k("1. The first thing is to figure out the color of the text"),Zs=p(),Z=o("div"),As=p(),E=o("section"),us=o("h3"),U=o("a"),sa=k("2. I tried using linear-gradient to draw the background"),aa=p(),xs=o("ul"),J=o("li"),oa=k("I use the value of "),ss=o("code"),na=k("t"),ta=k(" to determine how wide the solid color should be"),ea=p(),as=o("div"),ra=p(),gs=o("p"),N=o("span"),I=o("img"),Ls=p(),$=o("section"),fs=o("h3"),X=o("a"),la=k("3. Next I need to hide / reveal the text at the right time"),ia=p(),ws=o("ul"),_s=o("li"),pa=k("I hid the text by setting the text color to transparent"),ca=p(),os=o("div"),ka=p(),ms=o("p"),A=o("span"),C=o("img"),Os=p(),P=o("section"),bs=o("h3"),Y=o("a"),ha=k("4. Combining the both 2. and 3. together"),va=p(),ns=o("div"),Ps=p(),j=o("section"),Es=o("h3"),g=o("a"),ya=k("5. final touches, pass the "),ts=o("code"),da=k("duration"),ua=k(", "),es=o("code"),xa=k("delay"),ga=k(", and "),rs=o("code"),fa=k("easing"),wa=k(" into the returned object"),_a=p(),ls=o("div"),js=p(),M=o("section"),Is=o("h2"),K=o("a"),ma=k("Final code"),ba=p(),is=o("div"),Ms=p(),S=o("section"),$s=o("h2"),Q=o("a"),Ea=k("Extra"),Ia=p(),Cs=o("p"),$a=k("Svelte has make writing custom transitions simple, with the code above, the transition itself is able to pause / reverse halfway through the transition"),Ca=p(),Ts=o("p"),L=o("span"),T=o("img"),this.h()},l(e){i=n(e,"SECTION",{});var v=t(i);f=n(v,"H2",{});var Oa=t(f);u=n(Oa,"A",{href:!0,id:!0});var Pa=t(u);G=h(Pa,"The Result"),Pa.forEach(a),Oa.forEach(a),y=c(v),x=n(v,"P",{});var ja=t(x);w=n(ja,"SPAN",{style:!0});var Ma=t(w);_=n(Ma,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),Ma.forEach(a),ja.forEach(a),v.forEach(a),Hs=c(e),m=n(e,"SECTION",{});var D=t(m);cs=n(D,"H2",{});var Da=t(cs);R=n(Da,"A",{href:!0,id:!0});var Ba=t(R);qs=h(Ba,"Break it down slowly"),Ba.forEach(a),Da.forEach(a),Fs=c(D),ks=n(D,"P",{});var za=t(ks);H=n(za,"SPAN",{style:!0});var Va=t(H);b=n(Va,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),Va.forEach(a),za.forEach(a),Us=c(D),hs=n(D,"P",{});var Ga=t(hs);Js=h(Ga,"The transition can be broken down into 2 halves:"),Ga.forEach(a),Xs=c(D),q=n(D,"UL",{});var Ds=t(q);vs=n(Ds,"LI",{});var Ra=t(vs);Ys=h(Ra,"1\uFE0F\u20E3 a solid color growing from the left covering the whole text area"),Ra.forEach(a),Ks=c(Ds),ys=n(Ds,"LI",{});var qa=t(ys);Qs=h(qa,"2\uFE0F\u20E3 as the solid color shrinks, it reveals the text"),qa.forEach(a),Ds.forEach(a),D.forEach(a),Ns=c(e),O=n(e,"SECTION",{});var Bs=t(O);ds=n(Bs,"H3",{});var Fa=t(ds);F=n(Fa,"A",{href:!0,id:!0});var Ua=t(F);Ws=h(Ua,"1. The first thing is to figure out the color of the text"),Ua.forEach(a),Fa.forEach(a),Zs=c(Bs),Z=n(Bs,"DIV",{class:!0});var Lo=t(Z);Lo.forEach(a),Bs.forEach(a),As=c(e),E=n(e,"SECTION",{});var B=t(E);us=n(B,"H3",{});var Ja=t(us);U=n(Ja,"A",{href:!0,id:!0});var Xa=t(U);sa=h(Xa,"2. I tried using linear-gradient to draw the background"),Xa.forEach(a),Ja.forEach(a),aa=c(B),xs=n(B,"UL",{});var Ya=t(xs);J=n(Ya,"LI",{});var zs=t(J);oa=h(zs,"I use the value of "),ss=n(zs,"CODE",{class:!0});var Ka=t(ss);na=h(Ka,"t"),Ka.forEach(a),ta=h(zs," to determine how wide the solid color should be"),zs.forEach(a),Ya.forEach(a),ea=c(B),as=n(B,"DIV",{class:!0});var Oo=t(as);Oo.forEach(a),ra=c(B),gs=n(B,"P",{});var Qa=t(gs);N=n(Qa,"SPAN",{style:!0});var Wa=t(N);I=n(Wa,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),Wa.forEach(a),Qa.forEach(a),B.forEach(a),Ls=c(e),$=n(e,"SECTION",{});var z=t($);fs=n(z,"H3",{});var Za=t(fs);X=n(Za,"A",{href:!0,id:!0});var so=t(X);la=h(so,"3. Next I need to hide / reveal the text at the right time"),so.forEach(a),Za.forEach(a),ia=c(z),ws=n(z,"UL",{});var ao=t(ws);_s=n(ao,"LI",{});var oo=t(_s);pa=h(oo,"I hid the text by setting the text color to transparent"),oo.forEach(a),ao.forEach(a),ca=c(z),os=n(z,"DIV",{class:!0});var Po=t(os);Po.forEach(a),ka=c(z),ms=n(z,"P",{});var no=t(ms);A=n(no,"SPAN",{style:!0});var to=t(A);C=n(to,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),to.forEach(a),no.forEach(a),z.forEach(a),Os=c(e),P=n(e,"SECTION",{});var Vs=t(P);bs=n(Vs,"H3",{});var eo=t(bs);Y=n(eo,"A",{href:!0,id:!0});var ro=t(Y);ha=h(ro,"4. Combining the both 2. and 3. together"),ro.forEach(a),eo.forEach(a),va=c(Vs),ns=n(Vs,"DIV",{class:!0});var jo=t(ns);jo.forEach(a),Vs.forEach(a),Ps=c(e),j=n(e,"SECTION",{});var Gs=t(j);Es=n(Gs,"H3",{});var lo=t(Es);g=n(lo,"A",{href:!0,id:!0});var V=t(g);ya=h(V,"5. final touches, pass the "),ts=n(V,"CODE",{class:!0});var io=t(ts);da=h(io,"duration"),io.forEach(a),ua=h(V,", "),es=n(V,"CODE",{class:!0});var po=t(es);xa=h(po,"delay"),po.forEach(a),ga=h(V,", and "),rs=n(V,"CODE",{class:!0});var co=t(rs);fa=h(co,"easing"),co.forEach(a),wa=h(V," into the returned object"),V.forEach(a),lo.forEach(a),_a=c(Gs),ls=n(Gs,"DIV",{class:!0});var Mo=t(ls);Mo.forEach(a),Gs.forEach(a),js=c(e),M=n(e,"SECTION",{});var Rs=t(M);Is=n(Rs,"H2",{});var ko=t(Is);K=n(ko,"A",{href:!0,id:!0});var ho=t(K);ma=h(ho,"Final code"),ho.forEach(a),ko.forEach(a),ba=c(Rs),is=n(Rs,"DIV",{class:!0});var Do=t(is);Do.forEach(a),Rs.forEach(a),Ms=c(e),S=n(e,"SECTION",{});var ps=t(S);$s=n(ps,"H2",{});var vo=t($s);Q=n(vo,"A",{href:!0,id:!0});var yo=t(Q);Ea=h(yo,"Extra"),yo.forEach(a),vo.forEach(a),Ia=c(ps),Cs=n(ps,"P",{});var uo=t(Cs);$a=h(uo,"Svelte has make writing custom transitions simple, with the code above, the transition itself is able to pause / reverse halfway through the transition"),uo.forEach(a),Ca=c(ps),Ts=n(ps,"P",{});var xo=t(Ts);L=n(xo,"SPAN",{style:!0});var go=t(L);T=n(go,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),go.forEach(a),xo.forEach(a),ps.forEach(a),this.h()},h(){r(u,"href","#the-result"),r(u,"id","the-result"),Ss(_.src,Sa=Io)||r(_,"src",Sa),r(_,"srcset",Io+", "+nn+" 2x"),r(_,"loading","lazy"),l(_,"position","absolute"),l(_,"top","0"),l(_,"width","100%"),l(_,"height","100%"),r(_,"alt","the-result"),l(w,"display","block"),l(w,"position","relative"),l(w,"padding-top","65.286%"),l(w,"width","100%"),r(R,"href","#break-it-down-slowly"),r(R,"id","break-it-down-slowly"),Ss(b.src,Ha=Eo)||r(b,"src",Ha),r(b,"srcset",Eo+", "+on+" 2x"),r(b,"loading","lazy"),l(b,"position","absolute"),l(b,"top","0"),l(b,"width","100%"),l(b,"height","100%"),r(b,"alt","breakdown"),l(H,"display","block"),l(H,"position","relative"),l(H,"padding-top","62.000%"),l(H,"width","100%"),r(F,"href","#1-the-first-thing-is-to-figure-out-the-color-of-the-text"),r(F,"id","1-the-first-thing-is-to-figure-out-the-color-of-the-text"),r(Z,"class","code-section"),r(U,"href","#2-i-tried-using-linear-gradient-to-draw-the-background"),r(U,"id","2-i-tried-using-linear-gradient-to-draw-the-background"),r(ss,"class","inline"),r(as,"class","code-section"),Ss(I.src,Na=bo)||r(I,"src",Na),r(I,"srcset",bo+", "+an+" 2x"),r(I,"loading","lazy"),l(I,"position","absolute"),l(I,"top","0"),l(I,"width","100%"),l(I,"height","100%"),r(I,"alt","breakdown 2"),l(N,"display","block"),l(N,"position","relative"),l(N,"padding-top","62.000%"),l(N,"width","100%"),r(X,"href","#3-next-i-need-to-hide-reveal-the-text-at-the-right-time"),r(X,"id","3-next-i-need-to-hide-reveal-the-text-at-the-right-time"),r(os,"class","code-section"),Ss(C.src,Aa=mo)||r(C,"src",Aa),r(C,"srcset",mo+", "+sn+" 2x"),r(C,"loading","lazy"),l(C,"position","absolute"),l(C,"top","0"),l(C,"width","100%"),l(C,"height","100%"),r(C,"alt","breakdown 3"),l(A,"display","block"),l(A,"position","relative"),l(A,"padding-top","62.000%"),l(A,"width","100%"),r(Y,"href","#4-combining-the-both-2-and-3-together"),r(Y,"id","4-combining-the-both-2-and-3-together"),r(ns,"class","code-section"),r(ts,"class","inline"),r(es,"class","inline"),r(rs,"class","inline"),r(g,"href","#5-final-touches-pass-the-duration-delay-and-easing-into-the-returned-object"),r(g,"id","5-final-touches-pass-the-duration-delay-and-easing-into-the-returned-object"),r(ls,"class","code-section"),r(K,"href","#final-code"),r(K,"id","final-code"),r(is,"class","code-section"),r(Q,"href","#extra"),r(Q,"id","extra"),Ss(T.src,La=_o)||r(T,"src",La),r(T,"srcset",_o+", "+Zo+" 2x"),r(T,"loading","lazy"),l(T,"position","absolute"),l(T,"top","0"),l(T,"width","100%"),l(T,"height","100%"),r(T,"alt","reversible"),l(L,"display","block"),l(L,"position","relative"),l(L,"padding-top","60.714%"),l(L,"width","100%")},m(e,v){d(e,i,v),s(i,f),s(f,u),s(u,G),s(i,y),s(i,x),s(x,w),s(w,_),d(e,Hs,v),d(e,m,v),s(m,cs),s(cs,R),s(R,qs),s(m,Fs),s(m,ks),s(ks,H),s(H,b),s(m,Us),s(m,hs),s(hs,Js),s(m,Xs),s(m,q),s(q,vs),s(vs,Ys),s(q,Ks),s(q,ys),s(ys,Qs),d(e,Ns,v),d(e,O,v),s(O,ds),s(ds,F),s(F,Ws),s(O,Zs),s(O,Z),Z.innerHTML=Co,d(e,As,v),d(e,E,v),s(E,us),s(us,U),s(U,sa),s(E,aa),s(E,xs),s(xs,J),s(J,oa),s(J,ss),s(ss,na),s(J,ta),s(E,ea),s(E,as),as.innerHTML=To,s(E,ra),s(E,gs),s(gs,N),s(N,I),d(e,Ls,v),d(e,$,v),s($,fs),s(fs,X),s(X,la),s($,ia),s($,ws),s(ws,_s),s(_s,pa),s($,ca),s($,os),os.innerHTML=So,s($,ka),s($,ms),s(ms,A),s(A,C),d(e,Os,v),d(e,P,v),s(P,bs),s(bs,Y),s(Y,ha),s(P,va),s(P,ns),ns.innerHTML=Ho,d(e,Ps,v),d(e,j,v),s(j,Es),s(Es,g),s(g,ya),s(g,ts),s(ts,da),s(g,ua),s(g,es),s(es,xa),s(g,ga),s(g,rs),s(rs,fa),s(g,wa),s(j,_a),s(j,ls),ls.innerHTML=No,d(e,js,v),d(e,M,v),s(M,Is),s(Is,K),s(K,ma),s(M,ba),s(M,is),is.innerHTML=Ao,d(e,Ms,v),d(e,S,v),s(S,$s),s($s,Q),s(Q,Ea),s(S,Ia),s(S,Cs),s(Cs,$a),s(S,Ca),s(S,Ts),s(Ts,L),s(L,T)},p:Ko,d(e){e&&a(i),e&&a(Hs),e&&a(m),e&&a(Ns),e&&a(O),e&&a(As),e&&a(E),e&&a(Ls),e&&a($),e&&a(Os),e&&a(P),e&&a(Ps),e&&a(j),e&&a(js),e&&a(M),e&&a(Ms),e&&a(S)}}}function en(W){let i,f;const u=[W[0],$o];let G={$$slots:{default:[tn]},$$scope:{ctx:W}};for(let y=0;y<u.length;y+=1)G=Ta(G,u[y]);return i=new Qo({props:G}),{c(){Go(i.$$.fragment)},l(y){Ro(i.$$.fragment,y)},m(y,x){qo(i,y,x),f=!0},p(y,[x]){const w=x&1?Fo(u,[x&1&&fo(y[0]),x&0&&fo($o)]):{};x&2&&(w.$$scope={dirty:x,ctx:y}),i.$set(w)},i(y){f||(Uo(i.$$.fragment,y),f=!0)},o(y){Jo(i.$$.fragment,y),f=!1},d(y){Xo(i,y)}}}const $o={title:"Solid color swipe Svelte Transition",tags:["svelte","transition"],description:"The ResultBreak it down slowlyThe transition can be broken down into 2 halves:1\uFE0F\u20E3 a solid color growing from the left covering the whole text area2\uFE0F\u20E3 as the solid color shrinks, it reveals the text1. The first thing is to figure out the color of the text...",tableOfContents:[{link:"the-result",title:"The Result"},{link:"break-it-down-slowly",title:"Break it down slowly",nested:[{link:"1-the-first-thing-is-to-figure-out-the-color-of-the-text",title:"1. The first thing is to figure out the color of the text"},{link:"2-i-tried-using-linear-gradient-to-draw-the-background",title:"2. I tried using linear-gradient to draw the background"},{link:"3-next-i-need-to-hide-reveal-the-text-at-the-right-time",title:"3. Next I need to hide / reveal the text at the right time"},{link:"4-combining-the-both-2-and-3-together",title:"4. Combining the both 2. and 3. together"},{link:"5-final-touches-pass-the-duration-delay-and-easing-into-the-returned-object",title:"5. final touches, pass the  `duration` ,  `delay` , and  `easing`  into the returned object"}]},{link:"final-code",title:"Final code"},{link:"extra",title:"Extra"}]};function rn(W,i,f){return Yo("blog",{image:Wo}),W.$$set=u=>{f(0,i=Ta(Ta({},i),wo(u)))},i=wo(i),[i]}class yn extends Bo{constructor(i){super();zo(this,i,rn,en,Vo,{})}}export{yn as default,$o as metadata};
