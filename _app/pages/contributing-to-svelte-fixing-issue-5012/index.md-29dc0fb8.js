import{S as Dh,i as Ah,s as Mh,C as Zi,w as Rh,x as jh,y as Gh,z as Nh,A as sh,q as Fh,o as Bh,B as Vh,r as qh,Y as ah,e as n,t,k as i,Z as Yi,c as o,a as l,h as s,d as a,m as c,_ as Ji,b as r,X as nh,f as x,g as M,H as e,J as $h}from"../../chunks/vendor-da4388d4.js";import{B as Wh}from"../../chunks/BlogLayout-14cfab6f.js";import"../../chunks/stores-1fad7c36.js";import"../../chunks/ldjson-b0805387.js";/* empty css                                */var zh="https://lihautan.com/_app/assets/changelog-afd4ad06.webp",Uh="https://lihautan.com/_app/assets/changelog-0f7c76de.webp",Yh="https://lihautan.com/_app/assets/changelog-c0dfd240.png",oh="https://lihautan.com/_app/assets/changelog-d8bd0288.png",Jh="https://lihautan.com/_app/assets/bug-d131fc8e.gif",lh="https://lihautan.com/_app/assets/bug-423b948d.gif",Zh="https://lihautan.com/_app/assets/hero-twitter-c01dd190.jpg";function Xh(Xe){let g,H,T,le,m,w,Ke,Qe,$a,Wa,za,re,Ua,ie,Ya,Ja,ra,U,Ps,ce,Za,Xa,k,et,Y,Ka,ia,ih="{@html value}",ca,pe,Qa,en,J,tn,pa,ch="{@html value}",ha,sn,tt,Cs,an,nn,st,he,on,ln,at,rn,cn,nt,Ss,pn,hn,ot,dn,vn,lt,Is,un,kn,rt,gn,fn,it,Os,mn,yn,ct,_n,En,R,xn,pt,wn,bn,ht,Tn,Hn,da,E,Ls,de,Pn,Cn,Ds,Sn,In,As,On,Ln,G,Dn,dt,An,Mn,vt,Rn,jn,Gn,Ms,N,P,Xi,Nn,Rs,Fn,va,y,js,ve,Bn,Vn,ue,qn,ua,ph="<",ka,$n,ke,Wn,ut,zn,Un,Yn,ge,Jn,Z,kt,Zn,Xn,Kn,Qn,Gs,F,gt,Ns,C,Ki,eo,ft,to,fe,so,me,ao,no,oo,B,lo,ye,ro,io,mt,co,po,ga,p,Fs,_e,ho,vo,X,Ee,yt,uo,ko,K,_t,go,fo,mo,yo,Et,hh=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-comment)">// in the compiled Svelte code,</span></span>
<span class="line"><span style="color: var(--shiki-token-comment)">// you would see the use of &#96;HtmlTag&#96;</span></span>
<span class="line"><span style="color: var(--shiki-token-comment)">// when you use &#96;&#123;@html ...&#125;&#96;</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">html_tag</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">HtmlTag</span><span style="color: var(--shiki-color-text)">(anchor);</span></span>
<span class="line"><span style="color: var(--shiki-token-comment)">// mounting raw html string, call the &#96;m&#96;ount method</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">html_tag</span><span style="color: var(--shiki-token-function)">.m</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;&lt;div&gt;content&lt;/div&gt;&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> target</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> anchor);</span></span>
<span class="line"><span style="color: var(--shiki-token-comment)">// when the html string content change, call the u&#96;p&#96;date method</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">html_tag</span><span style="color: var(--shiki-token-function)">.p</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;&lt;b&gt;new&lt;/b&gt;html&lt;br /&gt;&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-token-comment)">// when unmount, call the &#96;d&#96;etach method</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">html_tag</span><span style="color: var(--shiki-token-function)">.d</span><span style="color: var(--shiki-color-text)">();</span></span></code></pre>`,_o,O,Eo,xt,xo,wo,wt,bo,To,bt,Ho,Po,Co,xe,So,Tt,Io,Oo,Lo,V,Do,Ht,Ao,Mo,Pt,Ro,jo,Go,S,Ct,No,Fo,we,St,Bo,Vo,It,qo,$o,Ot,Wo,zo,Uo,q,Yo,Lt,Jo,Zo,Dt,Xo,Ko,Qo,At,dh=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-comment)">&lt;!-- Initially --&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">article</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">&lt;!-- slot --&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#123;@html content&#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">&lt;!-- slot --&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">p</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    This line should be last.</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;/</span><span style="color: var(--shiki-token-string-expression)">p</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">article</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-comment)">&lt;!-- when the html content changed --&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">article</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">&lt;!-- slot --&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">&lt;!-- &#123;@html content&#125; removed --&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">&lt;!-- slot --&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">p</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    This line should be last.</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;/</span><span style="color: var(--shiki-token-string-expression)">p</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#123;@html content&#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">&lt;!-- inserted at the end of the parent --&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">article</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,el,j,be,tl,Mt,sl,al,nl,Rt,ol,ll,jt,rl,il,cl,L,pl,Gt,hl,dl,Nt,vl,ul,Ft,kl,gl,fl,Q,ml,Bt,yl,_l,Vt,El,xl,ee,Bs,wl,bl,Te,Tl,Hl,Pl,qt,vh=`<pre class="prism language-svelte"><code><div class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"></div><div class="line">  <span class="token keyword">let</span> content <span class="token operator">=</span> <span class="token string">'first line'</span><span class="token punctuation">;</span></div><div class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></div><div class="line"></div><div class="line"><span class="token language-javascript"><span class="token punctuation">&#123;</span>@html content<span class="token punctuation">&#125;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">on:</span>click=</span><span class="token language-javascript"><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>content <span class="token operator">=</span> <span class="token string">'line first'</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span> <span class="token punctuation">/></span></span></div></code></pre>`,Cl,$t,uh=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-comment)">// compiled js</span></span>
<span class="line"><span style="color: var(--shiki-token-comment)">// ...</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">c</span><span style="color: var(--shiki-color-text)">() &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    button </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">element</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;button&quot;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    html_tag </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">HtmlTag</span><span style="color: var(--shiki-color-text)">(button);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-token-comment)">// ...</span></span></code></pre>`,Sl,$,Il,Wt,Ol,Ll,zt,Dl,Al,Ml,He,Rl,Ut,jl,Gl,Nl,te,Vs,Fl,Bl,Pe,Vl,ql,$l,Yt,kh=`<pre class="prism language-svelte"><code><div class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"></div><div class="line">	<span class="token keyword">import</span> Foo <span class="token keyword">from</span> <span class="token string">'./Foo.svelte'</span><span class="token punctuation">;</span></div><div class="line">  <span class="token keyword">let</span> content <span class="token operator">=</span> <span class="token string">'first line'</span><span class="token punctuation">;</span></div><div class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></div><div class="line"></div><div class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">on:</span>click=</span><span class="token language-javascript"><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>content <span class="token operator">=</span> <span class="token string">'line first'</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span> <span class="token punctuation">/></span></span></div><div class="line"><span class="token language-javascript"><span class="token punctuation">&#123;</span>@html content<span class="token punctuation">&#125;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Foo</span> <span class="token punctuation">/></span></span></div></code></pre>`,Wl,Jt,gh=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-comment)">// compiled js</span></span>
<span class="line"><span style="color: var(--shiki-token-comment)">// ...</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">c</span><span style="color: var(--shiki-color-text)">() &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    button </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">element</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;button&quot;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    t </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">space</span><span style="color: var(--shiki-color-text)">();</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    html_anchor </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">empty</span><span style="color: var(--shiki-color-text)">();</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">create_component</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">foo</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">$$</span><span style="color: var(--shiki-color-text)">.fragment);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    html_tag </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">HtmlTag</span><span style="color: var(--shiki-color-text)">(html_anchor);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-token-comment)">// ...</span></span></code></pre>`,zl,D,Ul,Zt,Yl,Jl,Ce,Zl,Xl,Xt,Kl,Ql,er,qs,tr,sr,A,ar,Kt,nr,or,Qt,lr,rr,es,ir,cr,pr,W,hr,ts,dr,vr,ss,ur,kr,gr,$s,fr,mr,Se,yr,as,_r,Er,xr,ns,fh='<pre class="prism language-svelte"><code><div class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span></div><div class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token punctuation">/></span></span></div><div class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>This is the last child<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></div><div class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></div></code></pre>',wr,Ie,br,os,Tr,Hr,Pr,ls,mh=`<pre class="prism language-svelte"><code><div class="line"><span class="token comment">&lt;!-- Component.svelte --></span></div><div class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"></div><div class="line">  <span class="token keyword">export</span> <span class="token keyword">let</span> content<span class="token punctuation">;</span></div><div class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></div><div class="line"></div><div class="line"><span class="token language-javascript"><span class="token punctuation">&#123;</span>@html content<span class="token punctuation">&#125;</span></span></div><div class="line"></div><div class="line"><span class="token comment">&lt;!-- App.svelte --></span></div><div class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"></div><div class="line">  <span class="token keyword">import</span> Component <span class="token keyword">from</span> <span class="token string">'./Component.svelte'</span><span class="token punctuation">;</span></div><div class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></div><div class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span></div><div class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Component</span> <span class="token attr-name">content=</span><span class="token language-javascript"><span class="token punctuation">&#123;</span><span class="token string">'&lt;div>html string&lt;/div>'</span><span class="token punctuation">&#125;</span></span><span class="token punctuation">/></span></span></div><div class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>This is the last child<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></div><div class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></div></code></pre>`,Cr,Ws,Oe,Sr,Ir,zs,Or,fa,d,Us,Le,Lr,Dr,Ys,Ar,Mr,Js,Rr,jr,De,Ae,Gr,rs,Nr,Fr,Br,is,Vr,Me,cs,ps,qr,$r,Wr,hs,ds,zr,Ur,Yr,Zs,Jr,Zr,Re,Xr,vs,Kr,Qr,ei,us,yh=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-comment)">// src/compiler/compile/render_dom/wrappers/RawMustacheTag.ts#L42</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">needs_anchor</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> in_head </span><span style="color: var(--shiki-token-keyword)">||</span><span style="color: var(--shiki-color-text)"> (</span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-color-text)">.next </span><span style="color: var(--shiki-token-keyword)">&amp;&amp;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">!</span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">next</span><span style="color: var(--shiki-token-function)">.is_dom_node</span><span style="color: var(--shiki-color-text)">());</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-comment)">// ...</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> (needs_anchor) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">block</span><span style="color: var(--shiki-token-function)">.add_element</span><span style="color: var(--shiki-color-text)">(html_anchor</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">x</span><span style="color: var(--shiki-token-string-expression)">&#96;@empty()&#96;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">x</span><span style="color: var(--shiki-token-string-expression)">&#96;@empty()&#96;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> parent_node);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,ti,Xs,je,si,ai,Ks,ni,oi,Ge,Ne,li,ks,ri,ii,ci,Fe,pi,Qs,hi,di,vi,gs,_h=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">needs_anchor</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  in_head </span><span style="color: var(--shiki-token-keyword)">||</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  (</span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-color-text)">.next</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">?</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">!</span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">next</span><span style="color: var(--shiki-token-function)">.is_dom_node</span><span style="color: var(--shiki-color-text)">()</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">!</span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-color-text)">.parent </span><span style="color: var(--shiki-token-keyword)">||</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">!</span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">parent</span><span style="color: var(--shiki-token-function)">.is_dom_node</span><span style="color: var(--shiki-color-text)">());</span></span></code></pre>`,ui,ea,ki,gi,Be,ta,fi,mi,Ve,yi,fs,_i,Ei,xi,qe,wi,ms,bi,Ti,Hi,ys,Eh=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">export</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">default</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  html</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#96;</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">    &lt;button&gt;Switch&lt;/button&gt;</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">    &lt;p&gt;Another first line&lt;/p&gt;</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">    &lt;p&gt;This line should be last.&lt;/p&gt;</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">  &#96;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">test</span><span style="color: var(--shiki-color-text)">(&#123; assert</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> target</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> window &#125;) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">btn</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">target</span><span style="color: var(--shiki-token-function)">.querySelector</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;button&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">clickEvent</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">window</span><span style="color: var(--shiki-token-function)">.MouseEvent</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;click&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// simulate clicks</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">btn</span><span style="color: var(--shiki-token-function)">.dispatchEvent</span><span style="color: var(--shiki-color-text)">(clickEvent);</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">assert</span><span style="color: var(--shiki-token-function)">.htmlEqual</span><span style="color: var(--shiki-color-text)">(</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-constant)">target</span><span style="color: var(--shiki-color-text)">.innerHTML</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-string-expression)">&#96;</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">        &lt;button&gt;Switch&lt;/button&gt;</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">        &lt;p&gt;First line&lt;/p&gt;</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">        &lt;p&gt;This line should be last.&lt;/p&gt;</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">      &#96;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    );</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// simulate clicks</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">btn</span><span style="color: var(--shiki-token-function)">.dispatchEvent</span><span style="color: var(--shiki-color-text)">(clickEvent);</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">assert</span><span style="color: var(--shiki-token-function)">.htmlEqual</span><span style="color: var(--shiki-color-text)">(</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-constant)">target</span><span style="color: var(--shiki-color-text)">.innerHTML</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-string-expression)">&#96;</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">        &lt;button&gt;Switch&lt;/button&gt;</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">        &lt;p&gt;Another first line&lt;/p&gt;</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">        &lt;p&gt;This line should be last.&lt;/p&gt;</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">      &#96;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    );</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;;</span></span></code></pre>`,Pi,$e,Ci,We,Si,Ii,Oi,Li,Di,ze,Ai,Ue,Mi,Ri,ji,Ye,Gi,Je,Ni,Fi;return{c(){g=n("section"),H=n("h2"),T=n("a"),le=t("Background"),m=i(),w=n("p"),Ke=t("Following "),Qe=n("a"),$a=t("Contributing to Svelte - Fixing issue #4392"),Wa=t(", I find it interesting to write my thought process down on fixing a Svelte issue."),za=i(),re=n("p"),Ua=t("So today, I'm going to walk through a new issue, "),ie=n("a"),Ya=t("#5012"),Ja=t("."),ra=i(),U=n("section"),Ps=n("h2"),ce=n("a"),Za=t("The bug"),Xa=i(),k=n("div"),et=n("p"),Y=n("strong"),Ka=t("Slot containing only "),ia=new Yi,ca=t(" renders in wrong place on update "),pe=n("a"),Qa=t("#5012"),en=i(),J=n("p"),tn=t("When a slotted component is instantiated and the only contents of the slot is "),pa=new Yi,ha=t(", changing value will cause the HTML-ized value to render at the end of the slot's parent element (i.e. after all sibling elements) instead of in the correct place."),sn=i(),tt=n("p"),Cs=n("strong"),an=t("To Reproduce"),nn=i(),st=n("p"),he=n("a"),on=t("https://svelte.dev/repl/1f9da40bca4b44a089041e826648de2f"),ln=i(),at=n("p"),rn=t("Click the Switch button and see that the contents of the slot moves to the end."),cn=i(),nt=n("p"),Ss=n("strong"),pn=t("Expected behavior"),hn=i(),ot=n("p"),dn=t("Slot continues to render in the correct place."),vn=i(),lt=n("p"),Is=n("strong"),un=t("Information about your Svelte project:"),kn=i(),rt=n("p"),gn=t("Looks like this appeared in version 3.7 and is still present in 3.23.2. If I run the REPL on 3.6.11 it behaves properly."),fn=i(),it=n("p"),Os=n("strong"),mn=t("Severity"),yn=i(),ct=n("p"),_n=t("Potentially serious, but not serious for me."),En=i(),R=n("p"),xn=t("Can be worked around by changing the slot contents to "),pt=n("code"),wn=t("<div>{@html value}</div>"),bn=t(" or changing the child component to use "),ht=n("code"),Tn=t("<div><slot /><div>"),Hn=t(", which works fine for me."),da=i(),E=n("section"),Ls=n("h2"),de=n("a"),Pn=t("Verifying the bug"),Cn=i(),Ds=n("p"),Sn=t("I clicked into the REPL and tried to understand about the bug."),In=i(),As=n("p"),On=t('Initially, you see 2 lines of text, "Another first line", "This line should be last.".'),Ln=i(),G=n("p"),Dn=t("But as soon as I updated the "),dt=n("code"),An=t("{@html content}"),Mn=t(", the "),vt=n("code"),Rn=t("{@html content}"),jn=t(' moved to be after the "This line should be last." and stayed there.'),Gn=i(),Ms=n("p"),N=n("span"),P=n("img"),Nn=i(),Rs=n("p"),Fn=t("Yup. This is indeed a bug! \u{1F41B}"),va=i(),y=n("section"),js=n("h2"),ve=n("a"),Bn=t("Investigating the bug"),Vn=i(),ue=n("p"),qn=t("It's amazing that the issue author tracked down the regression behavior of this issue, stating that it started happening since 3.7. Probably because the author just upgraded Svelte from "),ua=new Yi,ka=t(" 3.7, or maybe he tried every versions to figure out whether it is regression bug or an undiscovered bug. Anyway, kudos to the issue author! \u{1F4AA} \u{1F4AA}"),$n=i(),ke=n("p"),Wn=t("Most open source projects maintain a change log file, usually named "),ut=n("code"),zn=t("CHANGELOG.md"),Un=t(" located at the root of the project folder, so that you can figured out what's added / removed / updated in each version."),Yn=i(),ge=n("p"),Jn=t("You can find Svelte's "),Z=n("a"),kt=n("code"),Zn=t("CHANGELOG.md"),Xn=t(" here"),Kn=t("."),Qn=i(),Gs=n("p"),F=n("span"),gt=n("picture"),Ns=n("source"),C=n("img"),eo=i(),ft=n("p"),to=t("From the changelog, the most relevant commits seemed to be "),fe=n("strong"),so=t('"Remount HTML tags correctly ('),me=n("a"),ao=t("#3329"),no=t(')"'),oo=i(),B=n("p"),lo=t("Reading through the PR, it seemed that "),ye=n("a"),ro=t("#3329"),io=t(" was when "),mt=n("code"),co=t("HtmlTag"),po=t(" is first introduced!"),ga=i(),p=n("section"),Fs=n("h3"),_e=n("a"),ho=t("HtmlTag"),vo=i(),X=n("p"),Ee=n("a"),yt=n("code"),uo=t("HtmlTag"),ko=t(" is a helper class that helps Svelte manage raw "),K=n("a"),_t=n("code"),go=t("{@html ...}"),fo=t(" tag"),mo=t("."),yo=i(),Et=n("div"),_o=i(),O=n("p"),Eo=t("The HtmlTag instance provides the "),xt=n("code"),xo=t("m"),wo=t(", "),wt=n("code"),bo=t("p"),To=t(", "),bt=n("code"),Ho=t("d"),Po=t(" method, and it will maintain the HTML elements created through the HTML string."),Co=i(),xe=n("p"),So=t("So, before v3.7, "),Tt=n("code"),Io=t("{@html ...}"),Oo=t(" was handled differently, and from the PR, I assume it was more buggy than the current implementation, albeit getting the case reported by this issue #5012 right. So, there's no reverting back, nor taking the implementation pre-v3.7 as a reference to figure this bug out."),Lo=i(),V=n("p"),Do=t("Reading through the implementation of the "),Ht=n("code"),Ao=t("HtmlTag"),Mo=t(", it seemed that the "),Pt=n("code"),Ro=t("anchor"),jo=t(" is a key to this issue."),Go=i(),S=n("p"),Ct=n("code"),No=t("HtmlTag"),Fo=t(" uses "),we=n("a"),St=n("code"),Bo=t("insertBefore"),Vo=t(" to insert HTML elements into the DOM. There's a nullable 2nd argument for "),It=n("code"),qo=t("insertBefore"),$o=t(", if it is "),Ot=n("code"),Wo=t("null"),zo=t(", the element will be inserted at the end of the parent."),Uo=i(),q=n("p"),Yo=t("In this case, the "),Lt=n("code"),Jo=t("anchor"),Zo=t(" is indeed "),Dt=n("code"),Xo=t("null"),Ko=t(", so when there's a change in the HTML content, the previous HTML elements were removed and the new HTML elements were inserted at the end of the parent."),Qo=i(),At=n("div"),el=i(),j=n("p"),be=n("strong"),tl=t("Why doesn't the "),Mt=n("code"),sl=t("{@html content}"),al=t(" added at the end of the parent in the initial render?"),nl=t(" Well, the elements are added in order during mounting. The HTML elements from "),Rt=n("code"),ol=t("HtmlTag"),ll=t(" was added at the end of the parent, followed by the "),jt=n("code"),rl=t("<p>This line should be last</p>"),il=t("."),cl=i(),L=n("p"),pl=t("The "),Gt=n("code"),hl=t("anchor"),dl=t(" is an argument to the "),Nt=n("code"),vl=t("HtmlTag"),ul=t(" constructor, so one can safely assume that it is not always "),Ft=n("code"),kl=t("null"),gl=t("."),fl=i(),Q=n("p"),ml=t("So, I tried out using "),Bt=n("code"),yl=t("{@html content}"),_l=t(" in various ways, to figure out what may be an anchor for the "),Vt=n("code"),El=t("HtmlTag"),xl=i(),ee=n("p"),Bs=n("strong"),wl=t("Repro #1"),bl=t(" ("),Te=n("a"),Tl=t("REPL"),Hl=t(")"),Pl=i(),qt=n("div"),Cl=i(),$t=n("div"),Sl=i(),$=n("p"),Il=t("In this case, the "),Wt=n("code"),Ol=t("<button />"),Ll=t(" element turns out to be the anchor, which totally make sense, as the html content should be inserted before "),zt=n("code"),Dl=t("<button />"),Al=t("."),Ml=i(),He=n("p"),Rl=t("So, it seemed like the anchor is the next element right after "),Ut=n("code"),jl=t("{@html ...}"),Gl=t(". \u{1F914}"),Nl=i(),te=n("p"),Vs=n("strong"),Fl=t("Repro #2"),Bl=t(" ("),Pe=n("a"),Vl=t("REPL"),ql=t(")"),$l=i(),Yt=n("div"),Wl=i(),Jt=n("div"),zl=i(),D=n("p"),Ul=t("If the next element right after "),Zt=n("code"),Yl=t("{@html ...}"),Jl=t(" is a component, then Svelte will insert a empty "),Ce=n("a"),Zl=t("Text"),Xl=t(" node in between "),Xt=n("code"),Kl=t("{@html ...}"),Ql=t(" and the component, and the anchor is the empty Text node."),er=i(),qs=n("p"),tr=t("Well, that make sense too, because we can't see what's inside the component, we can't get the first element rendered in the component as the anchor. So, an extra empty Text node is used for anchoring."),sr=i(),A=n("p"),ar=t("So, it seemed like the anchor for the "),Kt=n("code"),nr=t("HtmlTag"),or=t(" depends on the next element, and the "),Qt=n("code"),lr=t("HtmlTag"),rr=t(" itself is the last element, then the anchor would be "),es=n("code"),ir=t("null"),cr=t("."),pr=i(),W=n("p"),hr=t("This seemed fine in most cases, as in if the "),ts=n("code"),dr=t("HtmlTag"),vr=t(" is indeed the last element of its parent, then, we don't need an anchor. Adding and updating "),ss=n("code"),ur=t("HtmlTag"),kr=t(" will always add HTML elements at the end of its parent."),gr=i(),$s=n("p"),fr=t("However, I figured there are 2 edge cases that this assumption may not be true."),mr=i(),Se=n("p"),yr=t("The 1st edge case is the one reported in the issue #5012, if the "),as=n("code"),_r=t("{@html ...}"),Er=t(" is the last element within a slot. As we can't tell how the slot would be used in the component, it may not be the last element of it's parent."),xr=i(),ns=n("div"),wr=i(),Ie=n("p"),br=t("The 2nd edge case is that "),os=n("code"),Tr=t("{@html ...}"),Hr=t(" is the last element, but it is a the root of the Component."),Pr=i(),ls=n("div"),Cr=i(),Ws=n("p"),Oe=n("a"),Sr=t("REPL"),Ir=i(),zs=n("p"),Or=t("As you can see in this contrived example, we can't assume where the component is being used by its parent, so, even it seemed to be the last element in the component, it may not be the case in the parent component."),fa=i(),d=n("section"),Us=n("h2"),Le=n("a"),Lr=t("Fixing the bug"),Dr=i(),Ys=n("p"),Ar=t("Once we figured out the cause of the bug, the fix is much simpler."),Mr=i(),Js=n("p"),Rr=t("Just as how Svelte will add a empty Text node as an anchor if the next element is a component, we are going to add the same anchor if"),jr=i(),De=n("ul"),Ae=n("li"),Gr=t("the "),rs=n("code"),Nr=t("{@html ...}"),Fr=t(" has no next element, and"),Br=i(),is=n("li"),Vr=t("either"),Me=n("ul"),cs=n("li"),ps=n("code"),qr=t("{@html ...}"),$r=t(" is at the root of a slot, or"),Wr=i(),hs=n("li"),ds=n("code"),zr=t("{@html ...}"),Ur=t(" is at the root of a component."),Yr=i(),Zs=n("p"),Jr=t("I know my way in the Svelte repo, good enough to know where to add this extra condition."),Zr=i(),Re=n("p"),Xr=t("But if you are new, you can try global search the keyword "),vs=n("code"),Kr=t("html_anchor"),Qr=t(", the variable name of the anchor added by Svelte, it should lead you to it."),ei=i(),us=n("div"),ti=i(),Xs=n("p"),je=n("a"),si=t("Link to Github"),ai=i(),Ks=n("p"),ni=t("Here we see that the condition of adding an anchor is that if"),oi=i(),Ge=n("ul"),Ne=n("li"),li=t("it is in the "),ks=n("code"),ri=t("<svelte:head>"),ii=t(", or"),ci=i(),Fe=n("li"),pi=t("the next element is not a dom element, (which could be a component, or logic blocks "),Qs=n("em"),hi=t("(oh why didn't I think about this case too?)"),di=t(")"),vi=i(),gs=n("div"),ui=i(),ea=n("p"),ki=t("So, we check if"),gi=i(),Be=n("ul"),ta=n("li"),fi=t("it has a parent (if it is at the root of component), or"),mi=i(),Ve=n("li"),yi=t("if the parent is not an element (it could be within a slot, or a logic block "),fs=n("code"),_i=t("{#if}"),Ei=t(")"),xi=i(),qe=n("p"),wi=t("For the test case, I used to 2 edge case examples, try to simulate some clicks, and make sure that the "),ms=n("code"),bi=t("{@html ...}"),Ti=t(" stay in place even after the HTML content changes."),Hi=i(),ys=n("div"),Pi=i(),$e=n("p"),Ci=t("You can read the "),We=n("a"),Si=t("Pull Request #5061"),Ii=t(" to see all the test cases written up."),Oi=i(),Li=n("hr"),Di=i(),ze=n("p"),Ai=t("If you wish to learn more about Svelte, "),Ue=n("a"),Mi=t("follow me on Twitter"),Ri=t("."),ji=i(),Ye=n("p"),Gi=t("If you have anything unclear about this article, find me on "),Je=n("a"),Ni=t("Twitter"),Fi=t(" too!"),this.h()},l(u){g=o(u,"SECTION",{});var _=l(g);H=o(_,"H2",{});var Qi=l(H);T=o(Qi,"A",{href:!0,id:!0});var ec=l(T);le=s(ec,"Background"),ec.forEach(a),Qi.forEach(a),m=c(_),w=o(_,"P",{});var ma=l(w);Ke=s(ma,"Following "),Qe=o(ma,"A",{href:!0});var tc=l(Qe);$a=s(tc,"Contributing to Svelte - Fixing issue #4392"),tc.forEach(a),Wa=s(ma,", I find it interesting to write my thought process down on fixing a Svelte issue."),ma.forEach(a),za=c(_),re=o(_,"P",{});var ya=l(re);Ua=s(ya,"So today, I'm going to walk through a new issue, "),ie=o(ya,"A",{href:!0,rel:!0});var sc=l(ie);Ya=s(sc,"#5012"),sc.forEach(a),Ja=s(ya,"."),ya.forEach(a),_.forEach(a),ra=c(u),U=o(u,"SECTION",{});var _a=l(U);Ps=o(_a,"H2",{});var ac=l(Ps);ce=o(ac,"A",{href:!0,id:!0});var nc=l(ce);Za=s(nc,"The bug"),nc.forEach(a),ac.forEach(a),Xa=c(_a),k=o(_a,"DIV",{class:!0});var f=l(k);et=o(f,"P",{class:!0});var oc=l(et);Y=o(oc,"STRONG",{});var sa=l(Y);Ka=s(sa,"Slot containing only "),ia=Ji(sa),ca=s(sa," renders in wrong place on update "),pe=o(sa,"A",{href:!0,rel:!0});var lc=l(pe);Qa=s(lc,"#5012"),lc.forEach(a),sa.forEach(a),oc.forEach(a),en=c(f),J=o(f,"P",{class:!0});var Ea=l(J);tn=s(Ea,"When a slotted component is instantiated and the only contents of the slot is "),pa=Ji(Ea),ha=s(Ea,", changing value will cause the HTML-ized value to render at the end of the slot's parent element (i.e. after all sibling elements) instead of in the correct place."),Ea.forEach(a),sn=c(f),tt=o(f,"P",{class:!0});var rc=l(tt);Cs=o(rc,"STRONG",{});var ic=l(Cs);an=s(ic,"To Reproduce"),ic.forEach(a),rc.forEach(a),nn=c(f),st=o(f,"P",{class:!0});var cc=l(st);he=o(cc,"A",{href:!0,rel:!0});var pc=l(he);on=s(pc,"https://svelte.dev/repl/1f9da40bca4b44a089041e826648de2f"),pc.forEach(a),cc.forEach(a),ln=c(f),at=o(f,"P",{class:!0});var hc=l(at);rn=s(hc,"Click the Switch button and see that the contents of the slot moves to the end."),hc.forEach(a),cn=c(f),nt=o(f,"P",{class:!0});var dc=l(nt);Ss=o(dc,"STRONG",{});var vc=l(Ss);pn=s(vc,"Expected behavior"),vc.forEach(a),dc.forEach(a),hn=c(f),ot=o(f,"P",{class:!0});var uc=l(ot);dn=s(uc,"Slot continues to render in the correct place."),uc.forEach(a),vn=c(f),lt=o(f,"P",{class:!0});var kc=l(lt);Is=o(kc,"STRONG",{});var gc=l(Is);un=s(gc,"Information about your Svelte project:"),gc.forEach(a),kc.forEach(a),kn=c(f),rt=o(f,"P",{class:!0});var fc=l(rt);gn=s(fc,"Looks like this appeared in version 3.7 and is still present in 3.23.2. If I run the REPL on 3.6.11 it behaves properly."),fc.forEach(a),fn=c(f),it=o(f,"P",{class:!0});var mc=l(it);Os=o(mc,"STRONG",{});var yc=l(Os);mn=s(yc,"Severity"),yc.forEach(a),mc.forEach(a),yn=c(f),ct=o(f,"P",{class:!0});var _c=l(ct);_n=s(_c,"Potentially serious, but not serious for me."),_c.forEach(a),En=c(f),R=o(f,"P",{class:!0});var _s=l(R);xn=s(_s,"Can be worked around by changing the slot contents to "),pt=o(_s,"CODE",{class:!0});var Ec=l(pt);wn=s(Ec,"<div>{@html value}</div>"),Ec.forEach(a),bn=s(_s," or changing the child component to use "),ht=o(_s,"CODE",{class:!0});var xc=l(ht);Tn=s(xc,"<div><slot /><div>"),xc.forEach(a),Hn=s(_s,", which works fine for me."),_s.forEach(a),f.forEach(a),_a.forEach(a),da=c(u),E=o(u,"SECTION",{});var I=l(E);Ls=o(I,"H2",{});var wc=l(Ls);de=o(wc,"A",{href:!0,id:!0});var bc=l(de);Pn=s(bc,"Verifying the bug"),bc.forEach(a),wc.forEach(a),Cn=c(I),Ds=o(I,"P",{});var Tc=l(Ds);Sn=s(Tc,"I clicked into the REPL and tried to understand about the bug."),Tc.forEach(a),In=c(I),As=o(I,"P",{});var Hc=l(As);On=s(Hc,'Initially, you see 2 lines of text, "Another first line", "This line should be last.".'),Hc.forEach(a),Ln=c(I),G=o(I,"P",{});var Es=l(G);Dn=s(Es,"But as soon as I updated the "),dt=o(Es,"CODE",{class:!0});var Pc=l(dt);An=s(Pc,"{@html content}"),Pc.forEach(a),Mn=s(Es,", the "),vt=o(Es,"CODE",{class:!0});var Cc=l(vt);Rn=s(Cc,"{@html content}"),Cc.forEach(a),jn=s(Es,' moved to be after the "This line should be last." and stayed there.'),Es.forEach(a),Gn=c(I),Ms=o(I,"P",{});var Sc=l(Ms);N=o(Sc,"SPAN",{style:!0});var Ic=l(N);P=o(Ic,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),Ic.forEach(a),Sc.forEach(a),Nn=c(I),Rs=o(I,"P",{});var Oc=l(Rs);Fn=s(Oc,"Yup. This is indeed a bug! \u{1F41B}"),Oc.forEach(a),I.forEach(a),va=c(u),y=o(u,"SECTION",{});var b=l(y);js=o(b,"H2",{});var Lc=l(js);ve=o(Lc,"A",{href:!0,id:!0});var Dc=l(ve);Bn=s(Dc,"Investigating the bug"),Dc.forEach(a),Lc.forEach(a),Vn=c(b),ue=o(b,"P",{});var xa=l(ue);qn=s(xa,"It's amazing that the issue author tracked down the regression behavior of this issue, stating that it started happening since 3.7. Probably because the author just upgraded Svelte from "),ua=Ji(xa),ka=s(xa," 3.7, or maybe he tried every versions to figure out whether it is regression bug or an undiscovered bug. Anyway, kudos to the issue author! \u{1F4AA} \u{1F4AA}"),xa.forEach(a),$n=c(b),ke=o(b,"P",{});var wa=l(ke);Wn=s(wa,"Most open source projects maintain a change log file, usually named "),ut=o(wa,"CODE",{class:!0});var Ac=l(ut);zn=s(Ac,"CHANGELOG.md"),Ac.forEach(a),Un=s(wa," located at the root of the project folder, so that you can figured out what's added / removed / updated in each version."),wa.forEach(a),Yn=c(b),ge=o(b,"P",{});var ba=l(ge);Jn=s(ba,"You can find Svelte's "),Z=o(ba,"A",{href:!0,rel:!0});var Bi=l(Z);kt=o(Bi,"CODE",{class:!0});var Mc=l(kt);Zn=s(Mc,"CHANGELOG.md"),Mc.forEach(a),Xn=s(Bi," here"),Bi.forEach(a),Kn=s(ba,"."),ba.forEach(a),Qn=c(b),Gs=o(b,"P",{});var Rc=l(Gs);F=o(Rc,"SPAN",{style:!0});var jc=l(F);gt=o(jc,"PICTURE",{});var Vi=l(gt);Ns=o(Vi,"SOURCE",{type:!0,srcset:!0}),C=o(Vi,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),Vi.forEach(a),jc.forEach(a),Rc.forEach(a),eo=c(b),ft=o(b,"P",{});var qi=l(ft);to=s(qi,"From the changelog, the most relevant commits seemed to be "),fe=o(qi,"STRONG",{});var Ta=l(fe);so=s(Ta,'"Remount HTML tags correctly ('),me=o(Ta,"A",{href:!0,rel:!0});var Gc=l(me);ao=s(Gc,"#3329"),Gc.forEach(a),no=s(Ta,')"'),Ta.forEach(a),qi.forEach(a),oo=c(b),B=o(b,"P",{});var xs=l(B);lo=s(xs,"Reading through the PR, it seemed that "),ye=o(xs,"A",{href:!0,rel:!0});var Nc=l(ye);ro=s(Nc,"#3329"),Nc.forEach(a),io=s(xs," was when "),mt=o(xs,"CODE",{class:!0});var Fc=l(mt);co=s(Fc,"HtmlTag"),Fc.forEach(a),po=s(xs," is first introduced!"),xs.forEach(a),b.forEach(a),ga=c(u),p=o(u,"SECTION",{});var h=l(p);Fs=o(h,"H3",{});var Bc=l(Fs);_e=o(Bc,"A",{href:!0,id:!0});var Vc=l(_e);ho=s(Vc,"HtmlTag"),Vc.forEach(a),Bc.forEach(a),vo=c(h),X=o(h,"P",{});var aa=l(X);Ee=o(aa,"A",{href:!0,rel:!0});var qc=l(Ee);yt=o(qc,"CODE",{class:!0});var $c=l(yt);uo=s($c,"HtmlTag"),$c.forEach(a),qc.forEach(a),ko=s(aa," is a helper class that helps Svelte manage raw "),K=o(aa,"A",{href:!0,rel:!0});var $i=l(K);_t=o($i,"CODE",{class:!0});var Wc=l(_t);go=s(Wc,"{@html ...}"),Wc.forEach(a),fo=s($i," tag"),$i.forEach(a),mo=s(aa,"."),aa.forEach(a),yo=c(h),Et=o(h,"DIV",{class:!0});var xh=l(Et);xh.forEach(a),_o=c(h),O=o(h,"P",{});var se=l(O);Eo=s(se,"The HtmlTag instance provides the "),xt=o(se,"CODE",{class:!0});var zc=l(xt);xo=s(zc,"m"),zc.forEach(a),wo=s(se,", "),wt=o(se,"CODE",{class:!0});var Uc=l(wt);bo=s(Uc,"p"),Uc.forEach(a),To=s(se,", "),bt=o(se,"CODE",{class:!0});var Yc=l(bt);Ho=s(Yc,"d"),Yc.forEach(a),Po=s(se," method, and it will maintain the HTML elements created through the HTML string."),se.forEach(a),Co=c(h),xe=o(h,"P",{});var Ha=l(xe);So=s(Ha,"So, before v3.7, "),Tt=o(Ha,"CODE",{class:!0});var Jc=l(Tt);Io=s(Jc,"{@html ...}"),Jc.forEach(a),Oo=s(Ha," was handled differently, and from the PR, I assume it was more buggy than the current implementation, albeit getting the case reported by this issue #5012 right. So, there's no reverting back, nor taking the implementation pre-v3.7 as a reference to figure this bug out."),Ha.forEach(a),Lo=c(h),V=o(h,"P",{});var ws=l(V);Do=s(ws,"Reading through the implementation of the "),Ht=o(ws,"CODE",{class:!0});var Zc=l(Ht);Ao=s(Zc,"HtmlTag"),Zc.forEach(a),Mo=s(ws,", it seemed that the "),Pt=o(ws,"CODE",{class:!0});var Xc=l(Pt);Ro=s(Xc,"anchor"),Xc.forEach(a),jo=s(ws," is a key to this issue."),ws.forEach(a),Go=c(h),S=o(h,"P",{});var z=l(S);Ct=o(z,"CODE",{class:!0});var Kc=l(Ct);No=s(Kc,"HtmlTag"),Kc.forEach(a),Fo=s(z," uses "),we=o(z,"A",{href:!0,rel:!0});var Qc=l(we);St=o(Qc,"CODE",{class:!0});var ep=l(St);Bo=s(ep,"insertBefore"),ep.forEach(a),Qc.forEach(a),Vo=s(z," to insert HTML elements into the DOM. There's a nullable 2nd argument for "),It=o(z,"CODE",{class:!0});var tp=l(It);qo=s(tp,"insertBefore"),tp.forEach(a),$o=s(z,", if it is "),Ot=o(z,"CODE",{class:!0});var sp=l(Ot);Wo=s(sp,"null"),sp.forEach(a),zo=s(z,", the element will be inserted at the end of the parent."),z.forEach(a),Uo=c(h),q=o(h,"P",{});var bs=l(q);Yo=s(bs,"In this case, the "),Lt=o(bs,"CODE",{class:!0});var ap=l(Lt);Jo=s(ap,"anchor"),ap.forEach(a),Zo=s(bs," is indeed "),Dt=o(bs,"CODE",{class:!0});var np=l(Dt);Xo=s(np,"null"),np.forEach(a),Ko=s(bs,", so when there's a change in the HTML content, the previous HTML elements were removed and the new HTML elements were inserted at the end of the parent."),bs.forEach(a),Qo=c(h),At=o(h,"DIV",{class:!0});var wh=l(At);wh.forEach(a),el=c(h),j=o(h,"P",{});var Ze=l(j);be=o(Ze,"STRONG",{});var Pa=l(be);tl=s(Pa,"Why doesn't the "),Mt=o(Pa,"CODE",{class:!0});var op=l(Mt);sl=s(op,"{@html content}"),op.forEach(a),al=s(Pa," added at the end of the parent in the initial render?"),Pa.forEach(a),nl=s(Ze," Well, the elements are added in order during mounting. The HTML elements from "),Rt=o(Ze,"CODE",{class:!0});var lp=l(Rt);ol=s(lp,"HtmlTag"),lp.forEach(a),ll=s(Ze," was added at the end of the parent, followed by the "),jt=o(Ze,"CODE",{class:!0});var rp=l(jt);rl=s(rp,"<p>This line should be last</p>"),rp.forEach(a),il=s(Ze,"."),Ze.forEach(a),cl=c(h),L=o(h,"P",{});var ae=l(L);pl=s(ae,"The "),Gt=o(ae,"CODE",{class:!0});var ip=l(Gt);hl=s(ip,"anchor"),ip.forEach(a),dl=s(ae," is an argument to the "),Nt=o(ae,"CODE",{class:!0});var cp=l(Nt);vl=s(cp,"HtmlTag"),cp.forEach(a),ul=s(ae," constructor, so one can safely assume that it is not always "),Ft=o(ae,"CODE",{class:!0});var pp=l(Ft);kl=s(pp,"null"),pp.forEach(a),gl=s(ae,"."),ae.forEach(a),fl=c(h),Q=o(h,"P",{});var na=l(Q);ml=s(na,"So, I tried out using "),Bt=o(na,"CODE",{class:!0});var hp=l(Bt);yl=s(hp,"{@html content}"),hp.forEach(a),_l=s(na," in various ways, to figure out what may be an anchor for the "),Vt=o(na,"CODE",{class:!0});var dp=l(Vt);El=s(dp,"HtmlTag"),dp.forEach(a),na.forEach(a),xl=c(h),ee=o(h,"P",{});var oa=l(ee);Bs=o(oa,"STRONG",{});var vp=l(Bs);wl=s(vp,"Repro #1"),vp.forEach(a),bl=s(oa," ("),Te=o(oa,"A",{href:!0,rel:!0});var up=l(Te);Tl=s(up,"REPL"),up.forEach(a),Hl=s(oa,")"),oa.forEach(a),Pl=c(h),qt=o(h,"DIV",{class:!0});var bh=l(qt);bh.forEach(a),Cl=c(h),$t=o(h,"DIV",{class:!0});var Th=l($t);Th.forEach(a),Sl=c(h),$=o(h,"P",{});var Ts=l($);Il=s(Ts,"In this case, the "),Wt=o(Ts,"CODE",{class:!0});var kp=l(Wt);Ol=s(kp,"<button />"),kp.forEach(a),Ll=s(Ts," element turns out to be the anchor, which totally make sense, as the html content should be inserted before "),zt=o(Ts,"CODE",{class:!0});var gp=l(zt);Dl=s(gp,"<button />"),gp.forEach(a),Al=s(Ts,"."),Ts.forEach(a),Ml=c(h),He=o(h,"P",{});var Ca=l(He);Rl=s(Ca,"So, it seemed like the anchor is the next element right after "),Ut=o(Ca,"CODE",{class:!0});var fp=l(Ut);jl=s(fp,"{@html ...}"),fp.forEach(a),Gl=s(Ca,". \u{1F914}"),Ca.forEach(a),Nl=c(h),te=o(h,"P",{});var la=l(te);Vs=o(la,"STRONG",{});var mp=l(Vs);Fl=s(mp,"Repro #2"),mp.forEach(a),Bl=s(la," ("),Pe=o(la,"A",{href:!0,rel:!0});var yp=l(Pe);Vl=s(yp,"REPL"),yp.forEach(a),ql=s(la,")"),la.forEach(a),$l=c(h),Yt=o(h,"DIV",{class:!0});var Hh=l(Yt);Hh.forEach(a),Wl=c(h),Jt=o(h,"DIV",{class:!0});var Ph=l(Jt);Ph.forEach(a),zl=c(h),D=o(h,"P",{});var ne=l(D);Ul=s(ne,"If the next element right after "),Zt=o(ne,"CODE",{class:!0});var _p=l(Zt);Yl=s(_p,"{@html ...}"),_p.forEach(a),Jl=s(ne," is a component, then Svelte will insert a empty "),Ce=o(ne,"A",{href:!0,rel:!0});var Ep=l(Ce);Zl=s(Ep,"Text"),Ep.forEach(a),Xl=s(ne," node in between "),Xt=o(ne,"CODE",{class:!0});var xp=l(Xt);Kl=s(xp,"{@html ...}"),xp.forEach(a),Ql=s(ne," and the component, and the anchor is the empty Text node."),ne.forEach(a),er=c(h),qs=o(h,"P",{});var wp=l(qs);tr=s(wp,"Well, that make sense too, because we can't see what's inside the component, we can't get the first element rendered in the component as the anchor. So, an extra empty Text node is used for anchoring."),wp.forEach(a),sr=c(h),A=o(h,"P",{});var oe=l(A);ar=s(oe,"So, it seemed like the anchor for the "),Kt=o(oe,"CODE",{class:!0});var bp=l(Kt);nr=s(bp,"HtmlTag"),bp.forEach(a),or=s(oe," depends on the next element, and the "),Qt=o(oe,"CODE",{class:!0});var Tp=l(Qt);lr=s(Tp,"HtmlTag"),Tp.forEach(a),rr=s(oe," itself is the last element, then the anchor would be "),es=o(oe,"CODE",{class:!0});var Hp=l(es);ir=s(Hp,"null"),Hp.forEach(a),cr=s(oe,"."),oe.forEach(a),pr=c(h),W=o(h,"P",{});var Hs=l(W);hr=s(Hs,"This seemed fine in most cases, as in if the "),ts=o(Hs,"CODE",{class:!0});var Pp=l(ts);dr=s(Pp,"HtmlTag"),Pp.forEach(a),vr=s(Hs," is indeed the last element of its parent, then, we don't need an anchor. Adding and updating "),ss=o(Hs,"CODE",{class:!0});var Cp=l(ss);ur=s(Cp,"HtmlTag"),Cp.forEach(a),kr=s(Hs," will always add HTML elements at the end of its parent."),Hs.forEach(a),gr=c(h),$s=o(h,"P",{});var Sp=l($s);fr=s(Sp,"However, I figured there are 2 edge cases that this assumption may not be true."),Sp.forEach(a),mr=c(h),Se=o(h,"P",{});var Sa=l(Se);yr=s(Sa,"The 1st edge case is the one reported in the issue #5012, if the "),as=o(Sa,"CODE",{class:!0});var Ip=l(as);_r=s(Ip,"{@html ...}"),Ip.forEach(a),Er=s(Sa," is the last element within a slot. As we can't tell how the slot would be used in the component, it may not be the last element of it's parent."),Sa.forEach(a),xr=c(h),ns=o(h,"DIV",{class:!0});var Ch=l(ns);Ch.forEach(a),wr=c(h),Ie=o(h,"P",{});var Ia=l(Ie);br=s(Ia,"The 2nd edge case is that "),os=o(Ia,"CODE",{class:!0});var Op=l(os);Tr=s(Op,"{@html ...}"),Op.forEach(a),Hr=s(Ia," is the last element, but it is a the root of the Component."),Ia.forEach(a),Pr=c(h),ls=o(h,"DIV",{class:!0});var Sh=l(ls);Sh.forEach(a),Cr=c(h),Ws=o(h,"P",{});var Lp=l(Ws);Oe=o(Lp,"A",{href:!0,rel:!0});var Dp=l(Oe);Sr=s(Dp,"REPL"),Dp.forEach(a),Lp.forEach(a),Ir=c(h),zs=o(h,"P",{});var Ap=l(zs);Or=s(Ap,"As you can see in this contrived example, we can't assume where the component is being used by its parent, so, even it seemed to be the last element in the component, it may not be the case in the parent component."),Ap.forEach(a),h.forEach(a),fa=c(u),d=o(u,"SECTION",{});var v=l(d);Us=o(v,"H2",{});var Mp=l(Us);Le=o(Mp,"A",{href:!0,id:!0});var Rp=l(Le);Lr=s(Rp,"Fixing the bug"),Rp.forEach(a),Mp.forEach(a),Dr=c(v),Ys=o(v,"P",{});var jp=l(Ys);Ar=s(jp,"Once we figured out the cause of the bug, the fix is much simpler."),jp.forEach(a),Mr=c(v),Js=o(v,"P",{});var Gp=l(Js);Rr=s(Gp,"Just as how Svelte will add a empty Text node as an anchor if the next element is a component, we are going to add the same anchor if"),Gp.forEach(a),jr=c(v),De=o(v,"UL",{});var Oa=l(De);Ae=o(Oa,"LI",{});var La=l(Ae);Gr=s(La,"the "),rs=o(La,"CODE",{class:!0});var Np=l(rs);Nr=s(Np,"{@html ...}"),Np.forEach(a),Fr=s(La," has no next element, and"),La.forEach(a),Br=c(Oa),is=o(Oa,"LI",{});var Wi=l(is);Vr=s(Wi,"either"),Me=o(Wi,"UL",{});var Da=l(Me);cs=o(Da,"LI",{});var zi=l(cs);ps=o(zi,"CODE",{class:!0});var Fp=l(ps);qr=s(Fp,"{@html ...}"),Fp.forEach(a),$r=s(zi," is at the root of a slot, or"),zi.forEach(a),Wr=c(Da),hs=o(Da,"LI",{});var Ui=l(hs);ds=o(Ui,"CODE",{class:!0});var Bp=l(ds);zr=s(Bp,"{@html ...}"),Bp.forEach(a),Ur=s(Ui," is at the root of a component."),Ui.forEach(a),Da.forEach(a),Wi.forEach(a),Oa.forEach(a),Yr=c(v),Zs=o(v,"P",{});var Vp=l(Zs);Jr=s(Vp,"I know my way in the Svelte repo, good enough to know where to add this extra condition."),Vp.forEach(a),Zr=c(v),Re=o(v,"P",{});var Aa=l(Re);Xr=s(Aa,"But if you are new, you can try global search the keyword "),vs=o(Aa,"CODE",{class:!0});var qp=l(vs);Kr=s(qp,"html_anchor"),qp.forEach(a),Qr=s(Aa,", the variable name of the anchor added by Svelte, it should lead you to it."),Aa.forEach(a),ei=c(v),us=o(v,"DIV",{class:!0});var Ih=l(us);Ih.forEach(a),ti=c(v),Xs=o(v,"P",{});var $p=l(Xs);je=o($p,"A",{href:!0,rel:!0});var Wp=l(je);si=s(Wp,"Link to Github"),Wp.forEach(a),$p.forEach(a),ai=c(v),Ks=o(v,"P",{});var zp=l(Ks);ni=s(zp,"Here we see that the condition of adding an anchor is that if"),zp.forEach(a),oi=c(v),Ge=o(v,"UL",{});var Ma=l(Ge);Ne=o(Ma,"LI",{});var Ra=l(Ne);li=s(Ra,"it is in the "),ks=o(Ra,"CODE",{class:!0});var Up=l(ks);ri=s(Up,"<svelte:head>"),Up.forEach(a),ii=s(Ra,", or"),Ra.forEach(a),ci=c(Ma),Fe=o(Ma,"LI",{});var ja=l(Fe);pi=s(ja,"the next element is not a dom element, (which could be a component, or logic blocks "),Qs=o(ja,"EM",{});var Yp=l(Qs);hi=s(Yp,"(oh why didn't I think about this case too?)"),Yp.forEach(a),di=s(ja,")"),ja.forEach(a),Ma.forEach(a),vi=c(v),gs=o(v,"DIV",{class:!0});var Oh=l(gs);Oh.forEach(a),ui=c(v),ea=o(v,"P",{});var Jp=l(ea);ki=s(Jp,"So, we check if"),Jp.forEach(a),gi=c(v),Be=o(v,"UL",{});var Ga=l(Be);ta=o(Ga,"LI",{});var Zp=l(ta);fi=s(Zp,"it has a parent (if it is at the root of component), or"),Zp.forEach(a),mi=c(Ga),Ve=o(Ga,"LI",{});var Na=l(Ve);yi=s(Na,"if the parent is not an element (it could be within a slot, or a logic block "),fs=o(Na,"CODE",{class:!0});var Xp=l(fs);_i=s(Xp,"{#if}"),Xp.forEach(a),Ei=s(Na,")"),Na.forEach(a),Ga.forEach(a),xi=c(v),qe=o(v,"P",{});var Fa=l(qe);wi=s(Fa,"For the test case, I used to 2 edge case examples, try to simulate some clicks, and make sure that the "),ms=o(Fa,"CODE",{class:!0});var Kp=l(ms);bi=s(Kp,"{@html ...}"),Kp.forEach(a),Ti=s(Fa," stay in place even after the HTML content changes."),Fa.forEach(a),Hi=c(v),ys=o(v,"DIV",{class:!0});var Lh=l(ys);Lh.forEach(a),Pi=c(v),$e=o(v,"P",{});var Ba=l($e);Ci=s(Ba,"You can read the "),We=o(Ba,"A",{href:!0,rel:!0});var Qp=l(We);Si=s(Qp,"Pull Request #5061"),Qp.forEach(a),Ii=s(Ba," to see all the test cases written up."),Ba.forEach(a),Oi=c(v),Li=o(v,"HR",{}),Di=c(v),ze=o(v,"P",{});var Va=l(ze);Ai=s(Va,"If you wish to learn more about Svelte, "),Ue=o(Va,"A",{href:!0,rel:!0});var eh=l(Ue);Mi=s(eh,"follow me on Twitter"),eh.forEach(a),Ri=s(Va,"."),Va.forEach(a),ji=c(v),Ye=o(v,"P",{});var qa=l(Ye);Gi=s(qa,"If you have anything unclear about this article, find me on "),Je=o(qa,"A",{href:!0,rel:!0});var th=l(Je);Ni=s(th,"Twitter"),th.forEach(a),Fi=s(qa," too!"),qa.forEach(a),v.forEach(a),this.h()},h(){r(T,"href","#background"),r(T,"id","background"),r(Qe,"href","/contributing-to-svelte-fixing-issue-4392"),r(ie,"href","https://github.com/sveltejs/svelte/issues/5012"),r(ie,"rel","nofollow"),r(ce,"href","#the-bug"),r(ce,"id","the-bug"),ia.a=ca,r(pe,"href","https://github.com/sveltejs/svelte/issues/5012"),r(pe,"rel","nofollow"),r(et,"class","svelte-t9d7ix"),pa.a=ha,r(J,"class","svelte-t9d7ix"),r(tt,"class","svelte-t9d7ix"),r(he,"href","https://svelte.dev/repl/1f9da40bca4b44a089041e826648de2f"),r(he,"rel","nofollow"),r(st,"class","svelte-t9d7ix"),r(at,"class","svelte-t9d7ix"),r(nt,"class","svelte-t9d7ix"),r(ot,"class","svelte-t9d7ix"),r(lt,"class","svelte-t9d7ix"),r(rt,"class","svelte-t9d7ix"),r(it,"class","svelte-t9d7ix"),r(ct,"class","svelte-t9d7ix"),r(pt,"class","inline"),r(ht,"class","inline"),r(R,"class","svelte-t9d7ix"),r(k,"class","issue svelte-t9d7ix"),r(de,"href","#verifying-the-bug"),r(de,"id","verifying-the-bug"),r(dt,"class","inline"),r(vt,"class","inline"),nh(P.src,Xi=lh)||r(P,"src",Xi),r(P,"srcset",lh+", "+Jh+" 2x"),r(P,"loading","lazy"),x(P,"position","absolute"),x(P,"top","0"),x(P,"width","100%"),x(P,"height","100%"),r(P,"alt","screen recording of the bug behavior"),x(N,"display","block"),x(N,"position","relative"),x(N,"padding-top","44.643%"),x(N,"width","100%"),r(ve,"href","#investigating-the-bug"),r(ve,"id","investigating-the-bug"),ua.a=ka,r(ut,"class","inline"),r(kt,"class","inline"),r(Z,"href","https://github.com/sveltejs/svelte/blob/master/CHANGELOG.md"),r(Z,"rel","nofollow"),r(Ns,"type","image/webp"),r(Ns,"srcset",Uh+", "+zh+" 2x"),nh(C.src,Ki=oh)||r(C,"src",Ki),r(C,"srcset",oh+", "+Yh+" 2x"),r(C,"loading","lazy"),x(C,"position","absolute"),x(C,"top","0"),x(C,"width","100%"),x(C,"height","100%"),r(C,"alt","changelog"),x(F,"display","block"),x(F,"position","relative"),x(F,"padding-top","33.380%"),x(F,"width","100%"),r(me,"href","https://github.com/sveltejs/svelte/pull/3329"),r(me,"rel","nofollow"),r(ye,"href","https://github.com/sveltejs/svelte/pull/3329"),r(ye,"rel","nofollow"),r(mt,"class","inline"),r(_e,"href","#htmltag"),r(_e,"id","htmltag"),r(yt,"class","inline"),r(Ee,"href","https://github.com/sveltejs/svelte/blob/1c39f6079f630ea549984b8e9eda1853cd5fa883/src/runtime/internal/dom.ts#L321-L362"),r(Ee,"rel","nofollow"),r(_t,"class","inline"),r(K,"href","https://svelte.dev/tutorial/html-tags"),r(K,"rel","nofollow"),r(Et,"class","code-section"),r(xt,"class","inline"),r(wt,"class","inline"),r(bt,"class","inline"),r(Tt,"class","inline"),r(Ht,"class","inline"),r(Pt,"class","inline"),r(Ct,"class","inline"),r(St,"class","inline"),r(we,"href","https://developer.mozilla.org/en-US/docs/Web/API/Node/insertBefore"),r(we,"rel","nofollow"),r(It,"class","inline"),r(Ot,"class","inline"),r(Lt,"class","inline"),r(Dt,"class","inline"),r(At,"class","code-section"),r(Mt,"class","inline"),r(Rt,"class","inline"),r(jt,"class","inline"),r(Gt,"class","inline"),r(Nt,"class","inline"),r(Ft,"class","inline"),r(Bt,"class","inline"),r(Vt,"class","inline"),r(Te,"href","https://svelte.dev/repl/f31104585d974a54a76808aa5d0820a8?version=3.23.2"),r(Te,"rel","nofollow"),r(qt,"class","code-section"),r($t,"class","code-section"),r(Wt,"class","inline"),r(zt,"class","inline"),r(Ut,"class","inline"),r(Pe,"href","https://svelte.dev/repl/d469d63a77c94998839603738ea97451?version=3.23.2"),r(Pe,"rel","nofollow"),r(Yt,"class","code-section"),r(Jt,"class","code-section"),r(Zt,"class","inline"),r(Ce,"href","https://developer.mozilla.org/en-US/docs/Web/API/Text"),r(Ce,"rel","nofollow"),r(Xt,"class","inline"),r(Kt,"class","inline"),r(Qt,"class","inline"),r(es,"class","inline"),r(ts,"class","inline"),r(ss,"class","inline"),r(as,"class","inline"),r(ns,"class","code-section"),r(os,"class","inline"),r(ls,"class","code-section"),r(Oe,"href","https://svelte.dev/repl/9d19540d1eb249c3af519894e42f0f75?version=3.23.2"),r(Oe,"rel","nofollow"),r(Le,"href","#fixing-the-bug"),r(Le,"id","fixing-the-bug"),r(rs,"class","inline"),r(ps,"class","inline"),r(ds,"class","inline"),r(vs,"class","inline"),r(us,"class","code-section"),r(je,"href","https://github.com/sveltejs/svelte/blob/1c39f6079f630ea549984b8e9eda1853cd5fa883/src/compiler/compile/render_dom/wrappers/RawMustacheTag.ts#L42"),r(je,"rel","nofollow"),r(ks,"class","inline"),r(gs,"class","code-section"),r(fs,"class","inline"),r(ms,"class","inline"),r(ys,"class","code-section"),r(We,"href","https://github.com/sveltejs/svelte/pull/5061"),r(We,"rel","nofollow"),r(Ue,"href","https://twitter.com/lihautan"),r(Ue,"rel","nofollow"),r(Je,"href","https://twitter.com/lihautan"),r(Je,"rel","nofollow")},m(u,_){M(u,g,_),e(g,H),e(H,T),e(T,le),e(g,m),e(g,w),e(w,Ke),e(w,Qe),e(Qe,$a),e(w,Wa),e(g,za),e(g,re),e(re,Ua),e(re,ie),e(ie,Ya),e(re,Ja),M(u,ra,_),M(u,U,_),e(U,Ps),e(Ps,ce),e(ce,Za),e(U,Xa),e(U,k),e(k,et),e(et,Y),e(Y,Ka),ia.m(ih,Y),e(Y,ca),e(Y,pe),e(pe,Qa),e(k,en),e(k,J),e(J,tn),pa.m(ch,J),e(J,ha),e(k,sn),e(k,tt),e(tt,Cs),e(Cs,an),e(k,nn),e(k,st),e(st,he),e(he,on),e(k,ln),e(k,at),e(at,rn),e(k,cn),e(k,nt),e(nt,Ss),e(Ss,pn),e(k,hn),e(k,ot),e(ot,dn),e(k,vn),e(k,lt),e(lt,Is),e(Is,un),e(k,kn),e(k,rt),e(rt,gn),e(k,fn),e(k,it),e(it,Os),e(Os,mn),e(k,yn),e(k,ct),e(ct,_n),e(k,En),e(k,R),e(R,xn),e(R,pt),e(pt,wn),e(R,bn),e(R,ht),e(ht,Tn),e(R,Hn),M(u,da,_),M(u,E,_),e(E,Ls),e(Ls,de),e(de,Pn),e(E,Cn),e(E,Ds),e(Ds,Sn),e(E,In),e(E,As),e(As,On),e(E,Ln),e(E,G),e(G,Dn),e(G,dt),e(dt,An),e(G,Mn),e(G,vt),e(vt,Rn),e(G,jn),e(E,Gn),e(E,Ms),e(Ms,N),e(N,P),e(E,Nn),e(E,Rs),e(Rs,Fn),M(u,va,_),M(u,y,_),e(y,js),e(js,ve),e(ve,Bn),e(y,Vn),e(y,ue),e(ue,qn),ua.m(ph,ue),e(ue,ka),e(y,$n),e(y,ke),e(ke,Wn),e(ke,ut),e(ut,zn),e(ke,Un),e(y,Yn),e(y,ge),e(ge,Jn),e(ge,Z),e(Z,kt),e(kt,Zn),e(Z,Xn),e(ge,Kn),e(y,Qn),e(y,Gs),e(Gs,F),e(F,gt),e(gt,Ns),e(gt,C),e(y,eo),e(y,ft),e(ft,to),e(ft,fe),e(fe,so),e(fe,me),e(me,ao),e(fe,no),e(y,oo),e(y,B),e(B,lo),e(B,ye),e(ye,ro),e(B,io),e(B,mt),e(mt,co),e(B,po),M(u,ga,_),M(u,p,_),e(p,Fs),e(Fs,_e),e(_e,ho),e(p,vo),e(p,X),e(X,Ee),e(Ee,yt),e(yt,uo),e(X,ko),e(X,K),e(K,_t),e(_t,go),e(K,fo),e(X,mo),e(p,yo),e(p,Et),Et.innerHTML=hh,e(p,_o),e(p,O),e(O,Eo),e(O,xt),e(xt,xo),e(O,wo),e(O,wt),e(wt,bo),e(O,To),e(O,bt),e(bt,Ho),e(O,Po),e(p,Co),e(p,xe),e(xe,So),e(xe,Tt),e(Tt,Io),e(xe,Oo),e(p,Lo),e(p,V),e(V,Do),e(V,Ht),e(Ht,Ao),e(V,Mo),e(V,Pt),e(Pt,Ro),e(V,jo),e(p,Go),e(p,S),e(S,Ct),e(Ct,No),e(S,Fo),e(S,we),e(we,St),e(St,Bo),e(S,Vo),e(S,It),e(It,qo),e(S,$o),e(S,Ot),e(Ot,Wo),e(S,zo),e(p,Uo),e(p,q),e(q,Yo),e(q,Lt),e(Lt,Jo),e(q,Zo),e(q,Dt),e(Dt,Xo),e(q,Ko),e(p,Qo),e(p,At),At.innerHTML=dh,e(p,el),e(p,j),e(j,be),e(be,tl),e(be,Mt),e(Mt,sl),e(be,al),e(j,nl),e(j,Rt),e(Rt,ol),e(j,ll),e(j,jt),e(jt,rl),e(j,il),e(p,cl),e(p,L),e(L,pl),e(L,Gt),e(Gt,hl),e(L,dl),e(L,Nt),e(Nt,vl),e(L,ul),e(L,Ft),e(Ft,kl),e(L,gl),e(p,fl),e(p,Q),e(Q,ml),e(Q,Bt),e(Bt,yl),e(Q,_l),e(Q,Vt),e(Vt,El),e(p,xl),e(p,ee),e(ee,Bs),e(Bs,wl),e(ee,bl),e(ee,Te),e(Te,Tl),e(ee,Hl),e(p,Pl),e(p,qt),qt.innerHTML=vh,e(p,Cl),e(p,$t),$t.innerHTML=uh,e(p,Sl),e(p,$),e($,Il),e($,Wt),e(Wt,Ol),e($,Ll),e($,zt),e(zt,Dl),e($,Al),e(p,Ml),e(p,He),e(He,Rl),e(He,Ut),e(Ut,jl),e(He,Gl),e(p,Nl),e(p,te),e(te,Vs),e(Vs,Fl),e(te,Bl),e(te,Pe),e(Pe,Vl),e(te,ql),e(p,$l),e(p,Yt),Yt.innerHTML=kh,e(p,Wl),e(p,Jt),Jt.innerHTML=gh,e(p,zl),e(p,D),e(D,Ul),e(D,Zt),e(Zt,Yl),e(D,Jl),e(D,Ce),e(Ce,Zl),e(D,Xl),e(D,Xt),e(Xt,Kl),e(D,Ql),e(p,er),e(p,qs),e(qs,tr),e(p,sr),e(p,A),e(A,ar),e(A,Kt),e(Kt,nr),e(A,or),e(A,Qt),e(Qt,lr),e(A,rr),e(A,es),e(es,ir),e(A,cr),e(p,pr),e(p,W),e(W,hr),e(W,ts),e(ts,dr),e(W,vr),e(W,ss),e(ss,ur),e(W,kr),e(p,gr),e(p,$s),e($s,fr),e(p,mr),e(p,Se),e(Se,yr),e(Se,as),e(as,_r),e(Se,Er),e(p,xr),e(p,ns),ns.innerHTML=fh,e(p,wr),e(p,Ie),e(Ie,br),e(Ie,os),e(os,Tr),e(Ie,Hr),e(p,Pr),e(p,ls),ls.innerHTML=mh,e(p,Cr),e(p,Ws),e(Ws,Oe),e(Oe,Sr),e(p,Ir),e(p,zs),e(zs,Or),M(u,fa,_),M(u,d,_),e(d,Us),e(Us,Le),e(Le,Lr),e(d,Dr),e(d,Ys),e(Ys,Ar),e(d,Mr),e(d,Js),e(Js,Rr),e(d,jr),e(d,De),e(De,Ae),e(Ae,Gr),e(Ae,rs),e(rs,Nr),e(Ae,Fr),e(De,Br),e(De,is),e(is,Vr),e(is,Me),e(Me,cs),e(cs,ps),e(ps,qr),e(cs,$r),e(Me,Wr),e(Me,hs),e(hs,ds),e(ds,zr),e(hs,Ur),e(d,Yr),e(d,Zs),e(Zs,Jr),e(d,Zr),e(d,Re),e(Re,Xr),e(Re,vs),e(vs,Kr),e(Re,Qr),e(d,ei),e(d,us),us.innerHTML=yh,e(d,ti),e(d,Xs),e(Xs,je),e(je,si),e(d,ai),e(d,Ks),e(Ks,ni),e(d,oi),e(d,Ge),e(Ge,Ne),e(Ne,li),e(Ne,ks),e(ks,ri),e(Ne,ii),e(Ge,ci),e(Ge,Fe),e(Fe,pi),e(Fe,Qs),e(Qs,hi),e(Fe,di),e(d,vi),e(d,gs),gs.innerHTML=_h,e(d,ui),e(d,ea),e(ea,ki),e(d,gi),e(d,Be),e(Be,ta),e(ta,fi),e(Be,mi),e(Be,Ve),e(Ve,yi),e(Ve,fs),e(fs,_i),e(Ve,Ei),e(d,xi),e(d,qe),e(qe,wi),e(qe,ms),e(ms,bi),e(qe,Ti),e(d,Hi),e(d,ys),ys.innerHTML=Eh,e(d,Pi),e(d,$e),e($e,Ci),e($e,We),e(We,Si),e($e,Ii),e(d,Oi),e(d,Li),e(d,Di),e(d,ze),e(ze,Ai),e(ze,Ue),e(Ue,Mi),e(ze,Ri),e(d,ji),e(d,Ye),e(Ye,Gi),e(Ye,Je),e(Je,Ni),e(Ye,Fi)},p:$h,d(u){u&&a(g),u&&a(ra),u&&a(U),u&&a(da),u&&a(E),u&&a(va),u&&a(y),u&&a(ga),u&&a(p),u&&a(fa),u&&a(d)}}}function Kh(Xe){let g,H;const T=[Xe[0],rh];let le={$$slots:{default:[Xh]},$$scope:{ctx:Xe}};for(let m=0;m<T.length;m+=1)le=Zi(le,T[m]);return g=new Wh({props:le}),{c(){Rh(g.$$.fragment)},l(m){jh(g.$$.fragment,m)},m(m,w){Gh(g,m,w),H=!0},p(m,[w]){const Ke=w&1?Nh(T,[w&1&&sh(m[0]),w&0&&sh(rh)]):{};w&2&&(Ke.$$scope={dirty:w,ctx:m}),g.$set(Ke)},i(m){H||(Fh(g.$$.fragment,m),H=!0)},o(m){Bh(g.$$.fragment,m),H=!1},d(m){Vh(g,m)}}}const rh={title:"Contributing to Svelte - Fixing issue #5012",date:"2020-06-25T08:00:00Z",tags:["Svelte","JavaScript","Open Source"],series:"Contributing to Svelte",description:"Svelte issue #5012 - Slot containing only {@html value} renders in wrong place on update",label:"blog",tableOfContents:[{link:"background",title:"Background"},{link:"the-bug",title:"The bug"},{link:"verifying-the-bug",title:"Verifying the bug"},{link:"investigating-the-bug",title:"Investigating the bug",nested:[{link:"htmltag",title:"HtmlTag"}]},{link:"fixing-the-bug",title:"Fixing the bug"}]};function Qh(Xe,g,H){return qh("blog",{image:Zh}),Xe.$$set=T=>{H(0,g=Zi(Zi({},g),ah(T)))},g=ah(g),[g]}class od extends Dh{constructor(g){super();Ah(this,g,Qh,Kh,Mh,{})}}export{od as default,rh as metadata};
