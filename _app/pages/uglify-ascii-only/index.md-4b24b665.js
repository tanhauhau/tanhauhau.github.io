import{S as Ii,i as Si,s as Pi,C as ws,w as Ci,x as Ti,y as Ui,z as ji,A as di,q as Oi,o as Ai,B as Ri,r as Mi,Y as hi,e as i,t as p,k as _,c as o,a as l,h as c,d as t,m as d,b as a,X as ee,f as r,g as u,H as s,J as Gi}from"../../chunks/vendor-da4388d4.js";import{B as Ji}from"../../chunks/BlogLayout-14cfab6f.js";import{_ as zi}from"../../chunks/twitter-card-image-a57df29d.js";import"../../chunks/stores-1fad7c36.js";import"../../chunks/ldjson-b0805387.js";/* empty css                                */var Di="https://lihautan.com/_app/assets/babel-issue-2-2367fe8f.webp",Ni="https://lihautan.com/_app/assets/babel-issue-2-4b70ccf8.webp",$i="https://lihautan.com/_app/assets/babel-issue-2-cf4a4141.png",mi="https://lihautan.com/_app/assets/babel-issue-2-e0456ec1.png",Hi="https://lihautan.com/_app/assets/uglify-65d97cc1.webp",Li="https://lihautan.com/_app/assets/uglify-2a0d29b2.webp",qi="https://lihautan.com/_app/assets/uglify-083899e4.png",fi="https://lihautan.com/_app/assets/uglify-31e985f1.png",Bi="https://lihautan.com/_app/assets/babel-issue-032b2a9b.webp",Wi="https://lihautan.com/_app/assets/babel-issue-c88fbf8f.webp",Vi="https://lihautan.com/_app/assets/babel-issue-289b7151.png",yi="https://lihautan.com/_app/assets/babel-issue-9475e314.png",Xi="https://lihautan.com/_app/assets/expectation-88a7a8f0.webp",Yi="https://lihautan.com/_app/assets/expectation-e308aa72.webp",Zi="https://lihautan.com/_app/assets/expectation-67c15629.png",bi="https://lihautan.com/_app/assets/expectation-21749d2f.png",Fi="https://lihautan.com/_app/assets/source-2558f070.webp",Ki="https://lihautan.com/_app/assets/source-ae091af1.webp",Qi="https://lihautan.com/_app/assets/source-c2234f92.png",vi="https://lihautan.com/_app/assets/source-4da711b4.png",eo="https://lihautan.com/_app/assets/problem-2-1ca08133.webp",to="https://lihautan.com/_app/assets/problem-2-abc15427.webp",so="https://lihautan.com/_app/assets/problem-2-a6facc15.png",gi="https://lihautan.com/_app/assets/problem-2-28ca7497.png",io="https://lihautan.com/_app/assets/problem-d06925c4.webp",oo="https://lihautan.com/_app/assets/problem-a5b4b5e3.webp",ao="https://lihautan.com/_app/assets/problem-ba0d0e50.png",wi="https://lihautan.com/_app/assets/problem-662a8224.png";function lo(te){let h,P,C,T,m,b,O,A,se,je,v,ks,He,ie,ft,Le,oe,R,ae,Oe,g,xs,qe,le,yt,Be,re,M,ne,Ae,w,Es,We,$,bt,pe,vt,gt,Ve,ce,G,ue,Re,k,Is,Xe,_e,wt,Ye,H,kt,W,xt,Et,Ze,de,J,he,Me,x,Ss,Fe,me,It,Ke,Qe,et,U,St,Ge,Pt,Ct,Je,Tt,Ut,tt,L,jt,fe,Ot,At,st,j,Rt,V,Mt,Gt,X,Jt,zt,it,ye,z,be,ze,E,Ps,ot,q,Dt,Y,Nt,$t,at,ve,D,ge,De,I,Cs,lt,f,Ht,we,Lt,qt,Z,Bt,Wt,ke,Vt,Xt,xe,Yt,Zt,Ee,Ft,Kt,Ie,Qt,es,rt,F,xi=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line dim"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">UglifyJsPlugin</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;uglifyjs-webpack-plugin&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line dim"></span>
<span class="line dim"><span style="color: var(--shiki-token-constant)">module</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">exports</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">//...</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">  optimization</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">    minimizer</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">UglifyJsPlugin</span><span style="color: var(--shiki-color-text)">(&#123;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">      uglifyOptions</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line highlight"><span style="color: var(--shiki-color-text)">        output</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line highlight"><span style="color: var(--shiki-color-text)">          </span><span style="color: var(--shiki-token-comment)">// true for &#96;ascii_only&#96;</span></span>
<span class="line highlight"><span style="color: var(--shiki-color-text)">          ascii_only</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">true</span></span>
<span class="line highlight"><span style="color: var(--shiki-color-text)">        &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">      &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">    &#125;)</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">  &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,nt,pt,ct,S,Ne,K,ts,ss,is,os,Q,as,Se,ls,rs,ns,N,ps,$e,cs,us,Pe,_s,ds;return{c(){h=i("p"),P=p("The background story"),C=_(),T=i("p"),m=p("I was working on a chrome extension, and trying to add some emojis \u{1F60D}\u{1F600}\u{1F60E} into the extension, however I realised the \u{1F60D}\u{1F600}\u{1F60E} are not rendered correctly!"),b=_(),O=i("p"),A=i("span"),se=i("picture"),je=i("source"),v=i("img"),He=_(),ie=i("p"),ft=p("And so I inspect the source code loaded into the chrome extension, it wasn\u2019t loaded correctly as well!"),Le=_(),oe=i("p"),R=i("span"),ae=i("picture"),Oe=i("source"),g=i("img"),qe=_(),le=i("p"),yt=p("And so I think, probably the encoding issue was caused by the webpack compilation, but, my compiled code looks exactly fine!"),Be=_(),re=i("p"),M=i("span"),ne=i("picture"),Ae=i("source"),w=i("img"),We=_(),$=i("p"),bt=p("So, most likely is a decoding issue when the emoji code get loaded into chrome extension. So I manually changed the emoji in the compiled code to "),pe=i("code"),vt=p("\\ud83d\\ude0d"),gt=p(" (unicode for \u{1F60D}). Guess what? The emoji is showing correctly in the chrome extension!"),Ve=_(),ce=i("p"),G=i("span"),ue=i("picture"),Re=i("source"),k=i("img"),Xe=_(),_e=i("p"),wt=p("So I changed my source code to manually type in the unicode, and compiled it using webpack. To my surprise, the unicode was compiled back into the emoji (\u{1F60D}) it represents!"),Ye=_(),H=i("p"),kt=p("I googled around and I found "),W=i("a"),xt=p("this fix for babel-generator"),Et=p(":"),Ze=_(),de=i("p"),J=i("span"),he=i("picture"),Me=i("source"),x=i("img"),Fe=_(),me=i("p"),It=p("I checked my babel version, and it had included this fix. So what went wrong?"),Ke=_(),Qe=i("hr"),et=_(),U=i("p"),St=p("My colleague reminded me that during webpack compilation, there are 2 phases, the "),Ge=i("strong"),Pt=p("transpilation"),Ct=p(" (via babel) and the "),Je=i("strong"),Tt=p("minification"),Ut=p(" (via uglify plugin)."),tt=_(),L=i("p"),jt=p("So I disabled the optimisation in webpack config, and noticed that my compiled code contains the original unicode string ("),fe=i("code"),Ot=p("\\ud83d\\ude0d"),At=p("), instead of the emoji (\u{1F60D}) string. So the unicode string was converted to emoji string during minification!"),st=_(),j=i("p"),Rt=p("So I went to my favourite "),V=i("a"),Mt=p("Online JavaScript Minifier"),Gt=p(" (by "),X=i("a"),Jt=p("skalman"),zt=p(") to try it out."),it=_(),ye=i("p"),z=i("span"),be=i("picture"),ze=i("source"),E=i("img"),ot=_(),q=i("p"),Dt=p("After some googling, I "),Y=i("a"),Nt=p("found this issue"),$t=p(" which described my scenario perfectly."),at=_(),ve=i("p"),D=i("span"),ge=i("picture"),De=i("source"),I=i("img"),lt=_(),f=i("p"),Ht=p("Turned out there is a "),we=i("code"),Lt=p("ascii_only"),qt=p(" for "),Z=i("a"),Bt=p("output options"),Wt=p(", and it is default to "),ke=i("code"),Vt=p("false"),Xt=p(". So I set "),xe=i("code"),Yt=p("ascii_only"),Zt=p(" to "),Ee=i("code"),Ft=p("true"),Kt=p(", ran webpack, and checked my compiled code, it contained the unicode string ("),Ie=i("code"),Qt=p("\\ud83d\\ude0d"),es=p(")! And even when I wrote emoji string (\u{1F60D}) in my source code, it got compiled to unicode as well."),rt=_(),F=i("div"),nt=_(),pt=i("hr"),ct=_(),S=i("section"),Ne=i("h2"),K=i("a"),ts=p("TIL: UglifyJs ascii_only option, use it when you want to escape Unicode characters."),ss=_(),is=i("hr"),os=_(),Q=i("p"),as=p("Why is there a "),Se=i("code"),ls=p("ascii_only"),rs=p(" option?"),ns=_(),N=i("p"),ps=p("My guess is that it takes less space for a unicode character (16\u201317bit) than the escaped ascii characters (6 "),$e=i("em"),cs=p("8 bit\u200A\u2014\u200A12"),us=p(" bit), that\u2019s why using unicode character is the default option ("),Pe=i("code"),_s=p("ascii_only=false"),ds=p(")."),this.h()},l(e){h=o(e,"P",{});var n=l(h);P=c(n,"The background story"),n.forEach(t),C=d(e),T=o(e,"P",{});var Ts=l(T);m=c(Ts,"I was working on a chrome extension, and trying to add some emojis \u{1F60D}\u{1F600}\u{1F60E} into the extension, however I realised the \u{1F60D}\u{1F600}\u{1F60E} are not rendered correctly!"),Ts.forEach(t),b=d(e),O=o(e,"P",{});var Us=l(O);A=o(Us,"SPAN",{style:!0});var js=l(A);se=o(js,"PICTURE",{});var hs=l(se);je=o(hs,"SOURCE",{type:!0,srcset:!0}),v=o(hs,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),hs.forEach(t),js.forEach(t),Us.forEach(t),He=d(e),ie=o(e,"P",{});var Os=l(ie);ft=c(Os,"And so I inspect the source code loaded into the chrome extension, it wasn\u2019t loaded correctly as well!"),Os.forEach(t),Le=d(e),oe=o(e,"P",{});var As=l(oe);R=o(As,"SPAN",{style:!0});var Rs=l(R);ae=o(Rs,"PICTURE",{});var ms=l(ae);Oe=o(ms,"SOURCE",{type:!0,srcset:!0}),g=o(ms,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),ms.forEach(t),Rs.forEach(t),As.forEach(t),qe=d(e),le=o(e,"P",{});var Ms=l(le);yt=c(Ms,"And so I think, probably the encoding issue was caused by the webpack compilation, but, my compiled code looks exactly fine!"),Ms.forEach(t),Be=d(e),re=o(e,"P",{});var Gs=l(re);M=o(Gs,"SPAN",{style:!0});var Js=l(M);ne=o(Js,"PICTURE",{});var fs=l(ne);Ae=o(fs,"SOURCE",{type:!0,srcset:!0}),w=o(fs,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),fs.forEach(t),Js.forEach(t),Gs.forEach(t),We=d(e),$=o(e,"P",{});var ut=l($);bt=c(ut,"So, most likely is a decoding issue when the emoji code get loaded into chrome extension. So I manually changed the emoji in the compiled code to "),pe=o(ut,"CODE",{class:!0});var zs=l(pe);vt=c(zs,"\\ud83d\\ude0d"),zs.forEach(t),gt=c(ut," (unicode for \u{1F60D}). Guess what? The emoji is showing correctly in the chrome extension!"),ut.forEach(t),Ve=d(e),ce=o(e,"P",{});var Ds=l(ce);G=o(Ds,"SPAN",{style:!0});var Ns=l(G);ue=o(Ns,"PICTURE",{});var ys=l(ue);Re=o(ys,"SOURCE",{type:!0,srcset:!0}),k=o(ys,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),ys.forEach(t),Ns.forEach(t),Ds.forEach(t),Xe=d(e),_e=o(e,"P",{});var $s=l(_e);wt=c($s,"So I changed my source code to manually type in the unicode, and compiled it using webpack. To my surprise, the unicode was compiled back into the emoji (\u{1F60D}) it represents!"),$s.forEach(t),Ye=d(e),H=o(e,"P",{});var _t=l(H);kt=c(_t,"I googled around and I found "),W=o(_t,"A",{href:!0,rel:!0});var Hs=l(W);xt=c(Hs,"this fix for babel-generator"),Hs.forEach(t),Et=c(_t,":"),_t.forEach(t),Ze=d(e),de=o(e,"P",{});var Ls=l(de);J=o(Ls,"SPAN",{style:!0});var qs=l(J);he=o(qs,"PICTURE",{});var bs=l(he);Me=o(bs,"SOURCE",{type:!0,srcset:!0}),x=o(bs,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),bs.forEach(t),qs.forEach(t),Ls.forEach(t),Fe=d(e),me=o(e,"P",{});var Bs=l(me);It=c(Bs,"I checked my babel version, and it had included this fix. So what went wrong?"),Bs.forEach(t),Ke=d(e),Qe=o(e,"HR",{}),et=d(e),U=o(e,"P",{});var Ce=l(U);St=c(Ce,"My colleague reminded me that during webpack compilation, there are 2 phases, the "),Ge=o(Ce,"STRONG",{});var Ws=l(Ge);Pt=c(Ws,"transpilation"),Ws.forEach(t),Ct=c(Ce," (via babel) and the "),Je=o(Ce,"STRONG",{});var Vs=l(Je);Tt=c(Vs,"minification"),Vs.forEach(t),Ut=c(Ce," (via uglify plugin)."),Ce.forEach(t),tt=d(e),L=o(e,"P",{});var dt=l(L);jt=c(dt,"So I disabled the optimisation in webpack config, and noticed that my compiled code contains the original unicode string ("),fe=o(dt,"CODE",{class:!0});var Xs=l(fe);Ot=c(Xs,"\\ud83d\\ude0d"),Xs.forEach(t),At=c(dt,"), instead of the emoji (\u{1F60D}) string. So the unicode string was converted to emoji string during minification!"),dt.forEach(t),st=d(e),j=o(e,"P",{});var Te=l(j);Rt=c(Te,"So I went to my favourite "),V=o(Te,"A",{href:!0,rel:!0});var Ys=l(V);Mt=c(Ys,"Online JavaScript Minifier"),Ys.forEach(t),Gt=c(Te," (by "),X=o(Te,"A",{href:!0,rel:!0});var Zs=l(X);Jt=c(Zs,"skalman"),Zs.forEach(t),zt=c(Te,") to try it out."),Te.forEach(t),it=d(e),ye=o(e,"P",{});var Fs=l(ye);z=o(Fs,"SPAN",{style:!0});var Ks=l(z);be=o(Ks,"PICTURE",{});var vs=l(be);ze=o(vs,"SOURCE",{type:!0,srcset:!0}),E=o(vs,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),vs.forEach(t),Ks.forEach(t),Fs.forEach(t),ot=d(e),q=o(e,"P",{});var ht=l(q);Dt=c(ht,"After some googling, I "),Y=o(ht,"A",{href:!0,rel:!0});var Qs=l(Y);Nt=c(Qs,"found this issue"),Qs.forEach(t),$t=c(ht," which described my scenario perfectly."),ht.forEach(t),at=d(e),ve=o(e,"P",{});var ei=l(ve);D=o(ei,"SPAN",{style:!0});var ti=l(D);ge=o(ti,"PICTURE",{});var gs=l(ge);De=o(gs,"SOURCE",{type:!0,srcset:!0}),I=o(gs,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),gs.forEach(t),ti.forEach(t),ei.forEach(t),lt=d(e),f=o(e,"P",{});var y=l(f);Ht=c(y,"Turned out there is a "),we=o(y,"CODE",{class:!0});var si=l(we);Lt=c(si,"ascii_only"),si.forEach(t),qt=c(y," for "),Z=o(y,"A",{href:!0,rel:!0});var ii=l(Z);Bt=c(ii,"output options"),ii.forEach(t),Wt=c(y,", and it is default to "),ke=o(y,"CODE",{class:!0});var oi=l(ke);Vt=c(oi,"false"),oi.forEach(t),Xt=c(y,". So I set "),xe=o(y,"CODE",{class:!0});var ai=l(xe);Yt=c(ai,"ascii_only"),ai.forEach(t),Zt=c(y," to "),Ee=o(y,"CODE",{class:!0});var li=l(Ee);Ft=c(li,"true"),li.forEach(t),Kt=c(y,", ran webpack, and checked my compiled code, it contained the unicode string ("),Ie=o(y,"CODE",{class:!0});var ri=l(Ie);Qt=c(ri,"\\ud83d\\ude0d"),ri.forEach(t),es=c(y,")! And even when I wrote emoji string (\u{1F60D}) in my source code, it got compiled to unicode as well."),y.forEach(t),rt=d(e),F=o(e,"DIV",{class:!0});var Ei=l(F);Ei.forEach(t),nt=d(e),pt=o(e,"HR",{}),ct=d(e),S=o(e,"SECTION",{});var B=l(S);Ne=o(B,"H2",{});var ni=l(Ne);K=o(ni,"A",{href:!0,id:!0});var pi=l(K);ts=c(pi,"TIL: UglifyJs ascii_only option, use it when you want to escape Unicode characters."),pi.forEach(t),ni.forEach(t),ss=d(B),is=o(B,"HR",{}),os=d(B),Q=o(B,"P",{});var mt=l(Q);as=c(mt,"Why is there a "),Se=o(mt,"CODE",{class:!0});var ci=l(Se);ls=c(ci,"ascii_only"),ci.forEach(t),rs=c(mt," option?"),mt.forEach(t),ns=d(B),N=o(B,"P",{});var Ue=l(N);ps=c(Ue,"My guess is that it takes less space for a unicode character (16\u201317bit) than the escaped ascii characters (6 "),$e=o(Ue,"EM",{});var ui=l($e);cs=c(ui,"8 bit\u200A\u2014\u200A12"),ui.forEach(t),us=c(Ue," bit), that\u2019s why using unicode character is the default option ("),Pe=o(Ue,"CODE",{class:!0});var _i=l(Pe);_s=c(_i,"ascii_only=false"),_i.forEach(t),ds=c(Ue,")."),Ue.forEach(t),B.forEach(t),this.h()},h(){a(je,"type","image/webp"),a(je,"srcset",oo+", "+io+" 2x"),ee(v.src,ks=wi)||a(v,"src",ks),a(v,"srcset",wi+", "+ao+" 2x"),a(v,"loading","lazy"),r(v,"position","absolute"),r(v,"top","0"),r(v,"width","100%"),r(v,"height","100%"),a(v,"alt","The \u{1F60D}\u{1F60D}\u{1F600}\u{1F600}isn\u2019t rendered correctly in chrome extension"),r(A,"display","block"),r(A,"position","relative"),r(A,"padding-top","66.329%"),r(A,"width","100%"),a(Oe,"type","image/webp"),a(Oe,"srcset",to+", "+eo+" 2x"),ee(g.src,xs=gi)||a(g,"src",xs),a(g,"srcset",gi+", "+so+" 2x"),a(g,"loading","lazy"),r(g,"position","absolute"),r(g,"top","0"),r(g,"width","100%"),r(g,"height","100%"),a(g,"alt","problem with the source too"),r(R,"display","block"),r(R,"position","relative"),r(R,"padding-top","52.052%"),r(R,"width","100%"),a(Ae,"type","image/webp"),a(Ae,"srcset",Ki+", "+Fi+" 2x"),ee(w.src,Es=vi)||a(w,"src",Es),a(w,"srcset",vi+", "+Qi+" 2x"),a(w,"loading","lazy"),r(w,"position","absolute"),r(w,"top","0"),r(w,"width","100%"),r(w,"height","100%"),a(w,"alt","The compiled code seems okay!"),r(M,"display","block"),r(M,"position","relative"),r(M,"padding-top","48.957%"),r(M,"width","100%"),a(pe,"class","inline"),a(Re,"type","image/webp"),a(Re,"srcset",Yi+", "+Xi+" 2x"),ee(k.src,Is=bi)||a(k,"src",Is),a(k,"srcset",bi+", "+Zi+" 2x"),a(k,"loading","lazy"),r(k,"position","absolute"),r(k,"top","0"),r(k,"width","100%"),r(k,"height","100%"),a(k,"alt","\u{1F60D}!"),r(G,"display","block"),r(G,"position","relative"),r(G,"padding-top","53.374%"),r(G,"width","100%"),a(W,"href","https://github.com/babel/babel/pull/4478"),a(W,"rel","nofollow"),a(Me,"type","image/webp"),a(Me,"srcset",Wi+", "+Bi+" 2x"),ee(x.src,Ss=yi)||a(x,"src",Ss),a(x,"srcset",yi+", "+Vi+" 2x"),a(x,"loading","lazy"),r(x,"position","absolute"),r(x,"top","0"),r(x,"width","100%"),r(x,"height","100%"),a(x,"alt","babel issue"),r(J,"display","block"),r(J,"position","relative"),r(J,"padding-top","41.375%"),r(J,"width","100%"),a(fe,"class","inline"),a(V,"href","https://skalman.github.io/UglifyJS-online/"),a(V,"rel","nofollow"),a(X,"href","https://github.com/skalman"),a(X,"rel","nofollow"),a(ze,"type","image/webp"),a(ze,"srcset",Li+", "+Hi+" 2x"),ee(E.src,Ps=fi)||a(E,"src",Ps),a(E,"srcset",fi+", "+qi+" 2x"),a(E,"loading","lazy"),r(E,"position","absolute"),r(E,"top","0"),r(E,"width","100%"),r(E,"height","100%"),a(E,"alt","online javasript minifier"),r(z,"display","block"),r(z,"position","relative"),r(z,"padding-top","21.195%"),r(z,"width","100%"),a(Y,"href","https://github.com/mishoo/UglifyJS2/issues/490"),a(Y,"rel","nofollow"),a(De,"type","image/webp"),a(De,"srcset",Ni+", "+Di+" 2x"),ee(I.src,Cs=mi)||a(I,"src",Cs),a(I,"srcset",mi+", "+$i+" 2x"),a(I,"loading","lazy"),r(I,"position","absolute"),r(I,"top","0"),r(I,"width","100%"),r(I,"height","100%"),a(I,"alt","why uglifyjs always compress unicode characters to utf8"),r(D,"display","block"),r(D,"position","relative"),r(D,"padding-top","42.304%"),r(D,"width","100%"),a(we,"class","inline"),a(Z,"href","https://github.com/mishoo/UglifyJS2#output-options"),a(Z,"rel","nofollow"),a(ke,"class","inline"),a(xe,"class","inline"),a(Ee,"class","inline"),a(Ie,"class","inline"),a(F,"class","code-section"),a(K,"href","#til-uglifyjs-ascii-only-option-use-it-when-you-want-to-escape-unicode-characters"),a(K,"id","til-uglifyjs-ascii-only-option-use-it-when-you-want-to-escape-unicode-characters"),a(Se,"class","inline"),a(Pe,"class","inline")},m(e,n){u(e,h,n),s(h,P),u(e,C,n),u(e,T,n),s(T,m),u(e,b,n),u(e,O,n),s(O,A),s(A,se),s(se,je),s(se,v),u(e,He,n),u(e,ie,n),s(ie,ft),u(e,Le,n),u(e,oe,n),s(oe,R),s(R,ae),s(ae,Oe),s(ae,g),u(e,qe,n),u(e,le,n),s(le,yt),u(e,Be,n),u(e,re,n),s(re,M),s(M,ne),s(ne,Ae),s(ne,w),u(e,We,n),u(e,$,n),s($,bt),s($,pe),s(pe,vt),s($,gt),u(e,Ve,n),u(e,ce,n),s(ce,G),s(G,ue),s(ue,Re),s(ue,k),u(e,Xe,n),u(e,_e,n),s(_e,wt),u(e,Ye,n),u(e,H,n),s(H,kt),s(H,W),s(W,xt),s(H,Et),u(e,Ze,n),u(e,de,n),s(de,J),s(J,he),s(he,Me),s(he,x),u(e,Fe,n),u(e,me,n),s(me,It),u(e,Ke,n),u(e,Qe,n),u(e,et,n),u(e,U,n),s(U,St),s(U,Ge),s(Ge,Pt),s(U,Ct),s(U,Je),s(Je,Tt),s(U,Ut),u(e,tt,n),u(e,L,n),s(L,jt),s(L,fe),s(fe,Ot),s(L,At),u(e,st,n),u(e,j,n),s(j,Rt),s(j,V),s(V,Mt),s(j,Gt),s(j,X),s(X,Jt),s(j,zt),u(e,it,n),u(e,ye,n),s(ye,z),s(z,be),s(be,ze),s(be,E),u(e,ot,n),u(e,q,n),s(q,Dt),s(q,Y),s(Y,Nt),s(q,$t),u(e,at,n),u(e,ve,n),s(ve,D),s(D,ge),s(ge,De),s(ge,I),u(e,lt,n),u(e,f,n),s(f,Ht),s(f,we),s(we,Lt),s(f,qt),s(f,Z),s(Z,Bt),s(f,Wt),s(f,ke),s(ke,Vt),s(f,Xt),s(f,xe),s(xe,Yt),s(f,Zt),s(f,Ee),s(Ee,Ft),s(f,Kt),s(f,Ie),s(Ie,Qt),s(f,es),u(e,rt,n),u(e,F,n),F.innerHTML=xi,u(e,nt,n),u(e,pt,n),u(e,ct,n),u(e,S,n),s(S,Ne),s(Ne,K),s(K,ts),s(S,ss),s(S,is),s(S,os),s(S,Q),s(Q,as),s(Q,Se),s(Se,ls),s(Q,rs),s(S,ns),s(S,N),s(N,ps),s(N,$e),s($e,cs),s(N,us),s(N,Pe),s(Pe,_s),s(N,ds)},p:Gi,d(e){e&&t(h),e&&t(C),e&&t(T),e&&t(b),e&&t(O),e&&t(He),e&&t(ie),e&&t(Le),e&&t(oe),e&&t(qe),e&&t(le),e&&t(Be),e&&t(re),e&&t(We),e&&t($),e&&t(Ve),e&&t(ce),e&&t(Xe),e&&t(_e),e&&t(Ye),e&&t(H),e&&t(Ze),e&&t(de),e&&t(Fe),e&&t(me),e&&t(Ke),e&&t(Qe),e&&t(et),e&&t(U),e&&t(tt),e&&t(L),e&&t(st),e&&t(j),e&&t(it),e&&t(ye),e&&t(ot),e&&t(q),e&&t(at),e&&t(ve),e&&t(lt),e&&t(f),e&&t(rt),e&&t(F),e&&t(nt),e&&t(pt),e&&t(ct),e&&t(S)}}}function ro(te){let h,P;const C=[te[0],ki];let T={$$slots:{default:[lo]},$$scope:{ctx:te}};for(let m=0;m<C.length;m+=1)T=ws(T,C[m]);return h=new Ji({props:T}),{c(){Ci(h.$$.fragment)},l(m){Ti(h.$$.fragment,m)},m(m,b){Ui(h,m,b),P=!0},p(m,[b]){const O=b&1?ji(C,[b&1&&di(m[0]),b&0&&di(ki)]):{};b&2&&(O.$$scope={dirty:b,ctx:m}),h.$set(O)},i(m){P||(Oi(h.$$.fragment,m),P=!0)},o(m){Ai(h.$$.fragment,m),P=!1},d(m){Ri(h,m)}}}const ki={title:"The `ascii_only` option in uglify-js",date:"2018-10-27T08:00:00Z",description:"that get my emoji showing in my chrome extension",label:"blog",tableOfContents:[{link:"til-uglifyjs-ascii-only-option-use-it-when-you-want-to-escape-unicode-characters",title:"TIL: UglifyJs ascii_only option, use it when you want to escape Unicode characters."}]};function no(te,h,P){return Mi("blog",{image:zi}),te.$$set=C=>{P(0,h=ws(ws({},h),hi(C)))},h=hi(h),[h]}class fo extends Ii{constructor(h){super();Si(this,h,no,ro,Pi,{})}}export{fo as default,ki as metadata};
